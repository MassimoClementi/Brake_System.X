

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 06 16:53:34 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  0025B8                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _delay_quartz_frequency_value
    46  0025B8  10                 	db	16
    47                           
    48                           ;initializer for _number_of_measures
    49  0025B9  08                 	db	8
    50  0000                     _RXB1CON	set	3920
    51  0000                     _RXB1CONbits	set	3920
    52  0000                     _RXB1D0	set	3926
    53  0000                     _RXB1D1	set	3927
    54  0000                     _RXB1D2	set	3928
    55  0000                     _RXB1D3	set	3929
    56  0000                     _RXB1D4	set	3930
    57  0000                     _RXB1D5	set	3931
    58  0000                     _RXB1D6	set	3932
    59  0000                     _RXB1D7	set	3933
    60  0000                     _RXB1DLC	set	3925
    61  0000                     _RXB1DLCbits	set	3925
    62  0000                     _RXB1EIDH	set	3923
    63  0000                     _RXB1EIDL	set	3924
    64  0000                     _RXB1SIDH	set	3921
    65  0000                     _RXB1SIDL	set	3922
    66  0000                     _RXB1SIDLbits	set	3922
    67  0000                     _RXF0EIDH	set	3842
    68  0000                     _RXF0EIDL	set	3843
    69  0000                     _RXF0SIDH	set	3840
    70  0000                     _RXF0SIDL	set	3841
    71  0000                     _RXF0SIDLbits	set	3841
    72  0000                     _RXF1EIDH	set	3846
    73  0000                     _RXF1EIDL	set	3847
    74  0000                     _RXF1SIDH	set	3844
    75  0000                     _RXF1SIDL	set	3845
    76  0000                     _RXF1SIDLbits	set	3845
    77  0000                     _RXF2EIDH	set	3850
    78  0000                     _RXF2EIDL	set	3851
    79  0000                     _RXF2SIDH	set	3848
    80  0000                     _RXF2SIDL	set	3849
    81  0000                     _RXF2SIDLbits	set	3849
    82  0000                     _RXF3EIDH	set	3854
    83  0000                     _RXF3EIDL	set	3855
    84  0000                     _RXF3SIDH	set	3852
    85  0000                     _RXF3SIDL	set	3853
    86  0000                     _RXF3SIDLbits	set	3853
    87  0000                     _RXF4EIDH	set	3858
    88  0000                     _RXF4EIDL	set	3859
    89  0000                     _RXF4SIDH	set	3856
    90  0000                     _RXF4SIDL	set	3857
    91  0000                     _RXF4SIDLbits	set	3857
    92  0000                     _RXF5EIDH	set	3862
    93  0000                     _RXF5EIDL	set	3863
    94  0000                     _RXF5SIDH	set	3860
    95  0000                     _RXF5SIDL	set	3861
    96  0000                     _RXF5SIDLbits	set	3861
    97  0000                     _RXM0EIDH	set	3866
    98  0000                     _RXM0EIDL	set	3867
    99  0000                     _RXM0SIDH	set	3864
   100  0000                     _RXM0SIDL	set	3865
   101  0000                     _RXM0SIDLbits	set	3865
   102  0000                     _RXM1EIDH	set	3870
   103  0000                     _RXM1EIDL	set	3871
   104  0000                     _RXM1SIDH	set	3868
   105  0000                     _RXM1SIDL	set	3869
   106  0000                     _RXM1SIDLbits	set	3869
   107  0000                     _TXB0CONbits	set	3904
   108  0000                     _TXB0D0	set	3910
   109  0000                     _TXB0D1	set	3911
   110  0000                     _TXB0D2	set	3912
   111  0000                     _TXB0D3	set	3913
   112  0000                     _TXB0D4	set	3914
   113  0000                     _TXB0D5	set	3915
   114  0000                     _TXB0D6	set	3916
   115  0000                     _TXB0D7	set	3917
   116  0000                     _TXB0DLC	set	3909
   117  0000                     _TXB0DLCbits	set	3909
   118  0000                     _TXB0EIDH	set	3907
   119  0000                     _TXB0EIDL	set	3908
   120  0000                     _TXB0SIDH	set	3905
   121  0000                     _TXB0SIDL	set	3906
   122  0000                     _TXB0SIDLbits	set	3906
   123  0000                     _TXB1CONbits	set	3888
   124  0000                     _TXB1D0	set	3894
   125  0000                     _TXB1D1	set	3895
   126  0000                     _TXB1D2	set	3896
   127  0000                     _TXB1D3	set	3897
   128  0000                     _TXB1D4	set	3898
   129  0000                     _TXB1D5	set	3899
   130  0000                     _TXB1D6	set	3900
   131  0000                     _TXB1D7	set	3901
   132  0000                     _TXB1DLC	set	3893
   133  0000                     _TXB1DLCbits	set	3893
   134  0000                     _TXB1EIDH	set	3891
   135  0000                     _TXB1EIDL	set	3892
   136  0000                     _TXB1SIDH	set	3889
   137  0000                     _TXB1SIDL	set	3890
   138  0000                     _TXB1SIDLbits	set	3890
   139  0000                     _TXB2CONbits	set	3872
   140  0000                     _TXB2D0	set	3878
   141  0000                     _TXB2D1	set	3879
   142  0000                     _TXB2D2	set	3880
   143  0000                     _TXB2D3	set	3881
   144  0000                     _TXB2D4	set	3882
   145  0000                     _TXB2D5	set	3883
   146  0000                     _TXB2D6	set	3884
   147  0000                     _TXB2D7	set	3885
   148  0000                     _TXB2DLC	set	3877
   149  0000                     _TXB2DLCbits	set	3877
   150  0000                     _TXB2EIDH	set	3875
   151  0000                     _TXB2EIDL	set	3876
   152  0000                     _TXB2SIDH	set	3873
   153  0000                     _TXB2SIDL	set	3874
   154  0000                     _TXB2SIDLbits	set	3874
   155  0000                     _ADCON0bits	set	4034
   156  0000                     _ADCON1	set	4033
   157  0000                     _ADCON2bits	set	4032
   158  0000                     _ADRESH	set	4036
   159  0000                     _BRGCON1	set	3952
   160  0000                     _BRGCON2	set	3953
   161  0000                     _BRGCON2bits	set	3953
   162  0000                     _BRGCON3	set	3954
   163  0000                     _BRGCON3bits	set	3954
   164  0000                     _CANCON	set	3951
   165  0000                     _CANCONbits	set	3951
   166  0000                     _CANSTAT	set	3950
   167  0000                     _COMSTATbits	set	3956
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _INTCONbits	set	4082
   170  0000                     _IPR2bits	set	4002
   171  0000                     _IPR3bits	set	4005
   172  0000                     _LATA	set	3977
   173  0000                     _LATB	set	3978
   174  0000                     _LATC	set	3979
   175  0000                     _LATD	set	3980
   176  0000                     _LATE	set	3981
   177  0000                     _PIE2bits	set	4000
   178  0000                     _PIE3bits	set	4003
   179  0000                     _PIR2bits	set	4001
   180  0000                     _PIR3bits	set	4004
   181  0000                     _PORTBbits	set	3969
   182  0000                     _PORTCbits	set	3970
   183  0000                     _RCONbits	set	4048
   184  0000                     _RXB0CON	set	3936
   185  0000                     _RXB0CONbits	set	3936
   186  0000                     _RXB0D0	set	3942
   187  0000                     _RXB0D1	set	3943
   188  0000                     _RXB0D2	set	3944
   189  0000                     _RXB0D3	set	3945
   190  0000                     _RXB0D4	set	3946
   191  0000                     _RXB0D5	set	3947
   192  0000                     _RXB0D6	set	3948
   193  0000                     _RXB0D7	set	3949
   194  0000                     _RXB0DLC	set	3941
   195  0000                     _RXB0DLCbits	set	3941
   196  0000                     _RXB0EIDH	set	3939
   197  0000                     _RXB0EIDL	set	3940
   198  0000                     _RXB0SIDH	set	3937
   199  0000                     _RXB0SIDL	set	3938
   200  0000                     _RXB0SIDLbits	set	3938
   201  0000                     _RXERRCNT	set	3957
   202  0000                     _T0CON	set	4053
   203  0000                     _T0CONbits	set	4053
   204  0000                     _T3CON	set	4017
   205  0000                     _TMR0H	set	4055
   206  0000                     _TMR0L	set	4054
   207  0000                     _TMR3H	set	4019
   208  0000                     _TMR3L	set	4018
   209  0000                     _TRISA	set	3986
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISD	set	3989
   213  0000                     _TRISE	set	3990
   214  0000                     _TXERRCNT	set	3958
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  002468                     __pcinit:
   220                           	opt stack 0
   221  002468                     start_initialization:
   222                           	opt stack 0
   223  002468                     __initialization:
   224                           	opt stack 0
   225                           
   226                           ; Clear objects allocated to BANK0 (35 bytes)
   227  002468  EE00  F086         	lfsr	0,__pbssBANK0
   228  00246C  0E23               	movlw	35
   229  00246E                     clear_0:
   230  00246E  6AEE               	clrf	postinc0,c
   231  002470  06E8               	decf	wreg,f,c
   232  002472  E1FD               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   235  002474  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   236                           
   237                           ; Clear objects allocated to COMRAM (24 bytes)
   238  002476  EE00  F032         	lfsr	0,__pbssCOMRAM
   239  00247A  0E18               	movlw	24
   240  00247C                     clear_1:
   241  00247C  6AEE               	clrf	postinc0,c
   242  00247E  06E8               	decf	wreg,f,c
   243  002480  E1FD               	bnz	clear_1
   244                           
   245                           ; Initialize objects allocated to BANK0 (2 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247  002482  0EB8               	movlw	low __pidataBANK0
   248  002484  6EF6               	movwf	tblptrl,c
   249  002486  0E25               	movlw	high __pidataBANK0
   250  002488  6EF7               	movwf	tblptrh,c
   251  00248A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252  00248C  6EF8               	movwf	tblptru,c
   253  00248E  0009               	tblrd		*+	;fetch initializer
   254  002490  CFF5 F0A9          	movff	tablat,__pdataBANK0
   255  002494  0009               	tblrd		*+	;fetch initializer
   256  002496  CFF5 F0AA          	movff	tablat,__pdataBANK0+1
   257  00249A                     end_of_initialization:
   258                           	opt stack 0
   259  00249A                     __end_of__initialization:
   260                           	opt stack 0
   261  00249A  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262  00249C  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263  00249E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  0024A0  6EF8               	movwf	tblptru,c
   265  0024A2  0100               	movlb	0
   266  0024A4  EFBF  F00F         	goto	_main	;jump to C main() function
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	bitbssCOMRAM
   275  000250                     __pbitbssCOMRAM:
   276                           	opt stack 0
   277  000250                     _Tx_retry:
   278                           	opt stack 0
   279  000250                     	ds	1
   280  000251                     _remote_frame:
   281                           	opt stack 0
   282  000251                     	ds	1
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	bssCOMRAM
   291  000032                     __pbssCOMRAM:
   292                           	opt stack 0
   293  000032                     _timer_off:
   294                           	opt stack 0
   295  000032                     	ds	4
   296  000036                     _timer_on:
   297                           	opt stack 0
   298  000036                     	ds	4
   299  00003A                     _msg:
   300                           	opt stack 0
   301  00003A                     	ds	15
   302  000049                     _brake_value_degree:
   303                           	opt stack 0
   304  000049                     	ds	1
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	bssBANK0
   313  000086                     __pbssBANK0:
   314                           	opt stack 0
   315  000086                     _TMR3_counter:
   316                           	opt stack 0
   317  000086                     	ds	4
   318  00008A                     _TMR3_stored:
   319                           	opt stack 0
   320  00008A                     	ds	4
   321  00008E                     _id:
   322                           	opt stack 0
   323  00008E                     	ds	4
   324  000092                     _clock_counter_reference:
   325                           	opt stack 0
   326  000092                     	ds	2
   327  000094                     _correction_factor:
   328                           	opt stack 0
   329  000094                     	ds	2
   330  000096                     _partial_sum:
   331                           	opt stack 0
   332  000096                     	ds	2
   333  000098                     _ADC_wait_counter:
   334                           	opt stack 0
   335  000098                     	ds	1
   336  000099                     _ADC_wait_factor:
   337                           	opt stack 0
   338  000099                     	ds	1
   339  00009A                     _brake_signal_CAN:
   340                           	opt stack 0
   341  00009A                     	ds	1
   342  00009B                     _brake_value_inc:
   343                           	opt stack 0
   344  00009B                     	ds	1
   345  00009C                     _home_position:
   346                           	opt stack 0
   347  00009C                     	ds	1
   348  00009D                     _i:
   349                           	opt stack 0
   350  00009D                     	ds	1
   351  00009E                     _read:
   352                           	opt stack 0
   353  00009E                     	ds	1
   354  00009F                     _wait_time:
   355                           	opt stack 0
   356  00009F                     	ds	1
   357  0000A0                     _status_array:
   358                           	opt stack 0
   359  0000A0                     	ds	8
   360  0000A8                     _brake_value:
   361                           	opt stack 0
   362  0000A8                     	ds	1
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	dataBANK0
   371  0000A9                     __pdataBANK0:
   372                           	opt stack 0
   373  0000A9                     _delay_quartz_frequency_value:
   374                           	opt stack 0
   375  0000A9                     	ds	1
   376  0000AA                     _number_of_measures:
   377                           	opt stack 0
   378  0000AA                     	ds	1
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           
   386                           	psect	cstackBANK0
   387  000060                     __pcstackBANK0:
   388                           	opt stack 0
   389  000060                     ?___wmul:
   390                           	opt stack 0
   391  000060                     ?___awdiv:
   392                           	opt stack 0
   393  000060                     ?___lwdiv:
   394                           	opt stack 0
   395  000060                     CANOperationMode@mode:
   396                           	opt stack 0
   397  000060                     _CANisTxReady$2968:
   398                           	opt stack 0
   399  000060                     ___wmul@multiplier:
   400                           	opt stack 0
   401  000060                     ___awdiv@dividend:
   402                           	opt stack 0
   403  000060                     ___lwdiv@dividend:
   404                           	opt stack 0
   405  000060                     CANsendMessage@identifier:
   406                           	opt stack 0
   407  000060                     CANSetMask@mask:
   408                           	opt stack 0
   409  000060                     CANSetFilter@filter:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x0
   413  000060                     	ds	2
   414  000062                     ___wmul@multiplicand:
   415                           	opt stack 0
   416  000062                     ___awdiv@divisor:
   417                           	opt stack 0
   418  000062                     ___lwdiv@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422  000062                     	ds	2
   423  000064                     CANSetMask@type:
   424                           	opt stack 0
   425  000064                     CANSetFilter@type:
   426                           	opt stack 0
   427  000064                     ___awdiv@counter:
   428                           	opt stack 0
   429  000064                     CANsendMessage@data:
   430                           	opt stack 0
   431  000064                     ___wmul@product:
   432                           	opt stack 0
   433  000064                     ___lwdiv@quotient:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x4
   437  000064                     	ds	1
   438  000065                     ??_CANSetMask:
   439  000065                     ??_CANSetFilter:
   440  000065                     ___awdiv@sign:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x5
   444  000065                     	ds	1
   445  000066                     CANsendMessage@dataLength:
   446                           	opt stack 0
   447  000066                     ___lwdiv@counter:
   448                           	opt stack 0
   449  000066                     delay_ms@value_ms:
   450                           	opt stack 0
   451  000066                     ___awdiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x6
   455  000066                     	ds	1
   456  000067                     ??_ADC_Read:
   457  000067                     CANsendMessage@flags:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x7
   461  000067                     	ds	1
   462  000068                     ??_CANsendMessage:
   463  000068                     
   464                           ; 0 bytes @ 0x8
   465  000068                     	ds	1
   466  000069                     CANSetMask@numBuffer:
   467                           	opt stack 0
   468  000069                     CANSetFilter@numBuffer:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x9
   472  000069                     	ds	1
   473  00006A                     CANSetMask@tamp:
   474                           	opt stack 0
   475  00006A                     CANSetFilter@tamp:
   476                           	opt stack 0
   477                           
   478                           ; 4 bytes @ 0xA
   479  00006A                     	ds	2
   480  00006C                     CANsendMessage@tamp:
   481                           	opt stack 0
   482                           
   483                           ; 4 bytes @ 0xC
   484  00006C                     	ds	2
   485  00006E                     CANInitialize@phaseSeg1:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0xE
   489  00006E                     	ds	1
   490  00006F                     CANInitialize@phaseSeg2:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0xF
   494  00006F                     	ds	1
   495  000070                     CANInitialize@SJW:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x10
   499  000070                     	ds	1
   500  000071                     CANInitialize@BRP:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x11
   504  000071                     	ds	1
   505  000072                     CANInitialize@flags:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x12
   509  000072                     	ds	1
   510  000073                     ??_CANInitialize:
   511                           
   512                           ; 0 bytes @ 0x13
   513  000073                     	ds	4
   514  000077                     CANInitialize@propSeg:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x17
   518  000077                     	ds	1
   519  000078                     CANInitialize@FilterConfig1:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x18
   523  000078                     	ds	1
   524  000079                     CANInitialize@FilterConfig2:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x19
   528  000079                     	ds	1
   529  00007A                     ??_main:
   530                           
   531                           ; 0 bytes @ 0x1A
   532  00007A                     	ds	12
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           
   540                           	psect	cstackCOMRAM
   541  000001                     __pcstackCOMRAM:
   542                           	opt stack 0
   543  000001                     ??_ISR_Bassa:
   544  000001                     
   545                           ; 2 bytes @ 0x0
   546  000001                     	ds	17
   547  000012                     ?i2___wmul:
   548                           	opt stack 0
   549  000012                     _CANisRxReady$2970:
   550                           	opt stack 0
   551  000012                     CANreceiveMessage@msg:
   552                           	opt stack 0
   553  000012                     WriteTimer0@timer0:
   554                           	opt stack 0
   555  000012                     i2___wmul@multiplier:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x11
   559  000012                     	ds	2
   560  000014                     ??_CANreceiveMessage:
   561  000014                     WriteTimer0@timer:
   562                           	opt stack 0
   563  000014                     i2___wmul@multiplicand:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x13
   567  000014                     	ds	2
   568  000016                     i2___wmul@product:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x15
   572  000016                     	ds	2
   573  000018                     ?i2___awdiv:
   574                           	opt stack 0
   575  000018                     i2___awdiv@dividend:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x17
   579  000018                     	ds	2
   580  00001A                     i2___awdiv@divisor:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x19
   584  00001A                     	ds	2
   585  00001C                     CANreceiveMessage@error:
   586                           	opt stack 0
   587  00001C                     i2___awdiv@counter:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x1B
   591  00001C                     	ds	1
   592  00001D                     CANreceiveMessage@tamp:
   593                           	opt stack 0
   594  00001D                     i2___awdiv@sign:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x1C
   598  00001D                     	ds	1
   599  00001E                     i2___awdiv@quotient:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1D
   603  00001E                     	ds	2
   604  000020                     ??_ISR_Alta:
   605                           
   606                           ; 0 bytes @ 0x1F
   607  000020                     	ds	18
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           postinc0	equ	0xFEE
   613                           wreg	equ	0xFE8
   614                           
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 142 in file "Brake_System.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  2  645[None  ] int 
   627 ;; Registers used:
   628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   634 ;;      Params:         0       0       0       0
   635 ;;      Locals:         0       0       0       0
   636 ;;      Temps:          0      12       0       0
   637 ;;      Totals:         0      12       0       0
   638 ;;Total ram usage:       12 bytes
   639 ;; Hardware stack levels required when called:    6
   640 ;; This function calls:
   641 ;;		_ADC_Read
   642 ;;		_CANisRXwarningON
   643 ;;		_CANisTXwarningON
   644 ;;		___awdiv
   645 ;;		_board_initialization
   646 ;;		_status_ok
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text0
   653  001F7E                     __ptext0:
   654                           	opt stack 0
   655  001F7E                     _main:
   656                           	opt stack 25
   657                           
   658                           ;Brake_System.c: 143: board_initialization();
   659                           
   660                           ;incstack = 0
   661  001F7E  ECF1  F010         	call	_board_initialization	;wreg free
   662                           
   663                           ;Brake_System.c: 144: ADC_Read();
   664  001F82  EC43  F011         	call	_ADC_Read	;wreg free
   665                           
   666                           ;Brake_System.c: 146: TMR0H = 0xFF;
   667  001F86  68D7               	setf	4055,c	;volatile
   668                           
   669                           ;Brake_System.c: 147: TMR0L = 0xFE;
   670  001F88  0EFE               	movlw	254
   671  001F8A  6ED6               	movwf	4054,c	;volatile
   672                           
   673                           ;Brake_System.c: 148: T0CONbits.TMR0ON = 1;
   674  001F8C  8ED5               	bsf	4053,7,c	;volatile
   675  001F8E                     l3678:
   676                           
   677                           ;Brake_System.c: 151: if ((remote_frame == 1)&&(Tx_retry = 1)) {
   678  001F8E  A24A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   679  001F90  D004               	goto	l3684
   680  001F92  804A               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   681  001F94  B04A               	btfsc	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   682                           
   683                           ;Brake_System.c: 152: status_ok();
   684  001F96  EC03  F012         	call	_status_ok	;wreg free
   685  001F9A                     l3684:
   686                           
   687                           ;Brake_System.c: 153: }
   688                           ;Brake_System.c: 155: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   689  001F9A  ECD0  F012         	call	_CANisTXwarningON	;wreg free
   690  001F9E  06E8               	decf	wreg,f,c
   691  001FA0  B4D8               	btfsc	status,2,c
   692  001FA2  D004               	goto	l650
   693  001FA4  ECD6  F012         	call	_CANisRXwarningON	;wreg free
   694  001FA8  06E8               	decf	wreg,f,c
   695  001FAA  B4D8               	btfsc	status,2,c
   696  001FAC                     l650:
   697                           
   698                           ;Brake_System.c: 156: PORTBbits.RB0 = 1;
   699  001FAC  8081               	bsf	3969,0,c	;volatile
   700                           
   701                           ;Brake_System.c: 157: }
   702                           ;Brake_System.c: 159: if (ADC_wait_counter = 255) {
   703  001FAE  0100               	movlb	0	; () banked
   704  001FB0  6998               	setf	_ADC_wait_counter& (0+255),b
   705                           
   706                           ; BSR set to: 0
   707                           ;Brake_System.c: 160: ADC_wait_factor++;
   708  001FB2  0100               	movlb	0	; () banked
   709  001FB4  2B99               	incf	_ADC_wait_factor& (0+255),f,b
   710                           
   711                           ; BSR set to: 0
   712                           ;Brake_System.c: 161: if (ADC_wait_factor = 4) {
   713  001FB6  0E04               	movlw	4
   714  001FB8  0100               	movlb	0	; () banked
   715  001FBA  6F99               	movwf	_ADC_wait_factor& (0+255),b
   716                           
   717                           ; BSR set to: 0
   718                           ;Brake_System.c: 162: ADC_Read();
   719  001FBC  EC43  F011         	call	_ADC_Read	;wreg free
   720                           
   721                           ;Brake_System.c: 163: ADC_wait_factor = 0;
   722  001FC0  0E00               	movlw	0
   723  001FC2  0100               	movlb	0	; () banked
   724  001FC4  6F99               	movwf	_ADC_wait_factor& (0+255),b
   725                           
   726                           ; BSR set to: 0
   727                           ;Brake_System.c: 164: }
   728                           ;Brake_System.c: 165: ADC_wait_counter = 0;
   729                           
   730                           ; BSR set to: 0
   731  001FC6  0E00               	movlw	0
   732  001FC8  0100               	movlb	0	; () banked
   733  001FCA  6F98               	movwf	_ADC_wait_counter& (0+255),b
   734                           
   735                           ; BSR set to: 0
   736                           ;Brake_System.c: 166: }
   737                           ;Brake_System.c: 168: wait_time = 100;
   738                           
   739                           ; BSR set to: 0
   740  001FCC  0E64               	movlw	100
   741  001FCE  0100               	movlb	0	; () banked
   742  001FD0  6F9F               	movwf	_wait_time& (0+255),b
   743                           
   744                           ; BSR set to: 0
   745                           ;Brake_System.c: 170: if ((TMR3_counter - TMR3_stored) > (wait_time / 10)) {
   746  001FD2  C08A  F07A         	movff	_TMR3_stored,??_main
   747  001FD6  C08B  F07B         	movff	_TMR3_stored+1,??_main+1
   748  001FDA  C08C  F07C         	movff	_TMR3_stored+2,??_main+2
   749  001FDE  C08D  F07D         	movff	_TMR3_stored+3,??_main+3
   750  001FE2  0100               	movlb	0	; () banked
   751  001FE4  1F7A               	comf	??_main& (0+255),f,b
   752  001FE6  1F7B               	comf	(??_main+1)& (0+255),f,b
   753  001FE8  1F7C               	comf	(??_main+2)& (0+255),f,b
   754  001FEA  1F7D               	comf	(??_main+3)& (0+255),f,b
   755  001FEC  2B7A               	incf	??_main& (0+255),f,b
   756  001FEE  0E00               	movlw	0
   757  001FF0  237B               	addwfc	(??_main+1)& (0+255),f,b
   758  001FF2  237C               	addwfc	(??_main+2)& (0+255),f,b
   759  001FF4  237D               	addwfc	(??_main+3)& (0+255),f,b
   760  001FF6  0100               	movlb	0	; () banked
   761  001FF8  5186               	movf	_TMR3_counter& (0+255),w,b
   762  001FFA  0100               	movlb	0	; () banked
   763  001FFC  257A               	addwf	??_main& (0+255),w,b
   764  001FFE  0100               	movlb	0	; () banked
   765  002000  6F7E               	movwf	(??_main+4)& (0+255),b
   766  002002  0100               	movlb	0	; () banked
   767  002004  5187               	movf	(_TMR3_counter+1)& (0+255),w,b
   768  002006  0100               	movlb	0	; () banked
   769  002008  217B               	addwfc	(??_main+1)& (0+255),w,b
   770  00200A  0100               	movlb	0	; () banked
   771  00200C  6F7F               	movwf	(??_main+5)& (0+255),b
   772  00200E  0100               	movlb	0	; () banked
   773  002010  5188               	movf	(_TMR3_counter+2)& (0+255),w,b
   774  002012  0100               	movlb	0	; () banked
   775  002014  217C               	addwfc	(??_main+2)& (0+255),w,b
   776  002016  0100               	movlb	0	; () banked
   777  002018  6F80               	movwf	(??_main+6)& (0+255),b
   778  00201A  0100               	movlb	0	; () banked
   779  00201C  5189               	movf	(_TMR3_counter+3)& (0+255),w,b
   780  00201E  0100               	movlb	0	; () banked
   781  002020  217D               	addwfc	(??_main+3)& (0+255),w,b
   782  002022  0100               	movlb	0	; () banked
   783  002024  6F81               	movwf	(??_main+7)& (0+255),b
   784  002026  C09F  F060         	movff	_wait_time,___awdiv@dividend
   785  00202A  0100               	movlb	0	; () banked
   786  00202C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   787  00202E  0E00               	movlw	0
   788  002030  0100               	movlb	0	; () banked
   789  002032  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   790  002034  0E0A               	movlw	10
   791  002036  6F62               	movwf	___awdiv@divisor& (0+255),b
   792  002038  EC92  F010         	call	___awdiv	;wreg free
   793  00203C  0100               	movlb	0	; () banked
   794  00203E  C060  F082         	movff	?___awdiv,??_main+8
   795  002042  0100               	movlb	0	; () banked
   796  002044  C061  F083         	movff	?___awdiv+1,??_main+9
   797  002048  0E00               	movlw	0
   798  00204A  0100               	movlb	0	; () banked
   799  00204C  BF83               	btfsc	(??_main+9)& (0+255),7,b
   800  00204E  0EFF               	movlw	255
   801  002050  6F84               	movwf	(??_main+10)& (0+255),b
   802  002052  6F85               	movwf	(??_main+11)& (0+255),b
   803  002054  0100               	movlb	0	; () banked
   804  002056  517E               	movf	(??_main+4)& (0+255),w,b
   805  002058  0100               	movlb	0	; () banked
   806  00205A  5D82               	subwf	(??_main+8)& (0+255),w,b
   807  00205C  0100               	movlb	0	; () banked
   808  00205E  517F               	movf	(??_main+5)& (0+255),w,b
   809  002060  0100               	movlb	0	; () banked
   810  002062  5983               	subwfb	(??_main+9)& (0+255),w,b
   811  002064  0100               	movlb	0	; () banked
   812  002066  5180               	movf	(??_main+6)& (0+255),w,b
   813  002068  0100               	movlb	0	; () banked
   814  00206A  5984               	subwfb	(??_main+10)& (0+255),w,b
   815  00206C  0100               	movlb	0	; () banked
   816  00206E  5181               	movf	(??_main+7)& (0+255),w,b
   817  002070  0100               	movlb	0	; () banked
   818  002072  5985               	subwfb	(??_main+11)& (0+255),w,b
   819  002074  B0D8               	btfsc	status,0,c
   820  002076  D78B               	goto	l3678
   821                           
   822                           ; BSR set to: 0
   823                           ;Brake_System.c: 172: if ((brake_signal_CAN == 00)&&((brake_value_inc / 2) > 1)) {
   824  002078  0100               	movlb	0	; () banked
   825  00207A  519A               	movf	_brake_signal_CAN& (0+255),w,b
   826  00207C  A4D8               	btfss	status,2,c
   827  00207E  D047               	goto	l3710
   828                           
   829                           ; BSR set to: 0
   830  002080  C09B  F060         	movff	_brake_value_inc,___awdiv@dividend
   831  002084  0100               	movlb	0	; () banked
   832  002086  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   833  002088  0E00               	movlw	0
   834  00208A  0100               	movlb	0	; () banked
   835  00208C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   836  00208E  0E02               	movlw	2
   837  002090  6F62               	movwf	___awdiv@divisor& (0+255),b
   838  002092  EC92  F010         	call	___awdiv	;wreg free
   839  002096  0100               	movlb	0	; () banked
   840  002098  BF61               	btfsc	(?___awdiv+1)& (0+255),7,b
   841  00209A  D039               	goto	l3710
   842  00209C  0100               	movlb	0	; () banked
   843  00209E  5161               	movf	(?___awdiv+1)& (0+255),w,b
   844  0020A0  E105               	bnz	u4200
   845  0020A2  0E02               	movlw	2
   846  0020A4  0100               	movlb	0	; () banked
   847  0020A6  5D60               	subwf	?___awdiv& (0+255),w,b
   848  0020A8  A0D8               	btfss	status,0,c
   849  0020AA  D031               	goto	l3710
   850  0020AC                     u4200:
   851                           
   852                           ; BSR set to: 0
   853                           ;Brake_System.c: 173: brake_value_inc = brake_value_inc / 2;
   854  0020AC  C09B  F060         	movff	_brake_value_inc,___awdiv@dividend
   855  0020B0  0100               	movlb	0	; () banked
   856  0020B2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   857  0020B4  0E00               	movlw	0
   858  0020B6  0100               	movlb	0	; () banked
   859  0020B8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   860  0020BA  0E02               	movlw	2
   861  0020BC  6F62               	movwf	___awdiv@divisor& (0+255),b
   862  0020BE  EC92  F010         	call	___awdiv	;wreg free
   863  0020C2  0100               	movlb	0	; () banked
   864  0020C4  5160               	movf	?___awdiv& (0+255),w,b
   865  0020C6  0100               	movlb	0	; () banked
   866  0020C8  6F9B               	movwf	_brake_value_inc& (0+255),b
   867                           
   868                           ;Brake_System.c: 174: brake_value = (brake_value_inc / 17) + home_position;
   869  0020CA  C09B  F060         	movff	_brake_value_inc,___awdiv@dividend
   870  0020CE  0100               	movlb	0	; () banked
   871  0020D0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   872  0020D2  0E00               	movlw	0
   873  0020D4  0100               	movlb	0	; () banked
   874  0020D6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   875  0020D8  0E11               	movlw	17
   876  0020DA  6F62               	movwf	___awdiv@divisor& (0+255),b
   877  0020DC  EC92  F010         	call	___awdiv	;wreg free
   878  0020E0  0100               	movlb	0	; () banked
   879  0020E2  5160               	movf	?___awdiv& (0+255),w,b
   880  0020E4  0100               	movlb	0	; () banked
   881  0020E6  259C               	addwf	_home_position& (0+255),w,b
   882  0020E8  0100               	movlb	0	; () banked
   883  0020EA  6FA8               	movwf	_brake_value& (0+255),b
   884                           
   885                           ; BSR set to: 0
   886                           ;Brake_System.c: 175: brake_value_degree = (255 * brake_value) / 180;
   887  0020EC  0100               	movlb	0	; () banked
   888  0020EE  51A8               	movf	_brake_value& (0+255),w,b
   889  0020F0  0DFF               	mullw	255
   890  0020F2  CFF3 F060          	movff	prodl,___awdiv@dividend
   891  0020F6  CFF4 F061          	movff	prodh,___awdiv@dividend+1
   892  0020FA  0E00               	movlw	0
   893  0020FC  0100               	movlb	0	; () banked
   894  0020FE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   895  002100  0EB4               	movlw	180
   896  002102  6F62               	movwf	___awdiv@divisor& (0+255),b
   897  002104  EC92  F010         	call	___awdiv	;wreg free
   898  002108  0100               	movlb	0	; () banked
   899  00210A  5160               	movf	?___awdiv& (0+255),w,b
   900  00210C  6E49               	movwf	_brake_value_degree,c
   901  00210E                     l3710:
   902                           
   903                           ; BSR set to: 0
   904                           ;Brake_System.c: 177: }
   905                           ;Brake_System.c: 190: ADC_wait_counter++;
   906  00210E  0100               	movlb	0	; () banked
   907  002110  2B98               	incf	_ADC_wait_counter& (0+255),f,b
   908                           
   909                           ; BSR set to: 0
   910                           ;Brake_System.c: 191: TMR3_stored = TMR3_counter;
   911  002112  C086  F08A         	movff	_TMR3_counter,_TMR3_stored
   912  002116  C087  F08B         	movff	_TMR3_counter+1,_TMR3_stored+1
   913  00211A  C088  F08C         	movff	_TMR3_counter+2,_TMR3_stored+2
   914  00211E  C089  F08D         	movff	_TMR3_counter+3,_TMR3_stored+3
   915                           
   916                           ; BSR set to: 0
   917                           
   918                           ; BSR set to: 0
   919  002122  D735               	goto	l3678
   920  002124                     __end_of_main:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           prodh	equ	0xFF4
   927                           prodl	equ	0xFF3
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           status	equ	0xFD8
   931                           
   932 ;; *************** function _status_ok *****************
   933 ;; Defined at:
   934 ;;		line 196 in file "Brake_System.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;		None               void
   941 ;; Registers used:
   942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   948 ;;      Params:         0       0       0       0
   949 ;;      Locals:         0       0       0       0
   950 ;;      Temps:          0       0       0       0
   951 ;;      Totals:         0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    4
   955 ;; This function calls:
   956 ;;		_CANisTxReady
   957 ;;		_CANsendMessage
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text1
   964  002406                     __ptext1:
   965                           	opt stack 0
   966  002406                     _status_ok:
   967                           	opt stack 26
   968                           
   969                           ;Brake_System.c: 197: if (CANisTxReady()) {
   970                           
   971                           ; BSR set to: 0
   972                           ;incstack = 0
   973  002406  EC9F  F012         	call	_CANisTxReady	;wreg free
   974  00240A  0900               	iorlw	0
   975  00240C  B4D8               	btfsc	status,2,c
   976  00240E  D029               	goto	l660
   977                           
   978                           ;Brake_System.c: 198: if (id == 0b00000000000000000000000000110) {
   979  002410  0E06               	movlw	6
   980  002412  0100               	movlb	0	; () banked
   981  002414  198E               	xorwf	_id& (0+255),w,b
   982  002416  0100               	movlb	0	; () banked
   983  002418  118F               	iorwf	(_id+1)& (0+255),w,b
   984  00241A  0100               	movlb	0	; () banked
   985  00241C  1190               	iorwf	(_id+2)& (0+255),w,b
   986  00241E  0100               	movlb	0	; () banked
   987  002420  1191               	iorwf	(_id+3)& (0+255),w,b
   988  002422  A4D8               	btfss	status,2,c
   989  002424  D01F               	goto	l666
   990                           
   991                           ; BSR set to: 0
   992                           ;Brake_System.c: 199: CANsendMessage(id, status_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
   993  002426  C08E  F060         	movff	_id,CANsendMessage@identifier
   994  00242A  C08F  F061         	movff	_id+1,CANsendMessage@identifier+1
   995  00242E  C090  F062         	movff	_id+2,CANsendMessage@identifier+2
   996  002432  C091  F063         	movff	_id+3,CANsendMessage@identifier+3
   997  002436  0EA0               	movlw	low _status_array
   998  002438  0100               	movlb	0	; () banked
   999  00243A  6F64               	movwf	CANsendMessage@data& (0+255),b
  1000  00243C  0E00               	movlw	high _status_array
  1001  00243E  0100               	movlb	0	; () banked
  1002  002440  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1003  002442  0E08               	movlw	8
  1004  002444  0100               	movlb	0	; () banked
  1005  002446  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1006  002448  0EBC               	movlw	188
  1007  00244A  0100               	movlb	0	; () banked
  1008  00244C  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1009  00244E  ECE6  F005         	call	_CANsendMessage	;wreg free
  1010                           
  1011                           ;Brake_System.c: 200: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1012  002452  010F               	movlb	15	; () banked
  1013  002454  BD40               	btfsc	64,6,b	;volatile
  1014  002456  D005               	goto	l660
  1015                           
  1016                           ; BSR set to: 15
  1017  002458  010F               	movlb	15	; () banked
  1018  00245A  BD30               	btfsc	48,6,b	;volatile
  1019  00245C  D002               	goto	l660
  1020                           
  1021                           ; BSR set to: 15
  1022                           ;Brake_System.c: 203: Tx_retry = 0;
  1023                           
  1024                           ;Brake_System.c: 202: } else {
  1025                           
  1026                           ; BSR set to: 15
  1027                           ;Brake_System.c: 201: Tx_retry = 1;
  1028  00245E  904A               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1029                           
  1030                           ; BSR set to: 15
  1031                           ;Brake_System.c: 204: }
  1032                           ;Brake_System.c: 205: }
  1033                           ;Brake_System.c: 206: } else {
  1034                           
  1035                           ; BSR set to: 15
  1036  002460  D001               	goto	l666
  1037  002462                     l660:
  1038                           
  1039                           ;Brake_System.c: 207: Tx_retry = 1;
  1040  002462  804A               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1041  002464                     l666:
  1042                           
  1043                           ;Brake_System.c: 208: }
  1044                           ;Brake_System.c: 209: remote_frame = 0;
  1045  002464  924A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1046  002466  0012               	return		;funcret
  1047  002468                     __end_of_status_ok:
  1048                           	opt stack 0
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _CANsendMessage *****************
  1060 ;; Defined at:
  1061 ;;		line 294 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  identifier      4    0[BANK0 ] unsigned long 
  1064 ;;  data            2    4[BANK0 ] PTR unsigned char 
  1065 ;;		 -> status_array(8), 
  1066 ;;  dataLength      1    6[BANK0 ] unsigned char 
  1067 ;;  flags           1    7[BANK0 ] enum E16866
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  tamp            4   12[BANK0 ] unsigned long 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1079 ;;      Params:         0       8       0       0
  1080 ;;      Locals:         0       4       0       0
  1081 ;;      Temps:          0       4       0       0
  1082 ;;      Totals:         0      16       0       0
  1083 ;;Total ram usage:       16 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    3
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_status_ok
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text2
  1094  000BCC                     __ptext2:
  1095                           	opt stack 0
  1096  000BCC                     _CANsendMessage:
  1097                           	opt stack 26
  1098                           
  1099                           ;inc\CANlib.h: 296: unsigned long tamp;
  1100                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1101                           
  1102                           ;incstack = 0
  1103  000BCC  010F               	movlb	15	; () banked
  1104  000BCE  B740               	btfsc	64,3,b	;volatile
  1105  000BD0  D13F               	goto	l365
  1106                           
  1107                           ; BSR set to: 15
  1108                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1109  000BD2  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1110                           
  1111                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1112  000BD6  0100               	movlb	0	; () banked
  1113  000BD8  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  1114  000BDA  D003               	goto	l366
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1118  000BDC  010F               	movlb	15	; () banked
  1119  000BDE  8D45               	bsf	69,6,b	;volatile
  1120  000BE0  D002               	goto	l367
  1121  000BE2                     l366:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;inc\CANlib.h: 302: else
  1125                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1126  000BE2  010F               	movlb	15	; () banked
  1127  000BE4  9D45               	bcf	69,6,b	;volatile
  1128  000BE6                     l367:
  1129                           
  1130                           ; BSR set to: 15
  1131                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1132  000BE6  0100               	movlb	0	; () banked
  1133  000BE8  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  1134  000BEA  D079               	goto	l368
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;inc\CANlib.h: 306: {
  1138                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1139  000BEC  0100               	movlb	0	; () banked
  1140  000BEE  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1141  000BF0  0100               	movlb	0	; () banked
  1142  000BF2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1143  000BF4  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1144  000BF6  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1145  000BF8  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1149  000BFA  C06C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1153  000BFE  0E00               	movlw	0
  1154  000C00  0100               	movlb	0	; () banked
  1155  000C02  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1156  000C04  0100               	movlb	0	; () banked
  1157  000C06  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1158  000C08  0EFF               	movlw	255
  1159  000C0A  0100               	movlb	0	; () banked
  1160  000C0C  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1161  000C0E  0100               	movlb	0	; () banked
  1162  000C10  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1163  000C12  0E00               	movlw	0
  1164  000C14  0100               	movlb	0	; () banked
  1165  000C16  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1166  000C18  0100               	movlb	0	; () banked
  1167  000C1A  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1168  000C1C  0E00               	movlw	0
  1169  000C1E  0100               	movlb	0	; () banked
  1170  000C20  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1171  000C22  0100               	movlb	0	; () banked
  1172  000C24  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1176  000C26  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1177  000C2A  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1178  000C2E  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1179  000C32  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1180  000C36  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
  1181  000C3A  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1182  000C3E  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1183  000C42  0100               	movlb	0	; () banked
  1184  000C44  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
  1185  000C46  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1186  000C4A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1187  000C4E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1188  000C52  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1192  000C56  C06C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1196  000C5A  0E00               	movlw	0
  1197  000C5C  010F               	movlb	15	; () banked
  1198  000C5E  6F42               	movwf	66,b	;volatile
  1199                           
  1200                           ; BSR set to: 15
  1201                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1202  000C60  010F               	movlb	15	; () banked
  1203  000C62  8742               	bsf	66,3,b	;volatile
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1207  000C64  0100               	movlb	0	; () banked
  1208  000C66  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1209  000C68  D002               	goto	l369
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1213  000C6A  010F               	movlb	15	; () banked
  1214  000C6C  8142               	bsf	66,0,b	;volatile
  1215  000C6E                     l369:
  1216                           
  1217                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1218  000C6E  0100               	movlb	0	; () banked
  1219  000C70  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1220  000C72  D002               	goto	l370
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1224  000C74  010F               	movlb	15	; () banked
  1225  000C76  8342               	bsf	66,1,b	;volatile
  1226  000C78                     l370:
  1227                           
  1228                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1229  000C78  0100               	movlb	0	; () banked
  1230  000C7A  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1231  000C7C  D002               	goto	l371
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1235  000C7E  010F               	movlb	15	; () banked
  1236  000C80  8B42               	bsf	66,5,b	;volatile
  1237  000C82                     l371:
  1238                           
  1239                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1240  000C82  0100               	movlb	0	; () banked
  1241  000C84  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1242  000C86  D002               	goto	l372
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1246  000C88  010F               	movlb	15	; () banked
  1247  000C8A  8D42               	bsf	66,6,b	;volatile
  1248  000C8C                     l372:
  1249                           
  1250                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1251  000C8C  0100               	movlb	0	; () banked
  1252  000C8E  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1253  000C90  D002               	goto	l3030
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1257  000C92  010F               	movlb	15	; () banked
  1258  000C94  8F42               	bsf	66,7,b	;volatile
  1259  000C96                     l3030:
  1260                           
  1261                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1262  000C96  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1263  000C9A  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1264  000C9E  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1265  000CA2  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1266  000CA6  0E16               	movlw	22
  1267  000CA8  D006               	goto	u3200
  1268  000CAA                     u3205:
  1269  000CAA  0100               	movlb	0	; () banked
  1270  000CAC  90D8               	bcf	status,0,c
  1271  000CAE  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1272  000CB0  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1273  000CB2  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1274  000CB4  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1275  000CB6                     u3200:
  1276  000CB6  2EE8               	decfsz	wreg,f,c
  1277  000CB8  D7F8               	goto	u3205
  1278  000CBA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1279  000CBE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1280  000CC2  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1281  000CC6  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1285  000CCA  0100               	movlb	0	; () banked
  1286  000CCC  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1287  000CCE  0100               	movlb	0	; () banked
  1288  000CD0  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1289  000CD2  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1290  000CD4  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1291  000CD6  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1295  000CD8  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1296                           
  1297                           ;inc\CANlib.h: 332: }
  1298  000CDC  D059               	goto	l3050
  1299  000CDE                     l368:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;inc\CANlib.h: 334: else
  1303                           ;inc\CANlib.h: 336: {
  1304                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1305  000CDE  010F               	movlb	15	; () banked
  1306  000CE0  9742               	bcf	66,3,b	;volatile
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1310  000CE2  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1311  000CE6  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1312  000CEA  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1313  000CEE  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1314  000CF2  0E04               	movlw	4
  1315  000CF4  D006               	goto	u3210
  1316  000CF6                     u3215:
  1317  000CF6  0100               	movlb	0	; () banked
  1318  000CF8  90D8               	bcf	status,0,c
  1319  000CFA  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1320  000CFC  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1321  000CFE  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1322  000D00  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1323  000D02                     u3210:
  1324  000D02  2EE8               	decfsz	wreg,f,c
  1325  000D04  D7F8               	goto	u3215
  1326  000D06  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1327  000D0A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1328  000D0E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1329  000D12  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1333  000D16  0100               	movlb	0	; () banked
  1334  000D18  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1335  000D1A  0100               	movlb	0	; () banked
  1336  000D1C  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1337  000D1E  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1338  000D20  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1339  000D22  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1343  000D24  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1347  000D28  0E07               	movlw	7
  1348  000D2A  0100               	movlb	0	; () banked
  1349  000D2C  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1350  000D2E  0100               	movlb	0	; () banked
  1351  000D30  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1352  000D32  0E00               	movlw	0
  1353  000D34  0100               	movlb	0	; () banked
  1354  000D36  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1355  000D38  0100               	movlb	0	; () banked
  1356  000D3A  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1357  000D3C  0E00               	movlw	0
  1358  000D3E  0100               	movlb	0	; () banked
  1359  000D40  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1360  000D42  0100               	movlb	0	; () banked
  1361  000D44  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1362  000D46  0E00               	movlw	0
  1363  000D48  0100               	movlb	0	; () banked
  1364  000D4A  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1365  000D4C  0100               	movlb	0	; () banked
  1366  000D4E  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1370  000D50  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1371  000D54  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1372  000D58  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1373  000D5C  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1374  000D60  0E05               	movlw	5
  1375  000D62                     u3225:
  1376  000D62  90D8               	bcf	status,0,c
  1377  000D64  0100               	movlb	0	; () banked
  1378  000D66  3768               	rlcf	??_CANsendMessage& (0+255),f,b
  1379  000D68  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1380  000D6A  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1381  000D6C  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1382  000D6E  2EE8               	decfsz	wreg,f,c
  1383  000D70  D7F8               	goto	u3225
  1384  000D72  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1385  000D76  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1386  000D7A  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1387  000D7E  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1391  000D82  010F               	movlb	15	; () banked
  1392  000D84  5142               	movf	66,w,b	;volatile
  1393  000D86  0B1F               	andlw	31
  1394  000D88  010F               	movlb	15	; () banked
  1395  000D8A  6F42               	movwf	66,b	;volatile
  1396                           
  1397                           ; BSR set to: 15
  1398                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1399  000D8C  C06C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1400  000D90                     l3050:
  1401                           
  1402                           ;inc\CANlib.h: 347: }
  1403                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1404  000D90  0100               	movlb	0	; () banked
  1405  000D92  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  1406  000D94  D003               	goto	l375
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1410  000D96  010F               	movlb	15	; () banked
  1411  000D98  8140               	bsf	64,0,b	;volatile
  1412  000D9A  D002               	goto	l376
  1413  000D9C                     l375:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;inc\CANlib.h: 351: else
  1417                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1418  000D9C  010F               	movlb	15	; () banked
  1419  000D9E  9140               	bcf	64,0,b	;volatile
  1420  000DA0                     l376:
  1421                           
  1422                           ; BSR set to: 15
  1423                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1424  000DA0  0100               	movlb	0	; () banked
  1425  000DA2  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  1426  000DA4  D003               	goto	l377
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1430  000DA6  010F               	movlb	15	; () banked
  1431  000DA8  8340               	bsf	64,1,b	;volatile
  1432  000DAA  D002               	goto	l3056
  1433  000DAC                     l377:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;inc\CANlib.h: 355: else
  1437                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1438  000DAC  010F               	movlb	15	; () banked
  1439  000DAE  9340               	bcf	64,1,b	;volatile
  1440  000DB0                     l3056:
  1441                           
  1442                           ; BSR set to: 15
  1443                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1444  000DB0  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  1445  000DB4  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1446  000DB8  50DF               	movf	indf2,w,c
  1447  000DBA  010F               	movlb	15	; () banked
  1448  000DBC  6F46               	movwf	70,b	;volatile
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1452  000DBE  0100               	movlb	0	; () banked
  1453  000DC0  EE20 F001          	lfsr	2,1
  1454  000DC4  5164               	movf	CANsendMessage@data& (0+255),w,b
  1455  000DC6  26D9               	addwf	fsr2l,f,c
  1456  000DC8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1457  000DCA  22DA               	addwfc	fsr2h,f,c
  1458  000DCC  50DF               	movf	indf2,w,c
  1459  000DCE  010F               	movlb	15	; () banked
  1460  000DD0  6F47               	movwf	71,b	;volatile
  1461                           
  1462                           ; BSR set to: 15
  1463                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1464  000DD2  0100               	movlb	0	; () banked
  1465  000DD4  EE20 F002          	lfsr	2,2
  1466  000DD8  5164               	movf	CANsendMessage@data& (0+255),w,b
  1467  000DDA  26D9               	addwf	fsr2l,f,c
  1468  000DDC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1469  000DDE  22DA               	addwfc	fsr2h,f,c
  1470  000DE0  50DF               	movf	indf2,w,c
  1471  000DE2  010F               	movlb	15	; () banked
  1472  000DE4  6F48               	movwf	72,b	;volatile
  1473                           
  1474                           ; BSR set to: 15
  1475                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1476  000DE6  0100               	movlb	0	; () banked
  1477  000DE8  EE20 F003          	lfsr	2,3
  1478  000DEC  5164               	movf	CANsendMessage@data& (0+255),w,b
  1479  000DEE  26D9               	addwf	fsr2l,f,c
  1480  000DF0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1481  000DF2  22DA               	addwfc	fsr2h,f,c
  1482  000DF4  50DF               	movf	indf2,w,c
  1483  000DF6  010F               	movlb	15	; () banked
  1484  000DF8  6F49               	movwf	73,b	;volatile
  1485                           
  1486                           ; BSR set to: 15
  1487                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1488  000DFA  0100               	movlb	0	; () banked
  1489  000DFC  EE20 F004          	lfsr	2,4
  1490  000E00  5164               	movf	CANsendMessage@data& (0+255),w,b
  1491  000E02  26D9               	addwf	fsr2l,f,c
  1492  000E04  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1493  000E06  22DA               	addwfc	fsr2h,f,c
  1494  000E08  50DF               	movf	indf2,w,c
  1495  000E0A  010F               	movlb	15	; () banked
  1496  000E0C  6F4A               	movwf	74,b	;volatile
  1497                           
  1498                           ; BSR set to: 15
  1499                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1500  000E0E  0100               	movlb	0	; () banked
  1501  000E10  EE20 F005          	lfsr	2,5
  1502  000E14  5164               	movf	CANsendMessage@data& (0+255),w,b
  1503  000E16  26D9               	addwf	fsr2l,f,c
  1504  000E18  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1505  000E1A  22DA               	addwfc	fsr2h,f,c
  1506  000E1C  50DF               	movf	indf2,w,c
  1507  000E1E  010F               	movlb	15	; () banked
  1508  000E20  6F4B               	movwf	75,b	;volatile
  1509                           
  1510                           ; BSR set to: 15
  1511                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1512  000E22  0100               	movlb	0	; () banked
  1513  000E24  EE20 F006          	lfsr	2,6
  1514  000E28  5164               	movf	CANsendMessage@data& (0+255),w,b
  1515  000E2A  26D9               	addwf	fsr2l,f,c
  1516  000E2C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1517  000E2E  22DA               	addwfc	fsr2h,f,c
  1518  000E30  50DF               	movf	indf2,w,c
  1519  000E32  010F               	movlb	15	; () banked
  1520  000E34  6F4C               	movwf	76,b	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1524  000E36  0100               	movlb	0	; () banked
  1525  000E38  EE20 F007          	lfsr	2,7
  1526  000E3C  5164               	movf	CANsendMessage@data& (0+255),w,b
  1527  000E3E  26D9               	addwf	fsr2l,f,c
  1528  000E40  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1529  000E42  22DA               	addwfc	fsr2h,f,c
  1530  000E44  50DF               	movf	indf2,w,c
  1531  000E46  010F               	movlb	15	; () banked
  1532  000E48  6F4D               	movwf	77,b	;volatile
  1533                           
  1534                           ; BSR set to: 15
  1535                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1536  000E4A  010F               	movlb	15	; () banked
  1537  000E4C  8740               	bsf	64,3,b	;volatile
  1538                           
  1539                           ; BSR set to: 15
  1540                           ;inc\CANlib.h: 368: return;
  1541  000E4E  0012               	return	
  1542  000E50                     l365:
  1543                           
  1544                           ; BSR set to: 15
  1545                           ;inc\CANlib.h: 369: }
  1546                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1547  000E50  010F               	movlb	15	; () banked
  1548  000E52  B730               	btfsc	48,3,b	;volatile
  1549  000E54  D13F               	goto	l380
  1550                           
  1551                           ; BSR set to: 15
  1552                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1553  000E56  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1554                           
  1555                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1556  000E5A  0100               	movlb	0	; () banked
  1557  000E5C  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  1558  000E5E  D003               	goto	l381
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1562  000E60  010F               	movlb	15	; () banked
  1563  000E62  8D35               	bsf	53,6,b	;volatile
  1564  000E64  D002               	goto	l382
  1565  000E66                     l381:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;inc\CANlib.h: 378: else
  1569                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1570  000E66  010F               	movlb	15	; () banked
  1571  000E68  9D35               	bcf	53,6,b	;volatile
  1572  000E6A                     l382:
  1573                           
  1574                           ; BSR set to: 15
  1575                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1576  000E6A  0100               	movlb	0	; () banked
  1577  000E6C  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  1578  000E6E  D079               	goto	l383
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;inc\CANlib.h: 382: {
  1582                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1583  000E70  0100               	movlb	0	; () banked
  1584  000E72  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1585  000E74  0100               	movlb	0	; () banked
  1586  000E76  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1587  000E78  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1588  000E7A  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1589  000E7C  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1593  000E7E  C06C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1597  000E82  0E00               	movlw	0
  1598  000E84  0100               	movlb	0	; () banked
  1599  000E86  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1600  000E88  0100               	movlb	0	; () banked
  1601  000E8A  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1602  000E8C  0EFF               	movlw	255
  1603  000E8E  0100               	movlb	0	; () banked
  1604  000E90  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1605  000E92  0100               	movlb	0	; () banked
  1606  000E94  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1607  000E96  0E00               	movlw	0
  1608  000E98  0100               	movlb	0	; () banked
  1609  000E9A  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1610  000E9C  0100               	movlb	0	; () banked
  1611  000E9E  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1612  000EA0  0E00               	movlw	0
  1613  000EA2  0100               	movlb	0	; () banked
  1614  000EA4  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1615  000EA6  0100               	movlb	0	; () banked
  1616  000EA8  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1620  000EAA  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1621  000EAE  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1622  000EB2  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1623  000EB6  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1624  000EBA  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
  1625  000EBE  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1626  000EC2  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1627  000EC6  0100               	movlb	0	; () banked
  1628  000EC8  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
  1629  000ECA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1630  000ECE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1631  000ED2  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1632  000ED6  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1636  000EDA  C06C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1640  000EDE  0E00               	movlw	0
  1641  000EE0  010F               	movlb	15	; () banked
  1642  000EE2  6F32               	movwf	50,b	;volatile
  1643                           
  1644                           ; BSR set to: 15
  1645                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1646  000EE4  010F               	movlb	15	; () banked
  1647  000EE6  8732               	bsf	50,3,b	;volatile
  1648                           
  1649                           ; BSR set to: 15
  1650                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1651  000EE8  0100               	movlb	0	; () banked
  1652  000EEA  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1653  000EEC  D002               	goto	l384
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1657  000EEE  010F               	movlb	15	; () banked
  1658  000EF0  8132               	bsf	50,0,b	;volatile
  1659  000EF2                     l384:
  1660                           
  1661                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1662  000EF2  0100               	movlb	0	; () banked
  1663  000EF4  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1664  000EF6  D002               	goto	l385
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1668  000EF8  010F               	movlb	15	; () banked
  1669  000EFA  8332               	bsf	50,1,b	;volatile
  1670  000EFC                     l385:
  1671                           
  1672                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1673  000EFC  0100               	movlb	0	; () banked
  1674  000EFE  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1675  000F00  D002               	goto	l386
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1679  000F02  010F               	movlb	15	; () banked
  1680  000F04  8B32               	bsf	50,5,b	;volatile
  1681  000F06                     l386:
  1682                           
  1683                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1684  000F06  0100               	movlb	0	; () banked
  1685  000F08  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1686  000F0A  D002               	goto	l387
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1690  000F0C  010F               	movlb	15	; () banked
  1691  000F0E  8D32               	bsf	50,6,b	;volatile
  1692  000F10                     l387:
  1693                           
  1694                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1695  000F10  0100               	movlb	0	; () banked
  1696  000F12  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1697  000F14  D002               	goto	l3106
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1701  000F16  010F               	movlb	15	; () banked
  1702  000F18  8F32               	bsf	50,7,b	;volatile
  1703  000F1A                     l3106:
  1704                           
  1705                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1706  000F1A  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1707  000F1E  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1708  000F22  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1709  000F26  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1710  000F2A  0E16               	movlw	22
  1711  000F2C  D006               	goto	u3330
  1712  000F2E                     u3335:
  1713  000F2E  0100               	movlb	0	; () banked
  1714  000F30  90D8               	bcf	status,0,c
  1715  000F32  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1716  000F34  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1717  000F36  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1718  000F38  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1719  000F3A                     u3330:
  1720  000F3A  2EE8               	decfsz	wreg,f,c
  1721  000F3C  D7F8               	goto	u3335
  1722  000F3E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1723  000F42  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1724  000F46  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1725  000F4A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1729  000F4E  0100               	movlb	0	; () banked
  1730  000F50  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1731  000F52  0100               	movlb	0	; () banked
  1732  000F54  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1733  000F56  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1734  000F58  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1735  000F5A  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1739  000F5C  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1740                           
  1741                           ;inc\CANlib.h: 407: }
  1742  000F60  D059               	goto	l3126
  1743  000F62                     l383:
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;inc\CANlib.h: 409: else
  1747                           ;inc\CANlib.h: 411: {
  1748                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1749  000F62  010F               	movlb	15	; () banked
  1750  000F64  9732               	bcf	50,3,b	;volatile
  1751                           
  1752                           ; BSR set to: 15
  1753                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1754  000F66  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1755  000F6A  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1756  000F6E  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1757  000F72  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1758  000F76  0E04               	movlw	4
  1759  000F78  D006               	goto	u3340
  1760  000F7A                     u3345:
  1761  000F7A  0100               	movlb	0	; () banked
  1762  000F7C  90D8               	bcf	status,0,c
  1763  000F7E  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1764  000F80  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1765  000F82  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1766  000F84  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1767  000F86                     u3340:
  1768  000F86  2EE8               	decfsz	wreg,f,c
  1769  000F88  D7F8               	goto	u3345
  1770  000F8A  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1771  000F8E  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1772  000F92  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1773  000F96  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1777  000F9A  0100               	movlb	0	; () banked
  1778  000F9C  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1779  000F9E  0100               	movlb	0	; () banked
  1780  000FA0  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1781  000FA2  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1782  000FA4  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1783  000FA6  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1787  000FA8  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1791  000FAC  0E07               	movlw	7
  1792  000FAE  0100               	movlb	0	; () banked
  1793  000FB0  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1794  000FB2  0100               	movlb	0	; () banked
  1795  000FB4  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1796  000FB6  0E00               	movlw	0
  1797  000FB8  0100               	movlb	0	; () banked
  1798  000FBA  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1799  000FBC  0100               	movlb	0	; () banked
  1800  000FBE  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1801  000FC0  0E00               	movlw	0
  1802  000FC2  0100               	movlb	0	; () banked
  1803  000FC4  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1804  000FC6  0100               	movlb	0	; () banked
  1805  000FC8  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1806  000FCA  0E00               	movlw	0
  1807  000FCC  0100               	movlb	0	; () banked
  1808  000FCE  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1809  000FD0  0100               	movlb	0	; () banked
  1810  000FD2  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1814  000FD4  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1815  000FD8  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1816  000FDC  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1817  000FE0  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1818  000FE4  0E05               	movlw	5
  1819  000FE6                     u3355:
  1820  000FE6  90D8               	bcf	status,0,c
  1821  000FE8  0100               	movlb	0	; () banked
  1822  000FEA  3768               	rlcf	??_CANsendMessage& (0+255),f,b
  1823  000FEC  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1824  000FEE  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1825  000FF0  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1826  000FF2  2EE8               	decfsz	wreg,f,c
  1827  000FF4  D7F8               	goto	u3355
  1828  000FF6  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1829  000FFA  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1830  000FFE  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1831  001002  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1835  001006  010F               	movlb	15	; () banked
  1836  001008  5132               	movf	50,w,b	;volatile
  1837  00100A  0B1F               	andlw	31
  1838  00100C  010F               	movlb	15	; () banked
  1839  00100E  6F32               	movwf	50,b	;volatile
  1840                           
  1841                           ; BSR set to: 15
  1842                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1843  001010  C06C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1844  001014                     l3126:
  1845                           
  1846                           ;inc\CANlib.h: 422: }
  1847                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1848  001014  0100               	movlb	0	; () banked
  1849  001016  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  1850  001018  D003               	goto	l390
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1854  00101A  010F               	movlb	15	; () banked
  1855  00101C  8130               	bsf	48,0,b	;volatile
  1856  00101E  D002               	goto	l391
  1857  001020                     l390:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;inc\CANlib.h: 426: else
  1861                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1862  001020  010F               	movlb	15	; () banked
  1863  001022  9130               	bcf	48,0,b	;volatile
  1864  001024                     l391:
  1865                           
  1866                           ; BSR set to: 15
  1867                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1868  001024  0100               	movlb	0	; () banked
  1869  001026  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  1870  001028  D003               	goto	l392
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1874  00102A  010F               	movlb	15	; () banked
  1875  00102C  8330               	bsf	48,1,b	;volatile
  1876  00102E  D002               	goto	l3132
  1877  001030                     l392:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;inc\CANlib.h: 430: else
  1881                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1882  001030  010F               	movlb	15	; () banked
  1883  001032  9330               	bcf	48,1,b	;volatile
  1884  001034                     l3132:
  1885                           
  1886                           ; BSR set to: 15
  1887                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1888  001034  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  1889  001038  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1890  00103C  50DF               	movf	indf2,w,c
  1891  00103E  010F               	movlb	15	; () banked
  1892  001040  6F36               	movwf	54,b	;volatile
  1893                           
  1894                           ; BSR set to: 15
  1895                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1896  001042  0100               	movlb	0	; () banked
  1897  001044  EE20 F001          	lfsr	2,1
  1898  001048  5164               	movf	CANsendMessage@data& (0+255),w,b
  1899  00104A  26D9               	addwf	fsr2l,f,c
  1900  00104C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1901  00104E  22DA               	addwfc	fsr2h,f,c
  1902  001050  50DF               	movf	indf2,w,c
  1903  001052  010F               	movlb	15	; () banked
  1904  001054  6F37               	movwf	55,b	;volatile
  1905                           
  1906                           ; BSR set to: 15
  1907                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1908  001056  0100               	movlb	0	; () banked
  1909  001058  EE20 F002          	lfsr	2,2
  1910  00105C  5164               	movf	CANsendMessage@data& (0+255),w,b
  1911  00105E  26D9               	addwf	fsr2l,f,c
  1912  001060  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1913  001062  22DA               	addwfc	fsr2h,f,c
  1914  001064  50DF               	movf	indf2,w,c
  1915  001066  010F               	movlb	15	; () banked
  1916  001068  6F38               	movwf	56,b	;volatile
  1917                           
  1918                           ; BSR set to: 15
  1919                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1920  00106A  0100               	movlb	0	; () banked
  1921  00106C  EE20 F003          	lfsr	2,3
  1922  001070  5164               	movf	CANsendMessage@data& (0+255),w,b
  1923  001072  26D9               	addwf	fsr2l,f,c
  1924  001074  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1925  001076  22DA               	addwfc	fsr2h,f,c
  1926  001078  50DF               	movf	indf2,w,c
  1927  00107A  010F               	movlb	15	; () banked
  1928  00107C  6F39               	movwf	57,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1932  00107E  0100               	movlb	0	; () banked
  1933  001080  EE20 F004          	lfsr	2,4
  1934  001084  5164               	movf	CANsendMessage@data& (0+255),w,b
  1935  001086  26D9               	addwf	fsr2l,f,c
  1936  001088  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1937  00108A  22DA               	addwfc	fsr2h,f,c
  1938  00108C  50DF               	movf	indf2,w,c
  1939  00108E  010F               	movlb	15	; () banked
  1940  001090  6F3A               	movwf	58,b	;volatile
  1941                           
  1942                           ; BSR set to: 15
  1943                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1944  001092  0100               	movlb	0	; () banked
  1945  001094  EE20 F005          	lfsr	2,5
  1946  001098  5164               	movf	CANsendMessage@data& (0+255),w,b
  1947  00109A  26D9               	addwf	fsr2l,f,c
  1948  00109C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1949  00109E  22DA               	addwfc	fsr2h,f,c
  1950  0010A0  50DF               	movf	indf2,w,c
  1951  0010A2  010F               	movlb	15	; () banked
  1952  0010A4  6F3B               	movwf	59,b	;volatile
  1953                           
  1954                           ; BSR set to: 15
  1955                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1956  0010A6  0100               	movlb	0	; () banked
  1957  0010A8  EE20 F006          	lfsr	2,6
  1958  0010AC  5164               	movf	CANsendMessage@data& (0+255),w,b
  1959  0010AE  26D9               	addwf	fsr2l,f,c
  1960  0010B0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1961  0010B2  22DA               	addwfc	fsr2h,f,c
  1962  0010B4  50DF               	movf	indf2,w,c
  1963  0010B6  010F               	movlb	15	; () banked
  1964  0010B8  6F3C               	movwf	60,b	;volatile
  1965                           
  1966                           ; BSR set to: 15
  1967                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1968  0010BA  0100               	movlb	0	; () banked
  1969  0010BC  EE20 F007          	lfsr	2,7
  1970  0010C0  5164               	movf	CANsendMessage@data& (0+255),w,b
  1971  0010C2  26D9               	addwf	fsr2l,f,c
  1972  0010C4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1973  0010C6  22DA               	addwfc	fsr2h,f,c
  1974  0010C8  50DF               	movf	indf2,w,c
  1975  0010CA  010F               	movlb	15	; () banked
  1976  0010CC  6F3D               	movwf	61,b	;volatile
  1977                           
  1978                           ; BSR set to: 15
  1979                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1980  0010CE  010F               	movlb	15	; () banked
  1981  0010D0  8730               	bsf	48,3,b	;volatile
  1982                           
  1983                           ; BSR set to: 15
  1984                           ;inc\CANlib.h: 444: return;
  1985  0010D2  0012               	return	
  1986  0010D4                     l380:
  1987                           
  1988                           ; BSR set to: 15
  1989                           ;inc\CANlib.h: 445: }
  1990                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1991  0010D4  010F               	movlb	15	; () banked
  1992  0010D6  B720               	btfsc	32,3,b	;volatile
  1993  0010D8  0012               	return	
  1994                           
  1995                           ; BSR set to: 15
  1996                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1997  0010DA  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1998                           
  1999                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2000  0010DE  0100               	movlb	0	; () banked
  2001  0010E0  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  2002  0010E2  D003               	goto	l395
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2006  0010E4  010F               	movlb	15	; () banked
  2007  0010E6  8D25               	bsf	37,6,b	;volatile
  2008  0010E8  D002               	goto	l396
  2009  0010EA                     l395:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;inc\CANlib.h: 454: else
  2013                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2014  0010EA  010F               	movlb	15	; () banked
  2015  0010EC  9D25               	bcf	37,6,b	;volatile
  2016  0010EE                     l396:
  2017                           
  2018                           ; BSR set to: 15
  2019                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2020  0010EE  0100               	movlb	0	; () banked
  2021  0010F0  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  2022  0010F2  D079               	goto	l397
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;inc\CANlib.h: 458: {
  2026                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2027  0010F4  0100               	movlb	0	; () banked
  2028  0010F6  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  2029  0010F8  0100               	movlb	0	; () banked
  2030  0010FA  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2031  0010FC  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2032  0010FE  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2033  001100  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2037  001102  C06C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2041  001106  0E00               	movlw	0
  2042  001108  0100               	movlb	0	; () banked
  2043  00110A  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  2044  00110C  0100               	movlb	0	; () banked
  2045  00110E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2046  001110  0EFF               	movlw	255
  2047  001112  0100               	movlb	0	; () banked
  2048  001114  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2049  001116  0100               	movlb	0	; () banked
  2050  001118  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2051  00111A  0E00               	movlw	0
  2052  00111C  0100               	movlb	0	; () banked
  2053  00111E  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2054  001120  0100               	movlb	0	; () banked
  2055  001122  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2056  001124  0E00               	movlw	0
  2057  001126  0100               	movlb	0	; () banked
  2058  001128  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2059  00112A  0100               	movlb	0	; () banked
  2060  00112C  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2064  00112E  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  2065  001132  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2066  001136  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2067  00113A  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2068  00113E  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
  2069  001142  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2070  001146  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2071  00114A  0100               	movlb	0	; () banked
  2072  00114C  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
  2073  00114E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2074  001152  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2075  001156  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2076  00115A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2080  00115E  C06C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2084  001162  0E00               	movlw	0
  2085  001164  010F               	movlb	15	; () banked
  2086  001166  6F22               	movwf	34,b	;volatile
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2090  001168  010F               	movlb	15	; () banked
  2091  00116A  8722               	bsf	34,3,b	;volatile
  2092                           
  2093                           ; BSR set to: 15
  2094                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2095  00116C  0100               	movlb	0	; () banked
  2096  00116E  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2097  001170  D002               	goto	l398
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2101  001172  010F               	movlb	15	; () banked
  2102  001174  8122               	bsf	34,0,b	;volatile
  2103  001176                     l398:
  2104                           
  2105                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2106  001176  0100               	movlb	0	; () banked
  2107  001178  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2108  00117A  D002               	goto	l399
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2112  00117C  010F               	movlb	15	; () banked
  2113  00117E  8322               	bsf	34,1,b	;volatile
  2114  001180                     l399:
  2115                           
  2116                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2117  001180  0100               	movlb	0	; () banked
  2118  001182  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2119  001184  D002               	goto	l400
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2123  001186  010F               	movlb	15	; () banked
  2124  001188  8B22               	bsf	34,5,b	;volatile
  2125  00118A                     l400:
  2126                           
  2127                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2128  00118A  0100               	movlb	0	; () banked
  2129  00118C  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2130  00118E  D002               	goto	l401
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2134  001190  010F               	movlb	15	; () banked
  2135  001192  8D22               	bsf	34,6,b	;volatile
  2136  001194                     l401:
  2137                           
  2138                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2139  001194  0100               	movlb	0	; () banked
  2140  001196  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2141  001198  D002               	goto	l3182
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2145  00119A  010F               	movlb	15	; () banked
  2146  00119C  8F22               	bsf	34,7,b	;volatile
  2147  00119E                     l3182:
  2148                           
  2149                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2150  00119E  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  2151  0011A2  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2152  0011A6  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2153  0011AA  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2154  0011AE  0E16               	movlw	22
  2155  0011B0  D006               	goto	u3460
  2156  0011B2                     u3465:
  2157  0011B2  0100               	movlb	0	; () banked
  2158  0011B4  90D8               	bcf	status,0,c
  2159  0011B6  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2160  0011B8  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2161  0011BA  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2162  0011BC  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  2163  0011BE                     u3460:
  2164  0011BE  2EE8               	decfsz	wreg,f,c
  2165  0011C0  D7F8               	goto	u3465
  2166  0011C2  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2167  0011C6  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2168  0011CA  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2169  0011CE  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2173  0011D2  0100               	movlb	0	; () banked
  2174  0011D4  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  2175  0011D6  0100               	movlb	0	; () banked
  2176  0011D8  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2177  0011DA  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2178  0011DC  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2179  0011DE  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2183  0011E0  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2184                           
  2185                           ;inc\CANlib.h: 483: }
  2186  0011E4  D059               	goto	l3202
  2187  0011E6                     l397:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;inc\CANlib.h: 485: else
  2191                           ;inc\CANlib.h: 487: {
  2192                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2193  0011E6  010F               	movlb	15	; () banked
  2194  0011E8  9722               	bcf	34,3,b	;volatile
  2195                           
  2196                           ; BSR set to: 15
  2197                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2198  0011EA  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  2199  0011EE  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2200  0011F2  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2201  0011F6  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2202  0011FA  0E04               	movlw	4
  2203  0011FC  D006               	goto	u3470
  2204  0011FE                     u3475:
  2205  0011FE  0100               	movlb	0	; () banked
  2206  001200  90D8               	bcf	status,0,c
  2207  001202  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2208  001204  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2209  001206  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2210  001208  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  2211  00120A                     u3470:
  2212  00120A  2EE8               	decfsz	wreg,f,c
  2213  00120C  D7F8               	goto	u3475
  2214  00120E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2215  001212  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2216  001216  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2217  00121A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2221  00121E  0100               	movlb	0	; () banked
  2222  001220  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  2223  001222  0100               	movlb	0	; () banked
  2224  001224  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2225  001226  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2226  001228  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2227  00122A  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2231  00122C  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2235  001230  0E07               	movlw	7
  2236  001232  0100               	movlb	0	; () banked
  2237  001234  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  2238  001236  0100               	movlb	0	; () banked
  2239  001238  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2240  00123A  0E00               	movlw	0
  2241  00123C  0100               	movlb	0	; () banked
  2242  00123E  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2243  001240  0100               	movlb	0	; () banked
  2244  001242  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2245  001244  0E00               	movlw	0
  2246  001246  0100               	movlb	0	; () banked
  2247  001248  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2248  00124A  0100               	movlb	0	; () banked
  2249  00124C  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2250  00124E  0E00               	movlw	0
  2251  001250  0100               	movlb	0	; () banked
  2252  001252  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2253  001254  0100               	movlb	0	; () banked
  2254  001256  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2258  001258  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  2259  00125C  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2260  001260  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2261  001264  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2262  001268  0E05               	movlw	5
  2263  00126A                     u3485:
  2264  00126A  90D8               	bcf	status,0,c
  2265  00126C  0100               	movlb	0	; () banked
  2266  00126E  3768               	rlcf	??_CANsendMessage& (0+255),f,b
  2267  001270  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2268  001272  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2269  001274  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2270  001276  2EE8               	decfsz	wreg,f,c
  2271  001278  D7F8               	goto	u3485
  2272  00127A  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2273  00127E  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2274  001282  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2275  001286  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2279  00128A  010F               	movlb	15	; () banked
  2280  00128C  5122               	movf	34,w,b	;volatile
  2281  00128E  0B1F               	andlw	31
  2282  001290  010F               	movlb	15	; () banked
  2283  001292  6F22               	movwf	34,b	;volatile
  2284                           
  2285                           ; BSR set to: 15
  2286                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2287  001294  C06C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2288  001298                     l3202:
  2289                           
  2290                           ;inc\CANlib.h: 498: }
  2291                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2292  001298  0100               	movlb	0	; () banked
  2293  00129A  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  2294  00129C  D003               	goto	l404
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2298  00129E  010F               	movlb	15	; () banked
  2299  0012A0  8120               	bsf	32,0,b	;volatile
  2300  0012A2  D002               	goto	l405
  2301  0012A4                     l404:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;inc\CANlib.h: 502: else
  2305                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2306  0012A4  010F               	movlb	15	; () banked
  2307  0012A6  9120               	bcf	32,0,b	;volatile
  2308  0012A8                     l405:
  2309                           
  2310                           ; BSR set to: 15
  2311                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2312  0012A8  0100               	movlb	0	; () banked
  2313  0012AA  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  2314  0012AC  D003               	goto	l406
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2318  0012AE  010F               	movlb	15	; () banked
  2319  0012B0  8320               	bsf	32,1,b	;volatile
  2320  0012B2  D002               	goto	l3208
  2321  0012B4                     l406:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;inc\CANlib.h: 506: else
  2325                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2326  0012B4  010F               	movlb	15	; () banked
  2327  0012B6  9320               	bcf	32,1,b	;volatile
  2328  0012B8                     l3208:
  2329                           
  2330                           ; BSR set to: 15
  2331                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2332  0012B8  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  2333  0012BC  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2334  0012C0  50DF               	movf	indf2,w,c
  2335  0012C2  010F               	movlb	15	; () banked
  2336  0012C4  6F26               	movwf	38,b	;volatile
  2337                           
  2338                           ; BSR set to: 15
  2339                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2340  0012C6  0100               	movlb	0	; () banked
  2341  0012C8  EE20 F001          	lfsr	2,1
  2342  0012CC  5164               	movf	CANsendMessage@data& (0+255),w,b
  2343  0012CE  26D9               	addwf	fsr2l,f,c
  2344  0012D0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2345  0012D2  22DA               	addwfc	fsr2h,f,c
  2346  0012D4  50DF               	movf	indf2,w,c
  2347  0012D6  010F               	movlb	15	; () banked
  2348  0012D8  6F27               	movwf	39,b	;volatile
  2349                           
  2350                           ; BSR set to: 15
  2351                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2352  0012DA  0100               	movlb	0	; () banked
  2353  0012DC  EE20 F002          	lfsr	2,2
  2354  0012E0  5164               	movf	CANsendMessage@data& (0+255),w,b
  2355  0012E2  26D9               	addwf	fsr2l,f,c
  2356  0012E4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2357  0012E6  22DA               	addwfc	fsr2h,f,c
  2358  0012E8  50DF               	movf	indf2,w,c
  2359  0012EA  010F               	movlb	15	; () banked
  2360  0012EC  6F28               	movwf	40,b	;volatile
  2361                           
  2362                           ; BSR set to: 15
  2363                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2364  0012EE  0100               	movlb	0	; () banked
  2365  0012F0  EE20 F003          	lfsr	2,3
  2366  0012F4  5164               	movf	CANsendMessage@data& (0+255),w,b
  2367  0012F6  26D9               	addwf	fsr2l,f,c
  2368  0012F8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2369  0012FA  22DA               	addwfc	fsr2h,f,c
  2370  0012FC  50DF               	movf	indf2,w,c
  2371  0012FE  010F               	movlb	15	; () banked
  2372  001300  6F29               	movwf	41,b	;volatile
  2373                           
  2374                           ; BSR set to: 15
  2375                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2376  001302  0100               	movlb	0	; () banked
  2377  001304  EE20 F004          	lfsr	2,4
  2378  001308  5164               	movf	CANsendMessage@data& (0+255),w,b
  2379  00130A  26D9               	addwf	fsr2l,f,c
  2380  00130C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2381  00130E  22DA               	addwfc	fsr2h,f,c
  2382  001310  50DF               	movf	indf2,w,c
  2383  001312  010F               	movlb	15	; () banked
  2384  001314  6F2A               	movwf	42,b	;volatile
  2385                           
  2386                           ; BSR set to: 15
  2387                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2388  001316  0100               	movlb	0	; () banked
  2389  001318  EE20 F005          	lfsr	2,5
  2390  00131C  5164               	movf	CANsendMessage@data& (0+255),w,b
  2391  00131E  26D9               	addwf	fsr2l,f,c
  2392  001320  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2393  001322  22DA               	addwfc	fsr2h,f,c
  2394  001324  50DF               	movf	indf2,w,c
  2395  001326  010F               	movlb	15	; () banked
  2396  001328  6F2B               	movwf	43,b	;volatile
  2397                           
  2398                           ; BSR set to: 15
  2399                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2400  00132A  0100               	movlb	0	; () banked
  2401  00132C  EE20 F006          	lfsr	2,6
  2402  001330  5164               	movf	CANsendMessage@data& (0+255),w,b
  2403  001332  26D9               	addwf	fsr2l,f,c
  2404  001334  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2405  001336  22DA               	addwfc	fsr2h,f,c
  2406  001338  50DF               	movf	indf2,w,c
  2407  00133A  010F               	movlb	15	; () banked
  2408  00133C  6F2C               	movwf	44,b	;volatile
  2409                           
  2410                           ; BSR set to: 15
  2411                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2412  00133E  0100               	movlb	0	; () banked
  2413  001340  EE20 F007          	lfsr	2,7
  2414  001344  5164               	movf	CANsendMessage@data& (0+255),w,b
  2415  001346  26D9               	addwf	fsr2l,f,c
  2416  001348  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2417  00134A  22DA               	addwfc	fsr2h,f,c
  2418  00134C  50DF               	movf	indf2,w,c
  2419  00134E  010F               	movlb	15	; () banked
  2420  001350  6F2D               	movwf	45,b	;volatile
  2421                           
  2422                           ; BSR set to: 15
  2423                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2424  001352  010F               	movlb	15	; () banked
  2425  001354  8720               	bsf	32,3,b	;volatile
  2426                           
  2427                           ; BSR set to: 15
  2428                           ;inc\CANlib.h: 520: return;
  2429  001356  0012               	return	
  2430  001358                     __end_of_CANsendMessage:
  2431                           	opt stack 0
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           prodh	equ	0xFF4
  2437                           prodl	equ	0xFF3
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           indf2	equ	0xFDF
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _CANisTxReady *****************
  2446 ;; Defined at:
  2447 ;;		line 1154 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      unsigned char 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2461 ;;      Params:         0       0       0       0
  2462 ;;      Locals:         0       1       0       0
  2463 ;;      Temps:          0       0       0       0
  2464 ;;      Totals:         0       1       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_status_ok
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text3
  2476  00253E                     __ptext3:
  2477                           	opt stack 0
  2478  00253E                     _CANisTxReady:
  2479                           	opt stack 26
  2480                           
  2481                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;incstack = 0
  2485  00253E  0E01               	movlw	1
  2486  002540  0100               	movlb	0	; () banked
  2487  002542  6F60               	movwf	_CANisTxReady$2968& (0+255),b
  2488                           
  2489                           ; BSR set to: 0
  2490  002544  010F               	movlb	15	; () banked
  2491  002546  A740               	btfss	64,3,b	;volatile
  2492  002548  D009               	goto	l558
  2493                           
  2494                           ; BSR set to: 15
  2495  00254A  010F               	movlb	15	; () banked
  2496  00254C  A730               	btfss	48,3,b	;volatile
  2497  00254E  D006               	goto	l558
  2498                           
  2499                           ; BSR set to: 15
  2500  002550  010F               	movlb	15	; () banked
  2501  002552  A720               	btfss	32,3,b	;volatile
  2502  002554  D003               	goto	l558
  2503                           
  2504                           ; BSR set to: 15
  2505  002556  0E00               	movlw	0
  2506  002558  0100               	movlb	0	; () banked
  2507  00255A  6F60               	movwf	_CANisTxReady$2968& (0+255),b
  2508  00255C                     l558:
  2509  00255C  0100               	movlb	0	; () banked
  2510  00255E  5160               	movf	_CANisTxReady$2968& (0+255),w,b
  2511  002560  0012               	return	
  2512  002562                     __end_of_CANisTxReady:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           indf2	equ	0xFDF
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _board_initialization *****************
  2528 ;; Defined at:
  2529 ;;		line 223 in file "Brake_System.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2543 ;;      Params:         0       0       0       0
  2544 ;;      Locals:         0       0       0       0
  2545 ;;      Temps:          0       0       0       0
  2546 ;;      Totals:         0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    5
  2550 ;; This function calls:
  2551 ;;		_CANInitialize
  2552 ;;		_delay_ms
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text4
  2559  0021E2                     __ptext4:
  2560                           	opt stack 0
  2561  0021E2                     _board_initialization:
  2562                           	opt stack 25
  2563                           
  2564                           ;Brake_System.c: 225: LATA = 0x00;
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;incstack = 0
  2568  0021E2  0E00               	movlw	0
  2569  0021E4  6E89               	movwf	3977,c	;volatile
  2570                           
  2571                           ;Brake_System.c: 226: TRISA = 0xFF;
  2572  0021E6  6892               	setf	3986,c	;volatile
  2573                           
  2574                           ;Brake_System.c: 227: LATB = 0x00;
  2575  0021E8  0E00               	movlw	0
  2576  0021EA  6E8A               	movwf	3978,c	;volatile
  2577                           
  2578                           ;Brake_System.c: 228: TRISB = 0b11111110;
  2579  0021EC  0EFE               	movlw	254
  2580  0021EE  6E93               	movwf	3987,c	;volatile
  2581                           
  2582                           ;Brake_System.c: 229: LATC = 0x00;
  2583  0021F0  0E00               	movlw	0
  2584  0021F2  6E8B               	movwf	3979,c	;volatile
  2585                           
  2586                           ;Brake_System.c: 230: TRISC = 0b11111110;
  2587  0021F4  0EFE               	movlw	254
  2588  0021F6  6E94               	movwf	3988,c	;volatile
  2589                           
  2590                           ;Brake_System.c: 231: LATD = 0x00;
  2591  0021F8  0E00               	movlw	0
  2592  0021FA  6E8C               	movwf	3980,c	;volatile
  2593                           
  2594                           ;Brake_System.c: 232: TRISD = 0xFF;
  2595  0021FC  6895               	setf	3989,c	;volatile
  2596                           
  2597                           ;Brake_System.c: 233: LATE = 0x00;
  2598  0021FE  0E00               	movlw	0
  2599  002200  6E8D               	movwf	3981,c	;volatile
  2600                           
  2601                           ;Brake_System.c: 234: TRISE = 0xFF;
  2602  002202  6896               	setf	3990,c	;volatile
  2603                           
  2604                           ;Brake_System.c: 236: ADCON1 = 0x11111110;
  2605  002204  0E10               	movlw	16
  2606  002206  6EC1               	movwf	4033,c	;volatile
  2607                           
  2608                           ;Brake_System.c: 239: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONF
      +                          IG_SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2609  002208  0E06               	movlw	6
  2610  00220A  0100               	movlb	0	; () banked
  2611  00220C  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2612  00220E  0E05               	movlw	5
  2613  002210  0100               	movlb	0	; () banked
  2614  002212  6F6F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2615  002214  0E01               	movlw	1
  2616  002216  0100               	movlb	0	; () banked
  2617  002218  6F70               	movwf	CANInitialize@SJW& (0+255),b
  2618  00221A  0E03               	movlw	3
  2619  00221C  0100               	movlb	0	; () banked
  2620  00221E  6F71               	movwf	CANInitialize@BRP& (0+255),b
  2621  002220  0E9D               	movlw	157
  2622  002222  0100               	movlb	0	; () banked
  2623  002224  6F72               	movwf	CANInitialize@flags& (0+255),b
  2624  002226  0E04               	movlw	4
  2625  002228  EC01  F00E         	call	_CANInitialize
  2626                           
  2627                           ;Brake_System.c: 240: RCONbits.IPEN = 1;
  2628  00222C  8ED0               	bsf	4048,7,c	;volatile
  2629                           
  2630                           ;Brake_System.c: 243: PIR3bits.RXB1IF = 0;
  2631  00222E  92A4               	bcf	4004,1,c	;volatile
  2632                           
  2633                           ;Brake_System.c: 244: PIR3bits.RXB0IF = 0;
  2634  002230  90A4               	bcf	4004,0,c	;volatile
  2635                           
  2636                           ;Brake_System.c: 245: INTCONbits.TMR0IF = 0;
  2637  002232  94F2               	bcf	intcon,2,c	;volatile
  2638                           
  2639                           ;Brake_System.c: 246: PIR2bits.TMR3IF = 0;
  2640  002234  92A1               	bcf	4001,1,c	;volatile
  2641                           
  2642                           ;Brake_System.c: 249: IPR3bits.RXB1IP = 1;
  2643  002236  82A5               	bsf	4005,1,c	;volatile
  2644                           
  2645                           ;Brake_System.c: 250: IPR3bits.RXB0IP = 1;
  2646  002238  80A5               	bsf	4005,0,c	;volatile
  2647                           
  2648                           ;Brake_System.c: 251: INTCON2bits.TMR0IP = 1;
  2649  00223A  84F1               	bsf	intcon2,2,c	;volatile
  2650                           
  2651                           ;Brake_System.c: 252: IPR2bits.TMR3IP = 0;
  2652  00223C  92A2               	bcf	4002,1,c	;volatile
  2653                           
  2654                           ;Brake_System.c: 255: T0CON = 0x80;
  2655  00223E  0E80               	movlw	128
  2656  002240  6ED5               	movwf	4053,c	;volatile
  2657                           
  2658                           ;Brake_System.c: 256: TMR3H = 0x63;
  2659  002242  0E63               	movlw	99
  2660  002244  6EB3               	movwf	4019,c	;volatile
  2661                           
  2662                           ;Brake_System.c: 257: TMR3L = 0xC0;
  2663  002246  0EC0               	movlw	192
  2664  002248  6EB2               	movwf	4018,c	;volatile
  2665                           
  2666                           ;Brake_System.c: 258: INTCON2bits.INTEDG0 = 1;
  2667  00224A  8CF1               	bsf	intcon2,6,c	;volatile
  2668                           
  2669                           ;Brake_System.c: 261: PIE3bits.RXB1IE = 1;
  2670  00224C  82A3               	bsf	4003,1,c	;volatile
  2671                           
  2672                           ;Brake_System.c: 262: PIE3bits.RXB0IE = 1;
  2673  00224E  80A3               	bsf	4003,0,c	;volatile
  2674                           
  2675                           ;Brake_System.c: 263: INTCONbits.TMR0IE = 1;
  2676  002250  8AF2               	bsf	intcon,5,c	;volatile
  2677                           
  2678                           ;Brake_System.c: 264: PIE2bits.TMR3IE = 1;
  2679  002252  82A0               	bsf	4000,1,c	;volatile
  2680                           
  2681                           ;Brake_System.c: 265: INTCONbits.GIEH = 1;
  2682  002254  8EF2               	bsf	intcon,7,c	;volatile
  2683                           
  2684                           ;Brake_System.c: 266: INTCONbits.GIEL = 1;
  2685  002256  8CF2               	bsf	intcon,6,c	;volatile
  2686                           
  2687                           ;Brake_System.c: 269: ADCON1 = 0b01110111;
  2688  002258  0E77               	movlw	119
  2689  00225A  6EC1               	movwf	4033,c	;volatile
  2690                           
  2691                           ;Brake_System.c: 270: ADCON0bits.CHS2 = 0;
  2692  00225C  98C2               	bcf	4034,4,c	;volatile
  2693                           
  2694                           ;Brake_System.c: 271: ADCON0bits.CHS1 = 0;
  2695  00225E  96C2               	bcf	4034,3,c	;volatile
  2696                           
  2697                           ;Brake_System.c: 272: ADCON0bits.CHS0 = 0;
  2698  002260  94C2               	bcf	4034,2,c	;volatile
  2699                           
  2700                           ;Brake_System.c: 273: ADCON2bits.ACQT2 = 1;
  2701  002262  8AC0               	bsf	4032,5,c	;volatile
  2702                           
  2703                           ;Brake_System.c: 274: ADCON2bits.ACQT1 = 1;
  2704  002264  88C0               	bsf	4032,4,c	;volatile
  2705                           
  2706                           ;Brake_System.c: 275: ADCON2bits.ACQT0 = 0;
  2707  002266  96C0               	bcf	4032,3,c	;volatile
  2708                           
  2709                           ;Brake_System.c: 276: ADCON2bits.ADCS2 = 1;
  2710  002268  84C0               	bsf	4032,2,c	;volatile
  2711                           
  2712                           ;Brake_System.c: 277: ADCON2bits.ADCS1 = 0;
  2713  00226A  92C0               	bcf	4032,1,c	;volatile
  2714                           
  2715                           ;Brake_System.c: 278: ADCON2bits.ADCS0 = 1;
  2716  00226C  80C0               	bsf	4032,0,c	;volatile
  2717                           
  2718                           ;Brake_System.c: 279: ADCON2bits.ADFM = 0;
  2719  00226E  9EC0               	bcf	4032,7,c	;volatile
  2720                           
  2721                           ;Brake_System.c: 280: ADCON0bits.ADON = 1;
  2722  002270  80C2               	bsf	4034,0,c	;volatile
  2723                           
  2724                           ;Brake_System.c: 282: T3CON = 0x01;
  2725  002272  0E01               	movlw	1
  2726  002274  6EB1               	movwf	4017,c	;volatile
  2727                           
  2728                           ;Brake_System.c: 283: delay_ms(2);
  2729  002276  0E00               	movlw	0
  2730  002278  0100               	movlb	0	; () banked
  2731  00227A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2732  00227C  0E02               	movlw	2
  2733  00227E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2734  002280  EC54  F012         	call	_delay_ms	;wreg free
  2735  002284  0012               	return		;funcret
  2736  002286                     __end_of_board_initialization:
  2737                           	opt stack 0
  2738                           tblptru	equ	0xFF8
  2739                           tblptrh	equ	0xFF7
  2740                           tblptrl	equ	0xFF6
  2741                           tablat	equ	0xFF5
  2742                           prodh	equ	0xFF4
  2743                           prodl	equ	0xFF3
  2744                           intcon	equ	0xFF2
  2745                           intcon2	equ	0xFF1
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           indf2	equ	0xFDF
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _delay_ms *****************
  2754 ;; Defined at:
  2755 ;;		line 61 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  value_ms        2    6[BANK0 ] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2769 ;;      Params:         0       2       0       0
  2770 ;;      Locals:         0       0       0       0
  2771 ;;      Temps:          0       0       0       0
  2772 ;;      Totals:         0       2       0       0
  2773 ;;Total ram usage:        2 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    4
  2776 ;; This function calls:
  2777 ;;		___wmul
  2778 ;; This function is called by:
  2779 ;;		_board_initialization
  2780 ;;		_delay_s
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text5
  2785  0024A8                     __ptext5:
  2786                           	opt stack 0
  2787  0024A8                     _delay_ms:
  2788                           	opt stack 25
  2789                           
  2790                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2791                           
  2792                           ;incstack = 0
  2793  0024A8  C0A9  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2794  0024AC  0100               	movlb	0	; () banked
  2795  0024AE  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  2796  0024B0  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
  2797  0024B4  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2798  0024B8  EC71  F012         	call	___wmul	;wreg free
  2799  0024BC  C060  F092         	movff	?___wmul,_clock_counter_reference	;volatile
  2800  0024C0  C061  F093         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2801                           
  2802                           ;src\delay.c: 75: while (clock_counter_reference) {
  2803  0024C4  D007               	goto	l571
  2804  0024C6                     l3242:
  2805                           
  2806                           ;src\delay.c: 85: _delay(240);
  2807  0024C6  0E50               	movlw	80
  2808  0024C8                     u4217:
  2809  0024C8  2EE8               	decfsz	wreg,f,c
  2810  0024CA  D7FE               	goto	u4217
  2811                           
  2812                           ;src\delay.c: 88: clock_counter_reference--;
  2813  0024CC  0100               	movlb	0	; () banked
  2814  0024CE  0792               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2815  0024D0  A0D8               	btfss	status,0,c
  2816  0024D2  0793               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2817  0024D4                     l571:
  2818  0024D4  0100               	movlb	0	; () banked
  2819  0024D6  5192               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2820  0024D8  0100               	movlb	0	; () banked
  2821  0024DA  1193               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2822  0024DC  B4D8               	btfsc	status,2,c
  2823  0024DE  0012               	return	
  2824  0024E0  D7F2               	goto	l3242
  2825  0024E2                     __end_of_delay_ms:
  2826                           	opt stack 0
  2827                           tblptru	equ	0xFF8
  2828                           tblptrh	equ	0xFF7
  2829                           tblptrl	equ	0xFF6
  2830                           tablat	equ	0xFF5
  2831                           prodh	equ	0xFF4
  2832                           prodl	equ	0xFF3
  2833                           intcon	equ	0xFF2
  2834                           intcon2	equ	0xFF1
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           indf2	equ	0xFDF
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function ___wmul *****************
  2843 ;; Defined at:
  2844 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2847 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  product         2    4[BANK0 ] unsigned int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    0[BANK0 ] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, prodl, prodh
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2859 ;;      Params:         0       4       0       0
  2860 ;;      Locals:         0       2       0       0
  2861 ;;      Temps:          0       0       0       0
  2862 ;;      Totals:         0       6       0       0
  2863 ;;Total ram usage:        6 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    3
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_delay_ms
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text6
  2874  0024E2                     __ptext6:
  2875                           	opt stack 0
  2876  0024E2                     ___wmul:
  2877                           	opt stack 25
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;incstack = 0
  2881  0024E2  0100               	movlb	0	; () banked
  2882  0024E4  5160               	movf	___wmul@multiplier& (0+255),w,b
  2883  0024E6  0100               	movlb	0	; () banked
  2884  0024E8  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2885  0024EA  CFF3 F064          	movff	prodl,___wmul@product
  2886  0024EE  CFF4 F065          	movff	prodh,___wmul@product+1
  2887  0024F2  0100               	movlb	0	; () banked
  2888  0024F4  5160               	movf	___wmul@multiplier& (0+255),w,b
  2889  0024F6  0100               	movlb	0	; () banked
  2890  0024F8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2891  0024FA  50F3               	movf	prodl,w,c
  2892  0024FC  0100               	movlb	0	; () banked
  2893  0024FE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2894  002500  0100               	movlb	0	; () banked
  2895  002502  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2896  002504  0100               	movlb	0	; () banked
  2897  002506  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2898  002508  50F3               	movf	prodl,w,c
  2899  00250A  0100               	movlb	0	; () banked
  2900  00250C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2901                           
  2902                           ; BSR set to: 0
  2903  00250E  C064  F060         	movff	___wmul@product,?___wmul
  2904  002512  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2905  002516  0012               	return	
  2906  002518                     __end_of___wmul:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           intcon	equ	0xFF2
  2915                           intcon2	equ	0xFF1
  2916                           postinc0	equ	0xFEE
  2917                           wreg	equ	0xFE8
  2918                           indf2	equ	0xFDF
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _CANInitialize *****************
  2924 ;; Defined at:
  2925 ;;		line 218 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  propSeg         1    wreg     unsigned char 
  2928 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  2929 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  2930 ;;  SJW             1   16[BANK0 ] unsigned char 
  2931 ;;  BRP             1   17[BANK0 ] unsigned char 
  2932 ;;  flags           1   18[BANK0 ] enum E16844
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  propSeg         1   23[BANK0 ] unsigned char 
  2935 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  2936 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;		None               void
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2946 ;;      Params:         0       5       0       0
  2947 ;;      Locals:         0       3       0       0
  2948 ;;      Temps:          0       4       0       0
  2949 ;;      Totals:         0      12       0       0
  2950 ;;Total ram usage:       12 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    4
  2953 ;; This function calls:
  2954 ;;		_CANOperationMode
  2955 ;;		_CANSetFilter
  2956 ;;		_CANSetMask
  2957 ;; This function is called by:
  2958 ;;		_board_initialization
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text7
  2963  001C02                     __ptext7:
  2964                           	opt stack 0
  2965  001C02                     _CANInitialize:
  2966                           	opt stack 25
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;incstack = 0
  2970                           ;CANInitialize@propSeg stored from wreg
  2971  001C02  0100               	movlb	0	; () banked
  2972  001C04  6F77               	movwf	CANInitialize@propSeg& (0+255),b
  2973                           
  2974                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2975                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2976                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2977  001C06  0E80               	movlw	128
  2978  001C08  ECB1  F012         	call	_CANOperationMode
  2979                           
  2980                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2981  001C0C  0E00               	movlw	0
  2982  001C0E  6E70               	movwf	3952,c	;volatile
  2983                           
  2984                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2985  001C10  0E00               	movlw	0
  2986  001C12  6E71               	movwf	3953,c	;volatile
  2987                           
  2988                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2989  001C14  0E00               	movlw	0
  2990  001C16  6E72               	movwf	3954,c	;volatile
  2991                           
  2992                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2993  001C18  0100               	movlb	0	; () banked
  2994  001C1A  4170               	rrncf	CANInitialize@SJW& (0+255),w,b
  2995  001C1C  42E8               	rrncf	wreg,f,c
  2996  001C1E  0BC0               	andlw	192
  2997  001C20  0100               	movlb	0	; () banked
  2998  001C22  6F70               	movwf	CANInitialize@SJW& (0+255),b
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3002  001C24  0100               	movlb	0	; () banked
  3003  001C26  5170               	movf	CANInitialize@SJW& (0+255),w,b
  3004  001C28  1270               	iorwf	3952,f,c	;volatile
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3008  001C2A  0100               	movlb	0	; () banked
  3009  001C2C  5171               	movf	CANInitialize@BRP& (0+255),w,b
  3010  001C2E  1270               	iorwf	3952,f,c	;volatile
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3014  001C30  0100               	movlb	0	; () banked
  3015  001C32  5177               	movf	CANInitialize@propSeg& (0+255),w,b
  3016  001C34  1271               	iorwf	3953,f,c	;volatile
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3020  001C36  0100               	movlb	0	; () banked
  3021  001C38  396E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3022  001C3A  42E8               	rrncf	wreg,f,c
  3023  001C3C  0BF8               	andlw	248
  3024  001C3E  0100               	movlb	0	; () banked
  3025  001C40  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3029  001C42  0100               	movlb	0	; () banked
  3030  001C44  516E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3031  001C46  1271               	iorwf	3953,f,c	;volatile
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3035  001C48  0100               	movlb	0	; () banked
  3036  001C4A  A572               	btfss	CANInitialize@flags& (0+255),2,b
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3040  001C4C  8C71               	bsf	3953,6,c	;volatile
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3044  001C4E  0100               	movlb	0	; () banked
  3045  001C50  B172               	btfsc	CANInitialize@flags& (0+255),0,b
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3049  001C52  8E71               	bsf	3953,7,c	;volatile
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3053                           
  3054                           ; BSR set to: 0
  3055  001C54  0100               	movlb	0	; () banked
  3056  001C56  516F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3057  001C58  1272               	iorwf	3954,f,c	;volatile
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3061  001C5A  0100               	movlb	0	; () banked
  3062  001C5C  B372               	btfsc	CANInitialize@flags& (0+255),1,b
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3066  001C5E  8C72               	bsf	3954,6,c	;volatile
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3070                           
  3071                           ; BSR set to: 0
  3072  001C60  0100               	movlb	0	; () banked
  3073  001C62  5172               	movf	CANInitialize@flags& (0+255),w,b
  3074  001C64  0B60               	andlw	96
  3075  001C66  6E60               	movwf	3936,c	;volatile
  3076                           
  3077                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3078  001C68  0100               	movlb	0	; () banked
  3079  001C6A  5172               	movf	CANInitialize@flags& (0+255),w,b
  3080  001C6C  0B10               	andlw	16
  3081  001C6E  0AFF               	xorlw	255
  3082  001C70  B4D8               	btfsc	status,2,c
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3086  001C72  8460               	bsf	3936,2,c	;volatile
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3090  001C74  CF60 FF50          	movff	3936,3920	;volatile
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3094  001C78  0E00               	movlw	0
  3095  001C7A  0100               	movlb	0	; () banked
  3096  001C7C  6F60               	movwf	CANSetMask@mask& (0+255),b
  3097  001C7E  0E00               	movlw	0
  3098  001C80  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  3099  001C82  0E00               	movlw	0
  3100  001C84  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  3101  001C86  0E00               	movlw	0
  3102  001C88  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  3103  001C8A  0EF7               	movlw	247
  3104  001C8C  0100               	movlb	0	; () banked
  3105  001C8E  6F64               	movwf	CANSetMask@type& (0+255),b
  3106  001C90  0E01               	movlw	1
  3107  001C92  EC32  F00C         	call	_CANSetMask
  3108                           
  3109                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3110  001C96  0E00               	movlw	0
  3111  001C98  0100               	movlb	0	; () banked
  3112  001C9A  6F60               	movwf	CANSetMask@mask& (0+255),b
  3113  001C9C  0E00               	movlw	0
  3114  001C9E  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  3115  001CA0  0E00               	movlw	0
  3116  001CA2  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  3117  001CA4  0E00               	movlw	0
  3118  001CA6  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  3119  001CA8  0EF7               	movlw	247
  3120  001CAA  0100               	movlb	0	; () banked
  3121  001CAC  6F64               	movwf	CANSetMask@type& (0+255),b
  3122  001CAE  0E02               	movlw	2
  3123  001CB0  EC32  F00C         	call	_CANSetMask
  3124                           
  3125                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3126  001CB4  D00F               	goto	l2990
  3127  001CB6                     l2984:
  3128                           
  3129                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3130  001CB6  0EF7               	movlw	247
  3131  001CB8  0100               	movlb	0	; () banked
  3132  001CBA  6F78               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3133  001CBC  D007               	goto	l2986
  3134  001CBE                     l360:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3138  001CBE  0100               	movlb	0	; () banked
  3139  001CC0  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  3140                           
  3141                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3142  001CC2  0100               	movlb	0	; () banked
  3143  001CC4  6979               	setf	CANInitialize@FilterConfig2& (0+255),b
  3144                           
  3145                           ;inc\CANlib.h: 273: break;
  3146  001CC6  D028               	goto	l2992
  3147  001CC8                     l361:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3151  001CC8  0100               	movlb	0	; () banked
  3152  001CCA  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  3153  001CCC                     l2986:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3157  001CCC  0EF7               	movlw	247
  3158  001CCE  0100               	movlb	0	; () banked
  3159  001CD0  6F79               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;inc\CANlib.h: 278: }
  3163                           
  3164                           ;inc\CANlib.h: 277: break;
  3165  001CD2  D022               	goto	l2992
  3166  001CD4                     l2990:
  3167  001CD4  0E9F               	movlw	159
  3168  001CD6  0100               	movlb	0	; () banked
  3169  001CD8  6F73               	movwf	??_CANInitialize& (0+255),b
  3170  001CDA  0EFF               	movlw	255
  3171  001CDC  0100               	movlb	0	; () banked
  3172  001CDE  6F74               	movwf	(??_CANInitialize+1)& (0+255),b
  3173  001CE0  0100               	movlb	0	; () banked
  3174  001CE2  5172               	movf	CANInitialize@flags& (0+255),w,b
  3175  001CE4  0B60               	andlw	96
  3176  001CE6  0100               	movlb	0	; () banked
  3177  001CE8  6F75               	movwf	(??_CANInitialize+2)& (0+255),b
  3178  001CEA  6B76               	clrf	(??_CANInitialize+3)& (0+255),b
  3179  001CEC  0100               	movlb	0	; () banked
  3180  001CEE  5173               	movf	??_CANInitialize& (0+255),w,b
  3181  001CF0  0100               	movlb	0	; () banked
  3182  001CF2  1375               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3183  001CF4  0100               	movlb	0	; () banked
  3184  001CF6  5174               	movf	(??_CANInitialize+1)& (0+255),w,b
  3185  001CF8  0100               	movlb	0	; () banked
  3186  001CFA  1376               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3187                           
  3188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3189                           ; Switch size 1, requested type "space"
  3190                           ; Number of cases is 1, Range of values is 0 to 0
  3191                           ; switch strategies available:
  3192                           ; Name         Instructions Cycles
  3193                           ; simple_byte            4     3 (average)
  3194                           ;	Chosen strategy is simple_byte
  3195  001CFC  0100               	movlb	0	; () banked
  3196  001CFE  5176               	movf	(??_CANInitialize+3)& (0+255),w,b
  3197  001D00  0A00               	xorlw	0	; case 0
  3198  001D02  A4D8               	btfss	status,2,c
  3199  001D04  D7E1               	goto	l361
  3200                           
  3201                           ; BSR set to: 0
  3202                           ; Switch size 1, requested type "space"
  3203                           ; Number of cases is 2, Range of values is 191 to 223
  3204                           ; switch strategies available:
  3205                           ; Name         Instructions Cycles
  3206                           ; simple_byte            7     4 (average)
  3207                           ;	Chosen strategy is simple_byte
  3208  001D06  0100               	movlb	0	; () banked
  3209  001D08  5175               	movf	(??_CANInitialize+2)& (0+255),w,b
  3210  001D0A  0ABF               	xorlw	191	; case 191
  3211  001D0C  B4D8               	btfsc	status,2,c
  3212  001D0E  D7D7               	goto	l360
  3213  001D10  0A60               	xorlw	96	; case 223
  3214  001D12  B4D8               	btfsc	status,2,c
  3215  001D14  D7D0               	goto	l2984
  3216  001D16  D7D8               	goto	l361
  3217  001D18                     l2992:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3221  001D18  0E00               	movlw	0
  3222  001D1A  0100               	movlb	0	; () banked
  3223  001D1C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3224  001D1E  0E00               	movlw	0
  3225  001D20  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3226  001D22  0E00               	movlw	0
  3227  001D24  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3228  001D26  0E00               	movlw	0
  3229  001D28  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3230  001D2A  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3231  001D2E  0E00               	movlw	0
  3232  001D30  EC63  F000         	call	_CANSetFilter
  3233                           
  3234                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3235  001D34  0E00               	movlw	0
  3236  001D36  0100               	movlb	0	; () banked
  3237  001D38  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3238  001D3A  0E00               	movlw	0
  3239  001D3C  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3240  001D3E  0E00               	movlw	0
  3241  001D40  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3242  001D42  0E00               	movlw	0
  3243  001D44  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3244  001D46  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3245  001D4A  0E01               	movlw	1
  3246  001D4C  EC63  F000         	call	_CANSetFilter
  3247                           
  3248                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3249  001D50  0E00               	movlw	0
  3250  001D52  0100               	movlb	0	; () banked
  3251  001D54  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3252  001D56  0E00               	movlw	0
  3253  001D58  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3254  001D5A  0E00               	movlw	0
  3255  001D5C  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3256  001D5E  0E00               	movlw	0
  3257  001D60  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3258  001D62  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3259  001D66  0E02               	movlw	2
  3260  001D68  EC63  F000         	call	_CANSetFilter
  3261                           
  3262                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3263  001D6C  0E00               	movlw	0
  3264  001D6E  0100               	movlb	0	; () banked
  3265  001D70  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3266  001D72  0E00               	movlw	0
  3267  001D74  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3268  001D76  0E00               	movlw	0
  3269  001D78  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3270  001D7A  0E00               	movlw	0
  3271  001D7C  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3272  001D7E  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3273  001D82  0E03               	movlw	3
  3274  001D84  EC63  F000         	call	_CANSetFilter
  3275                           
  3276                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3277  001D88  0E00               	movlw	0
  3278  001D8A  0100               	movlb	0	; () banked
  3279  001D8C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3280  001D8E  0E00               	movlw	0
  3281  001D90  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3282  001D92  0E00               	movlw	0
  3283  001D94  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3284  001D96  0E00               	movlw	0
  3285  001D98  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3286  001D9A  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3287  001D9E  0E04               	movlw	4
  3288  001DA0  EC63  F000         	call	_CANSetFilter
  3289                           
  3290                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3291  001DA4  0E00               	movlw	0
  3292  001DA6  0100               	movlb	0	; () banked
  3293  001DA8  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3294  001DAA  0E00               	movlw	0
  3295  001DAC  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3296  001DAE  0E00               	movlw	0
  3297  001DB0  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3298  001DB2  0E00               	movlw	0
  3299  001DB4  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3300  001DB6  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3301  001DBA  0E05               	movlw	5
  3302  001DBC  EC63  F000         	call	_CANSetFilter
  3303                           
  3304                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3305  001DC0  0E00               	movlw	0
  3306  001DC2  ECB1  F012         	call	_CANOperationMode
  3307  001DC6  0012               	return		;funcret
  3308  001DC8                     __end_of_CANInitialize:
  3309                           	opt stack 0
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           intcon2	equ	0xFF1
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           indf2	equ	0xFDF
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           status	equ	0xFD8
  3324                           
  3325 ;; *************** function _CANSetMask *****************
  3326 ;; Defined at:
  3327 ;;		line 640 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  numBuffer       1    wreg     enum E16878
  3330 ;;  mask            4    0[BANK0 ] unsigned long 
  3331 ;;  type            1    4[BANK0 ] enum E16844
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  numBuffer       1    9[BANK0 ] enum E16878
  3334 ;;  tamp            4   10[BANK0 ] unsigned long 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;		None               void
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3344 ;;      Params:         0       5       0       0
  3345 ;;      Locals:         0       5       0       0
  3346 ;;      Temps:          0       4       0       0
  3347 ;;      Totals:         0      14       0       0
  3348 ;;Total ram usage:       14 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    3
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_CANInitialize
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text8
  3359  001864                     __ptext8:
  3360                           	opt stack 0
  3361  001864                     _CANSetMask:
  3362                           	opt stack 25
  3363                           
  3364                           ;incstack = 0
  3365                           ;CANSetMask@numBuffer stored from wreg
  3366  001864  0100               	movlb	0	; () banked
  3367  001866  6F69               	movwf	CANSetMask@numBuffer& (0+255),b
  3368                           
  3369                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3370  001868  0100               	movlb	0	; () banked
  3371  00186A  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  3372  00186C  A4D8               	btfss	status,2,c
  3373  00186E  D056               	goto	l2548
  3374                           
  3375                           ; BSR set to: 0
  3376  001870  0100               	movlb	0	; () banked
  3377  001872  2964               	incf	CANSetMask@type& (0+255),w,b
  3378  001874  A4D8               	btfss	status,2,c
  3379  001876  D052               	goto	l2548
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;inc\CANlib.h: 644: {
  3383                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3384  001878  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3385  00187C  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3386  001880  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3387  001884  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3388  001888  0E04               	movlw	4
  3389  00188A  D006               	goto	u2140
  3390  00188C                     u2145:
  3391  00188C  0100               	movlb	0	; () banked
  3392  00188E  90D8               	bcf	status,0,c
  3393  001890  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3394  001892  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3395  001894  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3396  001896  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3397  001898                     u2140:
  3398  001898  2EE8               	decfsz	wreg,f,c
  3399  00189A  D7F8               	goto	u2145
  3400  00189C  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3401  0018A0  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3402  0018A4  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3403  0018A8  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3407  0018AC  0100               	movlb	0	; () banked
  3408  0018AE  516A               	movf	CANSetMask@tamp& (0+255),w,b
  3409  0018B0  0100               	movlb	0	; () banked
  3410  0018B2  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3411  0018B4  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3412  0018B6  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3413  0018B8  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3417  0018BA  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3421  0018BE  0E07               	movlw	7
  3422  0018C0  0100               	movlb	0	; () banked
  3423  0018C2  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3424  0018C4  0100               	movlb	0	; () banked
  3425  0018C6  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3426  0018C8  0E00               	movlw	0
  3427  0018CA  0100               	movlb	0	; () banked
  3428  0018CC  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3429  0018CE  0100               	movlb	0	; () banked
  3430  0018D0  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3431  0018D2  0E00               	movlw	0
  3432  0018D4  0100               	movlb	0	; () banked
  3433  0018D6  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3434  0018D8  0100               	movlb	0	; () banked
  3435  0018DA  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3436  0018DC  0E00               	movlw	0
  3437  0018DE  0100               	movlb	0	; () banked
  3438  0018E0  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3439  0018E2  0100               	movlb	0	; () banked
  3440  0018E4  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3444  0018E6  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3445  0018EA  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3446  0018EE  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3447  0018F2  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3448  0018F6  0E05               	movlw	5
  3449  0018F8                     u2155:
  3450  0018F8  90D8               	bcf	status,0,c
  3451  0018FA  0100               	movlb	0	; () banked
  3452  0018FC  3765               	rlcf	??_CANSetMask& (0+255),f,b
  3453  0018FE  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3454  001900  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3455  001902  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3456  001904  2EE8               	decfsz	wreg,f,c
  3457  001906  D7F8               	goto	u2155
  3458  001908  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3459  00190C  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3460  001910  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3461  001914  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3465  001918  C06A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3466  00191C                     l2548:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;inc\CANlib.h: 652: }
  3470                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3471  00191C  0E02               	movlw	2
  3472  00191E  0100               	movlb	0	; () banked
  3473  001920  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3474  001922  A4D8               	btfss	status,2,c
  3475  001924  D056               	goto	l2564
  3476                           
  3477                           ; BSR set to: 0
  3478  001926  0100               	movlb	0	; () banked
  3479  001928  2964               	incf	CANSetMask@type& (0+255),w,b
  3480  00192A  A4D8               	btfss	status,2,c
  3481  00192C  D052               	goto	l2564
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 655: {
  3485                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3486  00192E  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3487  001932  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3488  001936  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3489  00193A  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3490  00193E  0E04               	movlw	4
  3491  001940  D006               	goto	u2180
  3492  001942                     u2185:
  3493  001942  0100               	movlb	0	; () banked
  3494  001944  90D8               	bcf	status,0,c
  3495  001946  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3496  001948  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3497  00194A  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3498  00194C  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3499  00194E                     u2180:
  3500  00194E  2EE8               	decfsz	wreg,f,c
  3501  001950  D7F8               	goto	u2185
  3502  001952  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3503  001956  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3504  00195A  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3505  00195E  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3509  001962  0100               	movlb	0	; () banked
  3510  001964  516A               	movf	CANSetMask@tamp& (0+255),w,b
  3511  001966  0100               	movlb	0	; () banked
  3512  001968  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3513  00196A  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3514  00196C  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3515  00196E  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3519  001970  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3523  001974  0E07               	movlw	7
  3524  001976  0100               	movlb	0	; () banked
  3525  001978  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3526  00197A  0100               	movlb	0	; () banked
  3527  00197C  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3528  00197E  0E00               	movlw	0
  3529  001980  0100               	movlb	0	; () banked
  3530  001982  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3531  001984  0100               	movlb	0	; () banked
  3532  001986  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3533  001988  0E00               	movlw	0
  3534  00198A  0100               	movlb	0	; () banked
  3535  00198C  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3536  00198E  0100               	movlb	0	; () banked
  3537  001990  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3538  001992  0E00               	movlw	0
  3539  001994  0100               	movlb	0	; () banked
  3540  001996  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3541  001998  0100               	movlb	0	; () banked
  3542  00199A  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3546  00199C  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3547  0019A0  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3548  0019A4  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3549  0019A8  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3550  0019AC  0E05               	movlw	5
  3551  0019AE                     u2195:
  3552  0019AE  90D8               	bcf	status,0,c
  3553  0019B0  0100               	movlb	0	; () banked
  3554  0019B2  3765               	rlcf	??_CANSetMask& (0+255),f,b
  3555  0019B4  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3556  0019B6  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3557  0019B8  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3558  0019BA  2EE8               	decfsz	wreg,f,c
  3559  0019BC  D7F8               	goto	u2195
  3560  0019BE  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3561  0019C2  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3562  0019C6  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3563  0019CA  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3567  0019CE  C06A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3568  0019D2                     l2564:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;inc\CANlib.h: 663: }
  3572                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3573  0019D2  0100               	movlb	0	; () banked
  3574  0019D4  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  3575  0019D6  A4D8               	btfss	status,2,c
  3576  0019D8  D087               	goto	l2596
  3577                           
  3578                           ; BSR set to: 0
  3579  0019DA  0EF7               	movlw	247
  3580  0019DC  0100               	movlb	0	; () banked
  3581  0019DE  1964               	xorwf	CANSetMask@type& (0+255),w,b
  3582  0019E0  A4D8               	btfss	status,2,c
  3583  0019E2  D082               	goto	l2596
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 666: {
  3587                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3588  0019E4  0100               	movlb	0	; () banked
  3589  0019E6  5160               	movf	CANSetMask@mask& (0+255),w,b
  3590  0019E8  0100               	movlb	0	; () banked
  3591  0019EA  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3592  0019EC  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3593  0019EE  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3594  0019F0  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3598  0019F2  C06A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3602  0019F6  0E00               	movlw	0
  3603  0019F8  0100               	movlb	0	; () banked
  3604  0019FA  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3605  0019FC  0100               	movlb	0	; () banked
  3606  0019FE  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3607  001A00  0EFF               	movlw	255
  3608  001A02  0100               	movlb	0	; () banked
  3609  001A04  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3610  001A06  0100               	movlb	0	; () banked
  3611  001A08  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3612  001A0A  0E00               	movlw	0
  3613  001A0C  0100               	movlb	0	; () banked
  3614  001A0E  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3615  001A10  0100               	movlb	0	; () banked
  3616  001A12  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3617  001A14  0E00               	movlw	0
  3618  001A16  0100               	movlb	0	; () banked
  3619  001A18  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3620  001A1A  0100               	movlb	0	; () banked
  3621  001A1C  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3625  001A1E  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3626  001A22  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3627  001A26  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3628  001A2A  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3629  001A2E  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  3630  001A32  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  3631  001A36  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  3632  001A3A  0100               	movlb	0	; () banked
  3633  001A3C  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  3634  001A3E  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3635  001A42  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3636  001A46  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3637  001A4A  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3641  001A4E  C06A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3645  001A52  0100               	movlb	0	; () banked
  3646  001A54  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3647  001A56  D003               	goto	l434
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3651  001A58  010F               	movlb	15	; () banked
  3652  001A5A  8119               	bsf	25,0,b	;volatile
  3653  001A5C  D002               	goto	l435
  3654  001A5E                     l434:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;inc\CANlib.h: 676: else
  3658                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3659  001A5E  010F               	movlb	15	; () banked
  3660  001A60  9119               	bcf	25,0,b	;volatile
  3661  001A62                     l435:
  3662                           
  3663                           ; BSR set to: 15
  3664                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3665  001A62  0100               	movlb	0	; () banked
  3666  001A64  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3667  001A66  D003               	goto	l436
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3671  001A68  010F               	movlb	15	; () banked
  3672  001A6A  8319               	bsf	25,1,b	;volatile
  3673  001A6C  D002               	goto	l437
  3674  001A6E                     l436:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;inc\CANlib.h: 681: else
  3678                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3679  001A6E  010F               	movlb	15	; () banked
  3680  001A70  9319               	bcf	25,1,b	;volatile
  3681  001A72                     l437:
  3682                           
  3683                           ; BSR set to: 15
  3684                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3685  001A72  0100               	movlb	0	; () banked
  3686  001A74  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3687  001A76  D003               	goto	l438
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3691  001A78  010F               	movlb	15	; () banked
  3692  001A7A  8B19               	bsf	25,5,b	;volatile
  3693  001A7C  D002               	goto	l439
  3694  001A7E                     l438:
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;inc\CANlib.h: 686: else
  3698                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3699  001A7E  010F               	movlb	15	; () banked
  3700  001A80  9B19               	bcf	25,5,b	;volatile
  3701  001A82                     l439:
  3702                           
  3703                           ; BSR set to: 15
  3704                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3705  001A82  0100               	movlb	0	; () banked
  3706  001A84  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3707  001A86  D003               	goto	l440
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3711  001A88  010F               	movlb	15	; () banked
  3712  001A8A  8D19               	bsf	25,6,b	;volatile
  3713  001A8C  D002               	goto	l441
  3714  001A8E                     l440:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;inc\CANlib.h: 691: else
  3718                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3719  001A8E  010F               	movlb	15	; () banked
  3720  001A90  9D19               	bcf	25,6,b	;volatile
  3721  001A92                     l441:
  3722                           
  3723                           ; BSR set to: 15
  3724                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3725  001A92  0100               	movlb	0	; () banked
  3726  001A94  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3727  001A96  D003               	goto	l442
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3731  001A98  010F               	movlb	15	; () banked
  3732  001A9A  8F19               	bsf	25,7,b	;volatile
  3733  001A9C  D002               	goto	l2590
  3734  001A9E                     l442:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;inc\CANlib.h: 696: else
  3738                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3739  001A9E  010F               	movlb	15	; () banked
  3740  001AA0  9F19               	bcf	25,7,b	;volatile
  3741  001AA2                     l2590:
  3742                           
  3743                           ; BSR set to: 15
  3744                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3745  001AA2  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3746  001AA6  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3747  001AAA  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3748  001AAE  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3749  001AB2  0E16               	movlw	22
  3750  001AB4  D006               	goto	u2270
  3751  001AB6                     u2275:
  3752  001AB6  0100               	movlb	0	; () banked
  3753  001AB8  90D8               	bcf	status,0,c
  3754  001ABA  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3755  001ABC  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3756  001ABE  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3757  001AC0  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3758  001AC2                     u2270:
  3759  001AC2  2EE8               	decfsz	wreg,f,c
  3760  001AC4  D7F8               	goto	u2275
  3761  001AC6  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3762  001ACA  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3763  001ACE  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3764  001AD2  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3768  001AD6  0100               	movlb	0	; () banked
  3769  001AD8  516A               	movf	CANSetMask@tamp& (0+255),w,b
  3770  001ADA  0100               	movlb	0	; () banked
  3771  001ADC  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3772  001ADE  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3773  001AE0  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3774  001AE2  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3778  001AE4  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3779  001AE8                     l2596:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 702: }
  3783                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3784  001AE8  0E02               	movlw	2
  3785  001AEA  0100               	movlb	0	; () banked
  3786  001AEC  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3787  001AEE  A4D8               	btfss	status,2,c
  3788  001AF0  0012               	return	
  3789                           
  3790                           ; BSR set to: 0
  3791  001AF2  0EF7               	movlw	247
  3792  001AF4  0100               	movlb	0	; () banked
  3793  001AF6  1964               	xorwf	CANSetMask@type& (0+255),w,b
  3794  001AF8  A4D8               	btfss	status,2,c
  3795  001AFA  0012               	return	
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;inc\CANlib.h: 705: {
  3799                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3800  001AFC  0100               	movlb	0	; () banked
  3801  001AFE  5160               	movf	CANSetMask@mask& (0+255),w,b
  3802  001B00  0100               	movlb	0	; () banked
  3803  001B02  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3804  001B04  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3805  001B06  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3806  001B08  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3810  001B0A  C06A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3814  001B0E  0E00               	movlw	0
  3815  001B10  0100               	movlb	0	; () banked
  3816  001B12  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3817  001B14  0100               	movlb	0	; () banked
  3818  001B16  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3819  001B18  0EFF               	movlw	255
  3820  001B1A  0100               	movlb	0	; () banked
  3821  001B1C  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3822  001B1E  0100               	movlb	0	; () banked
  3823  001B20  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3824  001B22  0E00               	movlw	0
  3825  001B24  0100               	movlb	0	; () banked
  3826  001B26  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3827  001B28  0100               	movlb	0	; () banked
  3828  001B2A  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3829  001B2C  0E00               	movlw	0
  3830  001B2E  0100               	movlb	0	; () banked
  3831  001B30  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3832  001B32  0100               	movlb	0	; () banked
  3833  001B34  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3837  001B36  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3838  001B3A  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3839  001B3E  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3840  001B42  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3841  001B46  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  3842  001B4A  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  3843  001B4E  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  3844  001B52  0100               	movlb	0	; () banked
  3845  001B54  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  3846  001B56  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3847  001B5A  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3848  001B5E  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3849  001B62  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3853  001B66  C06A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3857  001B6A  0100               	movlb	0	; () banked
  3858  001B6C  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3859  001B6E  D003               	goto	l445
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3863  001B70  010F               	movlb	15	; () banked
  3864  001B72  811D               	bsf	29,0,b	;volatile
  3865  001B74  D002               	goto	l446
  3866  001B76                     l445:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;inc\CANlib.h: 715: else
  3870                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3871  001B76  010F               	movlb	15	; () banked
  3872  001B78  911D               	bcf	29,0,b	;volatile
  3873  001B7A                     l446:
  3874                           
  3875                           ; BSR set to: 15
  3876                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3877  001B7A  0100               	movlb	0	; () banked
  3878  001B7C  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3879  001B7E  D003               	goto	l447
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3883  001B80  010F               	movlb	15	; () banked
  3884  001B82  831D               	bsf	29,1,b	;volatile
  3885  001B84  D002               	goto	l448
  3886  001B86                     l447:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;inc\CANlib.h: 720: else
  3890                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3891  001B86  010F               	movlb	15	; () banked
  3892  001B88  931D               	bcf	29,1,b	;volatile
  3893  001B8A                     l448:
  3894                           
  3895                           ; BSR set to: 15
  3896                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3897  001B8A  0100               	movlb	0	; () banked
  3898  001B8C  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3899  001B8E  D003               	goto	l449
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3903  001B90  010F               	movlb	15	; () banked
  3904  001B92  8B1D               	bsf	29,5,b	;volatile
  3905  001B94  D002               	goto	l450
  3906  001B96                     l449:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;inc\CANlib.h: 725: else
  3910                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3911  001B96  010F               	movlb	15	; () banked
  3912  001B98  9B1D               	bcf	29,5,b	;volatile
  3913  001B9A                     l450:
  3914                           
  3915                           ; BSR set to: 15
  3916                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3917  001B9A  0100               	movlb	0	; () banked
  3918  001B9C  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3919  001B9E  D003               	goto	l451
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3923  001BA0  010F               	movlb	15	; () banked
  3924  001BA2  8D1D               	bsf	29,6,b	;volatile
  3925  001BA4  D002               	goto	l452
  3926  001BA6                     l451:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;inc\CANlib.h: 730: else
  3930                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3931  001BA6  010F               	movlb	15	; () banked
  3932  001BA8  9D1D               	bcf	29,6,b	;volatile
  3933  001BAA                     l452:
  3934                           
  3935                           ; BSR set to: 15
  3936                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3937  001BAA  0100               	movlb	0	; () banked
  3938  001BAC  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3939  001BAE  D003               	goto	l453
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3943  001BB0  010F               	movlb	15	; () banked
  3944  001BB2  8F1D               	bsf	29,7,b	;volatile
  3945  001BB4  D002               	goto	l2622
  3946  001BB6                     l453:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;inc\CANlib.h: 735: else
  3950                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3951  001BB6  010F               	movlb	15	; () banked
  3952  001BB8  9F1D               	bcf	29,7,b	;volatile
  3953  001BBA                     l2622:
  3954                           
  3955                           ; BSR set to: 15
  3956                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3957  001BBA  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3958  001BBE  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3959  001BC2  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3960  001BC6  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3961  001BCA  0E16               	movlw	22
  3962  001BCC  D006               	goto	u2350
  3963  001BCE                     u2355:
  3964  001BCE  0100               	movlb	0	; () banked
  3965  001BD0  90D8               	bcf	status,0,c
  3966  001BD2  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3967  001BD4  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3968  001BD6  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3969  001BD8  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3970  001BDA                     u2350:
  3971  001BDA  2EE8               	decfsz	wreg,f,c
  3972  001BDC  D7F8               	goto	u2355
  3973  001BDE  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3974  001BE2  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3975  001BE6  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3976  001BEA  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3980  001BEE  0100               	movlb	0	; () banked
  3981  001BF0  516A               	movf	CANSetMask@tamp& (0+255),w,b
  3982  001BF2  0100               	movlb	0	; () banked
  3983  001BF4  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3984  001BF6  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3985  001BF8  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3986  001BFA  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3990  001BFC  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3991  001C00  0012               	return	
  3992  001C02                     __end_of_CANSetMask:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           intcon	equ	0xFF2
  4001                           intcon2	equ	0xFF1
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           indf2	equ	0xFDF
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _CANSetFilter *****************
  4010 ;; Defined at:
  4011 ;;		line 748 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  numBuffer       1    wreg     enum E16881
  4014 ;;  filter          4    0[BANK0 ] unsigned long 
  4015 ;;  type            1    4[BANK0 ] enum E16844
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  numBuffer       1    9[BANK0 ] enum E16881
  4018 ;;  tamp            4   10[BANK0 ] unsigned long 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;		None               void
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4028 ;;      Params:         0       5       0       0
  4029 ;;      Locals:         0       5       0       0
  4030 ;;      Temps:          0       4       0       0
  4031 ;;      Totals:         0      14       0       0
  4032 ;;Total ram usage:       14 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    3
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_CANInitialize
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text9
  4043  0000C6                     __ptext9:
  4044                           	opt stack 0
  4045  0000C6                     _CANSetFilter:
  4046                           	opt stack 25
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;incstack = 0
  4050                           ;CANSetFilter@numBuffer stored from wreg
  4051  0000C6  0100               	movlb	0	; () banked
  4052  0000C8  6F69               	movwf	CANSetFilter@numBuffer& (0+255),b
  4053                           
  4054                           ;inc\CANlib.h: 750: unsigned long tamp;
  4055                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4056  0000CA  0100               	movlb	0	; () banked
  4057  0000CC  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4058  0000CE  0100               	movlb	0	; () banked
  4059  0000D0  A4D8               	btfss	status,2,c
  4060  0000D2  D058               	goto	l2646
  4061                           
  4062                           ; BSR set to: 0
  4063  0000D4  0100               	movlb	0	; () banked
  4064  0000D6  2964               	incf	CANSetFilter@type& (0+255),w,b
  4065  0000D8  A4D8               	btfss	status,2,c
  4066  0000DA  D054               	goto	l2646
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 753: {
  4070                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4071  0000DC  010F               	movlb	15	; () banked
  4072  0000DE  9701               	bcf	1,3,b	;volatile
  4073                           
  4074                           ; BSR set to: 15
  4075                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4076  0000E0  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4077  0000E4  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4078  0000E8  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4079  0000EC  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4080  0000F0  0E04               	movlw	4
  4081  0000F2  D006               	goto	u2380
  4082  0000F4                     u2385:
  4083  0000F4  0100               	movlb	0	; () banked
  4084  0000F6  90D8               	bcf	status,0,c
  4085  0000F8  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4086  0000FA  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4087  0000FC  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4088  0000FE  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4089  000100                     u2380:
  4090  000100  2EE8               	decfsz	wreg,f,c
  4091  000102  D7F8               	goto	u2385
  4092  000104  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4093  000108  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4094  00010C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4095  000110  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4099  000114  0100               	movlb	0	; () banked
  4100  000116  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4101  000118  0100               	movlb	0	; () banked
  4102  00011A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4103  00011C  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4104  00011E  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4105  000120  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4109  000122  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4113  000126  0E07               	movlw	7
  4114  000128  0100               	movlb	0	; () banked
  4115  00012A  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4116  00012C  0100               	movlb	0	; () banked
  4117  00012E  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4118  000130  0E00               	movlw	0
  4119  000132  0100               	movlb	0	; () banked
  4120  000134  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4121  000136  0100               	movlb	0	; () banked
  4122  000138  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4123  00013A  0E00               	movlw	0
  4124  00013C  0100               	movlb	0	; () banked
  4125  00013E  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4126  000140  0100               	movlb	0	; () banked
  4127  000142  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4128  000144  0E00               	movlw	0
  4129  000146  0100               	movlb	0	; () banked
  4130  000148  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4131  00014A  0100               	movlb	0	; () banked
  4132  00014C  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4136  00014E  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4137  000152  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4138  000156  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4139  00015A  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4140  00015E  0E05               	movlw	5
  4141  000160                     u2395:
  4142  000160  90D8               	bcf	status,0,c
  4143  000162  0100               	movlb	0	; () banked
  4144  000164  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4145  000166  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4146  000168  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4147  00016A  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4148  00016C  2EE8               	decfsz	wreg,f,c
  4149  00016E  D7F8               	goto	u2395
  4150  000170  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4151  000174  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4152  000178  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4153  00017C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4157  000180  C06A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4158  000184                     l2646:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;inc\CANlib.h: 763: }
  4162                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4163  000184  0100               	movlb	0	; () banked
  4164  000186  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4165  000188  A4D8               	btfss	status,2,c
  4166  00018A  D058               	goto	l2664
  4167                           
  4168                           ; BSR set to: 0
  4169  00018C  0100               	movlb	0	; () banked
  4170  00018E  2964               	incf	CANSetFilter@type& (0+255),w,b
  4171  000190  A4D8               	btfss	status,2,c
  4172  000192  D054               	goto	l2664
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;inc\CANlib.h: 766: {
  4176                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4177  000194  010F               	movlb	15	; () banked
  4178  000196  9705               	bcf	5,3,b	;volatile
  4179                           
  4180                           ; BSR set to: 15
  4181                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4182  000198  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4183  00019C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4184  0001A0  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4185  0001A4  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4186  0001A8  0E04               	movlw	4
  4187  0001AA  D006               	goto	u2420
  4188  0001AC                     u2425:
  4189  0001AC  0100               	movlb	0	; () banked
  4190  0001AE  90D8               	bcf	status,0,c
  4191  0001B0  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4192  0001B2  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4193  0001B4  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4194  0001B6  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4195  0001B8                     u2420:
  4196  0001B8  2EE8               	decfsz	wreg,f,c
  4197  0001BA  D7F8               	goto	u2425
  4198  0001BC  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4199  0001C0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4200  0001C4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4201  0001C8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4205  0001CC  0100               	movlb	0	; () banked
  4206  0001CE  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4207  0001D0  0100               	movlb	0	; () banked
  4208  0001D2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4209  0001D4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4210  0001D6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4211  0001D8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4215  0001DA  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4219  0001DE  0E07               	movlw	7
  4220  0001E0  0100               	movlb	0	; () banked
  4221  0001E2  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4222  0001E4  0100               	movlb	0	; () banked
  4223  0001E6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4224  0001E8  0E00               	movlw	0
  4225  0001EA  0100               	movlb	0	; () banked
  4226  0001EC  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4227  0001EE  0100               	movlb	0	; () banked
  4228  0001F0  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4229  0001F2  0E00               	movlw	0
  4230  0001F4  0100               	movlb	0	; () banked
  4231  0001F6  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4232  0001F8  0100               	movlb	0	; () banked
  4233  0001FA  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4234  0001FC  0E00               	movlw	0
  4235  0001FE  0100               	movlb	0	; () banked
  4236  000200  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4237  000202  0100               	movlb	0	; () banked
  4238  000204  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4242  000206  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4243  00020A  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4244  00020E  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4245  000212  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4246  000216  0E05               	movlw	5
  4247  000218                     u2435:
  4248  000218  90D8               	bcf	status,0,c
  4249  00021A  0100               	movlb	0	; () banked
  4250  00021C  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4251  00021E  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4252  000220  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4253  000222  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4254  000224  2EE8               	decfsz	wreg,f,c
  4255  000226  D7F8               	goto	u2435
  4256  000228  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4257  00022C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4258  000230  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4259  000234  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4263  000238  C06A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4264  00023C                     l2664:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 776: }
  4268                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4269  00023C  0E02               	movlw	2
  4270  00023E  0100               	movlb	0	; () banked
  4271  000240  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4272  000242  A4D8               	btfss	status,2,c
  4273  000244  D058               	goto	l2682
  4274                           
  4275                           ; BSR set to: 0
  4276  000246  0100               	movlb	0	; () banked
  4277  000248  2964               	incf	CANSetFilter@type& (0+255),w,b
  4278  00024A  A4D8               	btfss	status,2,c
  4279  00024C  D054               	goto	l2682
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 779: {
  4283                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4284  00024E  010F               	movlb	15	; () banked
  4285  000250  9709               	bcf	9,3,b	;volatile
  4286                           
  4287                           ; BSR set to: 15
  4288                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4289  000252  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4290  000256  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4291  00025A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4292  00025E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4293  000262  0E04               	movlw	4
  4294  000264  D006               	goto	u2460
  4295  000266                     u2465:
  4296  000266  0100               	movlb	0	; () banked
  4297  000268  90D8               	bcf	status,0,c
  4298  00026A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4299  00026C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4300  00026E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4301  000270  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4302  000272                     u2460:
  4303  000272  2EE8               	decfsz	wreg,f,c
  4304  000274  D7F8               	goto	u2465
  4305  000276  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4306  00027A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4307  00027E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4308  000282  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4312  000286  0100               	movlb	0	; () banked
  4313  000288  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4314  00028A  0100               	movlb	0	; () banked
  4315  00028C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4316  00028E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4317  000290  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4318  000292  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4322  000294  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4326  000298  0E07               	movlw	7
  4327  00029A  0100               	movlb	0	; () banked
  4328  00029C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4329  00029E  0100               	movlb	0	; () banked
  4330  0002A0  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4331  0002A2  0E00               	movlw	0
  4332  0002A4  0100               	movlb	0	; () banked
  4333  0002A6  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4334  0002A8  0100               	movlb	0	; () banked
  4335  0002AA  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4336  0002AC  0E00               	movlw	0
  4337  0002AE  0100               	movlb	0	; () banked
  4338  0002B0  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4339  0002B2  0100               	movlb	0	; () banked
  4340  0002B4  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4341  0002B6  0E00               	movlw	0
  4342  0002B8  0100               	movlb	0	; () banked
  4343  0002BA  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4344  0002BC  0100               	movlb	0	; () banked
  4345  0002BE  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4349  0002C0  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4350  0002C4  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4351  0002C8  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4352  0002CC  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4353  0002D0  0E05               	movlw	5
  4354  0002D2                     u2475:
  4355  0002D2  90D8               	bcf	status,0,c
  4356  0002D4  0100               	movlb	0	; () banked
  4357  0002D6  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4358  0002D8  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4359  0002DA  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4360  0002DC  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4361  0002DE  2EE8               	decfsz	wreg,f,c
  4362  0002E0  D7F8               	goto	u2475
  4363  0002E2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4364  0002E6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4365  0002EA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4366  0002EE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4370  0002F2  C06A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4371  0002F6                     l2682:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;inc\CANlib.h: 789: }
  4375                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4376  0002F6  0E03               	movlw	3
  4377  0002F8  0100               	movlb	0	; () banked
  4378  0002FA  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4379  0002FC  A4D8               	btfss	status,2,c
  4380  0002FE  D058               	goto	l2700
  4381                           
  4382                           ; BSR set to: 0
  4383  000300  0100               	movlb	0	; () banked
  4384  000302  2964               	incf	CANSetFilter@type& (0+255),w,b
  4385  000304  A4D8               	btfss	status,2,c
  4386  000306  D054               	goto	l2700
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;inc\CANlib.h: 792: {
  4390                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4391  000308  010F               	movlb	15	; () banked
  4392  00030A  970D               	bcf	13,3,b	;volatile
  4393                           
  4394                           ; BSR set to: 15
  4395                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4396  00030C  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4397  000310  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4398  000314  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4399  000318  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4400  00031C  0E04               	movlw	4
  4401  00031E  D006               	goto	u2500
  4402  000320                     u2505:
  4403  000320  0100               	movlb	0	; () banked
  4404  000322  90D8               	bcf	status,0,c
  4405  000324  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4406  000326  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4407  000328  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4408  00032A  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4409  00032C                     u2500:
  4410  00032C  2EE8               	decfsz	wreg,f,c
  4411  00032E  D7F8               	goto	u2505
  4412  000330  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4413  000334  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4414  000338  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4415  00033C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4419  000340  0100               	movlb	0	; () banked
  4420  000342  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4421  000344  0100               	movlb	0	; () banked
  4422  000346  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4423  000348  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4424  00034A  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4425  00034C  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4429  00034E  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4433  000352  0E07               	movlw	7
  4434  000354  0100               	movlb	0	; () banked
  4435  000356  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4436  000358  0100               	movlb	0	; () banked
  4437  00035A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4438  00035C  0E00               	movlw	0
  4439  00035E  0100               	movlb	0	; () banked
  4440  000360  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4441  000362  0100               	movlb	0	; () banked
  4442  000364  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4443  000366  0E00               	movlw	0
  4444  000368  0100               	movlb	0	; () banked
  4445  00036A  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4446  00036C  0100               	movlb	0	; () banked
  4447  00036E  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4448  000370  0E00               	movlw	0
  4449  000372  0100               	movlb	0	; () banked
  4450  000374  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4451  000376  0100               	movlb	0	; () banked
  4452  000378  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4456  00037A  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4457  00037E  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4458  000382  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4459  000386  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4460  00038A  0E05               	movlw	5
  4461  00038C                     u2515:
  4462  00038C  90D8               	bcf	status,0,c
  4463  00038E  0100               	movlb	0	; () banked
  4464  000390  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4465  000392  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4466  000394  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4467  000396  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4468  000398  2EE8               	decfsz	wreg,f,c
  4469  00039A  D7F8               	goto	u2515
  4470  00039C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4471  0003A0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4472  0003A4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4473  0003A8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4477  0003AC  C06A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4478  0003B0                     l2700:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;inc\CANlib.h: 802: }
  4482                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4483  0003B0  0E04               	movlw	4
  4484  0003B2  0100               	movlb	0	; () banked
  4485  0003B4  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4486  0003B6  A4D8               	btfss	status,2,c
  4487  0003B8  D058               	goto	l2718
  4488                           
  4489                           ; BSR set to: 0
  4490  0003BA  0100               	movlb	0	; () banked
  4491  0003BC  2964               	incf	CANSetFilter@type& (0+255),w,b
  4492  0003BE  A4D8               	btfss	status,2,c
  4493  0003C0  D054               	goto	l2718
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;inc\CANlib.h: 805: {
  4497                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4498  0003C2  010F               	movlb	15	; () banked
  4499  0003C4  9711               	bcf	17,3,b	;volatile
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4503  0003C6  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4504  0003CA  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4505  0003CE  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4506  0003D2  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4507  0003D6  0E04               	movlw	4
  4508  0003D8  D006               	goto	u2540
  4509  0003DA                     u2545:
  4510  0003DA  0100               	movlb	0	; () banked
  4511  0003DC  90D8               	bcf	status,0,c
  4512  0003DE  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4513  0003E0  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4514  0003E2  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4515  0003E4  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4516  0003E6                     u2540:
  4517  0003E6  2EE8               	decfsz	wreg,f,c
  4518  0003E8  D7F8               	goto	u2545
  4519  0003EA  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4520  0003EE  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4521  0003F2  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4522  0003F6  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4526  0003FA  0100               	movlb	0	; () banked
  4527  0003FC  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4528  0003FE  0100               	movlb	0	; () banked
  4529  000400  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4530  000402  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4531  000404  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4532  000406  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4536  000408  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4540  00040C  0E07               	movlw	7
  4541  00040E  0100               	movlb	0	; () banked
  4542  000410  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4543  000412  0100               	movlb	0	; () banked
  4544  000414  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4545  000416  0E00               	movlw	0
  4546  000418  0100               	movlb	0	; () banked
  4547  00041A  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4548  00041C  0100               	movlb	0	; () banked
  4549  00041E  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4550  000420  0E00               	movlw	0
  4551  000422  0100               	movlb	0	; () banked
  4552  000424  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4553  000426  0100               	movlb	0	; () banked
  4554  000428  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4555  00042A  0E00               	movlw	0
  4556  00042C  0100               	movlb	0	; () banked
  4557  00042E  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4558  000430  0100               	movlb	0	; () banked
  4559  000432  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4563  000434  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4564  000438  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4565  00043C  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4566  000440  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4567  000444  0E05               	movlw	5
  4568  000446                     u2555:
  4569  000446  90D8               	bcf	status,0,c
  4570  000448  0100               	movlb	0	; () banked
  4571  00044A  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4572  00044C  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4573  00044E  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4574  000450  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4575  000452  2EE8               	decfsz	wreg,f,c
  4576  000454  D7F8               	goto	u2555
  4577  000456  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4578  00045A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4579  00045E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4580  000462  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4584  000466  C06A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4585  00046A                     l2718:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;inc\CANlib.h: 815: }
  4589                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4590  00046A  0E05               	movlw	5
  4591  00046C  0100               	movlb	0	; () banked
  4592  00046E  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4593  000470  A4D8               	btfss	status,2,c
  4594  000472  D058               	goto	l2736
  4595                           
  4596                           ; BSR set to: 0
  4597  000474  0100               	movlb	0	; () banked
  4598  000476  2964               	incf	CANSetFilter@type& (0+255),w,b
  4599  000478  A4D8               	btfss	status,2,c
  4600  00047A  D054               	goto	l2736
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;inc\CANlib.h: 818: {
  4604                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4605  00047C  010F               	movlb	15	; () banked
  4606  00047E  9715               	bcf	21,3,b	;volatile
  4607                           
  4608                           ; BSR set to: 15
  4609                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4610  000480  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4611  000484  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4612  000488  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4613  00048C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4614  000490  0E04               	movlw	4
  4615  000492  D006               	goto	u2580
  4616  000494                     u2585:
  4617  000494  0100               	movlb	0	; () banked
  4618  000496  90D8               	bcf	status,0,c
  4619  000498  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4620  00049A  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4621  00049C  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4622  00049E  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4623  0004A0                     u2580:
  4624  0004A0  2EE8               	decfsz	wreg,f,c
  4625  0004A2  D7F8               	goto	u2585
  4626  0004A4  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4627  0004A8  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4628  0004AC  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4629  0004B0  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4633  0004B4  0100               	movlb	0	; () banked
  4634  0004B6  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4635  0004B8  0100               	movlb	0	; () banked
  4636  0004BA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4637  0004BC  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4638  0004BE  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4639  0004C0  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4643  0004C2  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4647  0004C6  0E07               	movlw	7
  4648  0004C8  0100               	movlb	0	; () banked
  4649  0004CA  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4650  0004CC  0100               	movlb	0	; () banked
  4651  0004CE  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4652  0004D0  0E00               	movlw	0
  4653  0004D2  0100               	movlb	0	; () banked
  4654  0004D4  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4655  0004D6  0100               	movlb	0	; () banked
  4656  0004D8  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4657  0004DA  0E00               	movlw	0
  4658  0004DC  0100               	movlb	0	; () banked
  4659  0004DE  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4660  0004E0  0100               	movlb	0	; () banked
  4661  0004E2  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4662  0004E4  0E00               	movlw	0
  4663  0004E6  0100               	movlb	0	; () banked
  4664  0004E8  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4665  0004EA  0100               	movlb	0	; () banked
  4666  0004EC  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4670  0004EE  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4671  0004F2  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4672  0004F6  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4673  0004FA  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4674  0004FE  0E05               	movlw	5
  4675  000500                     u2595:
  4676  000500  90D8               	bcf	status,0,c
  4677  000502  0100               	movlb	0	; () banked
  4678  000504  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4679  000506  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4680  000508  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4681  00050A  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4682  00050C  2EE8               	decfsz	wreg,f,c
  4683  00050E  D7F8               	goto	u2595
  4684  000510  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4685  000514  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4686  000518  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4687  00051C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4691  000520  C06A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4692  000524                     l2736:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;inc\CANlib.h: 828: }
  4696                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4697  000524  0100               	movlb	0	; () banked
  4698  000526  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4699  000528  0100               	movlb	0	; () banked
  4700  00052A  A4D8               	btfss	status,2,c
  4701  00052C  D089               	goto	l2770
  4702                           
  4703                           ; BSR set to: 0
  4704  00052E  0EF7               	movlw	247
  4705  000530  0100               	movlb	0	; () banked
  4706  000532  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  4707  000534  A4D8               	btfss	status,2,c
  4708  000536  D084               	goto	l2770
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 832: {
  4712                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4713  000538  010F               	movlb	15	; () banked
  4714  00053A  8701               	bsf	1,3,b	;volatile
  4715                           
  4716                           ; BSR set to: 15
  4717                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4718  00053C  0100               	movlb	0	; () banked
  4719  00053E  5160               	movf	CANSetFilter@filter& (0+255),w,b
  4720  000540  0100               	movlb	0	; () banked
  4721  000542  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4722  000544  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4723  000546  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4724  000548  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4728  00054A  C06A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4732  00054E  0E00               	movlw	0
  4733  000550  0100               	movlb	0	; () banked
  4734  000552  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4735  000554  0100               	movlb	0	; () banked
  4736  000556  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4737  000558  0EFF               	movlw	255
  4738  00055A  0100               	movlb	0	; () banked
  4739  00055C  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4740  00055E  0100               	movlb	0	; () banked
  4741  000560  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4742  000562  0E00               	movlw	0
  4743  000564  0100               	movlb	0	; () banked
  4744  000566  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4745  000568  0100               	movlb	0	; () banked
  4746  00056A  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4747  00056C  0E00               	movlw	0
  4748  00056E  0100               	movlb	0	; () banked
  4749  000570  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4750  000572  0100               	movlb	0	; () banked
  4751  000574  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4755  000576  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4756  00057A  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4757  00057E  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4758  000582  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4759  000586  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  4760  00058A  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4761  00058E  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4762  000592  0100               	movlb	0	; () banked
  4763  000594  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  4764  000596  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4765  00059A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4766  00059E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4767  0005A2  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4771  0005A6  C06A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4775  0005AA  0100               	movlb	0	; () banked
  4776  0005AC  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4777  0005AE  D003               	goto	l465
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4781  0005B0  010F               	movlb	15	; () banked
  4782  0005B2  8101               	bsf	1,0,b	;volatile
  4783  0005B4  D002               	goto	l466
  4784  0005B6                     l465:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;inc\CANlib.h: 844: else
  4788                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4789  0005B6  010F               	movlb	15	; () banked
  4790  0005B8  9101               	bcf	1,0,b	;volatile
  4791  0005BA                     l466:
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4795  0005BA  0100               	movlb	0	; () banked
  4796  0005BC  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4797  0005BE  D003               	goto	l467
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4801  0005C0  010F               	movlb	15	; () banked
  4802  0005C2  8301               	bsf	1,1,b	;volatile
  4803  0005C4  D002               	goto	l468
  4804  0005C6                     l467:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 849: else
  4808                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4809  0005C6  010F               	movlb	15	; () banked
  4810  0005C8  9301               	bcf	1,1,b	;volatile
  4811  0005CA                     l468:
  4812                           
  4813                           ; BSR set to: 15
  4814                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4815  0005CA  0100               	movlb	0	; () banked
  4816  0005CC  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4817  0005CE  D003               	goto	l469
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4821  0005D0  010F               	movlb	15	; () banked
  4822  0005D2  8B01               	bsf	1,5,b	;volatile
  4823  0005D4  D002               	goto	l470
  4824  0005D6                     l469:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 854: else
  4828                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4829  0005D6  010F               	movlb	15	; () banked
  4830  0005D8  9B01               	bcf	1,5,b	;volatile
  4831  0005DA                     l470:
  4832                           
  4833                           ; BSR set to: 15
  4834                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4835  0005DA  0100               	movlb	0	; () banked
  4836  0005DC  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4837  0005DE  D003               	goto	l471
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4841  0005E0  010F               	movlb	15	; () banked
  4842  0005E2  8D01               	bsf	1,6,b	;volatile
  4843  0005E4  D002               	goto	l472
  4844  0005E6                     l471:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 859: else
  4848                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4849  0005E6  010F               	movlb	15	; () banked
  4850  0005E8  9D01               	bcf	1,6,b	;volatile
  4851  0005EA                     l472:
  4852                           
  4853                           ; BSR set to: 15
  4854                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4855  0005EA  0100               	movlb	0	; () banked
  4856  0005EC  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4857  0005EE  D003               	goto	l473
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4861  0005F0  010F               	movlb	15	; () banked
  4862  0005F2  8F01               	bsf	1,7,b	;volatile
  4863  0005F4  D002               	goto	l2764
  4864  0005F6                     l473:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 864: else
  4868                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4869  0005F6  010F               	movlb	15	; () banked
  4870  0005F8  9F01               	bcf	1,7,b	;volatile
  4871  0005FA                     l2764:
  4872                           
  4873                           ; BSR set to: 15
  4874                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4875  0005FA  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4876  0005FE  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4877  000602  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4878  000606  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4879  00060A  0E16               	movlw	22
  4880  00060C  D006               	goto	u2670
  4881  00060E                     u2675:
  4882  00060E  0100               	movlb	0	; () banked
  4883  000610  90D8               	bcf	status,0,c
  4884  000612  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4885  000614  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4886  000616  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4887  000618  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4888  00061A                     u2670:
  4889  00061A  2EE8               	decfsz	wreg,f,c
  4890  00061C  D7F8               	goto	u2675
  4891  00061E  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4892  000622  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4893  000626  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4894  00062A  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4898  00062E  0100               	movlb	0	; () banked
  4899  000630  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4900  000632  0100               	movlb	0	; () banked
  4901  000634  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4902  000636  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4903  000638  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4904  00063A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4908  00063C  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4909  000640                     l2770:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;inc\CANlib.h: 870: }
  4913                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4914  000640  0100               	movlb	0	; () banked
  4915  000642  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4916  000644  A4D8               	btfss	status,2,c
  4917  000646  D089               	goto	l2804
  4918                           
  4919                           ; BSR set to: 0
  4920  000648  0EF7               	movlw	247
  4921  00064A  0100               	movlb	0	; () banked
  4922  00064C  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  4923  00064E  A4D8               	btfss	status,2,c
  4924  000650  D084               	goto	l2804
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;inc\CANlib.h: 873: {
  4928                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4929  000652  010F               	movlb	15	; () banked
  4930  000654  8705               	bsf	5,3,b	;volatile
  4931                           
  4932                           ; BSR set to: 15
  4933                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4934  000656  0100               	movlb	0	; () banked
  4935  000658  5160               	movf	CANSetFilter@filter& (0+255),w,b
  4936  00065A  0100               	movlb	0	; () banked
  4937  00065C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4938  00065E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4939  000660  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4940  000662  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4944  000664  C06A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4948  000668  0E00               	movlw	0
  4949  00066A  0100               	movlb	0	; () banked
  4950  00066C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4951  00066E  0100               	movlb	0	; () banked
  4952  000670  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4953  000672  0EFF               	movlw	255
  4954  000674  0100               	movlb	0	; () banked
  4955  000676  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4956  000678  0100               	movlb	0	; () banked
  4957  00067A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4958  00067C  0E00               	movlw	0
  4959  00067E  0100               	movlb	0	; () banked
  4960  000680  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4961  000682  0100               	movlb	0	; () banked
  4962  000684  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4963  000686  0E00               	movlw	0
  4964  000688  0100               	movlb	0	; () banked
  4965  00068A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4966  00068C  0100               	movlb	0	; () banked
  4967  00068E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4971  000690  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4972  000694  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4973  000698  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4974  00069C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4975  0006A0  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  4976  0006A4  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4977  0006A8  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4978  0006AC  0100               	movlb	0	; () banked
  4979  0006AE  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  4980  0006B0  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4981  0006B4  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4982  0006B8  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4983  0006BC  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4987  0006C0  C06A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4991  0006C4  0100               	movlb	0	; () banked
  4992  0006C6  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4993  0006C8  D003               	goto	l476
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4997  0006CA  010F               	movlb	15	; () banked
  4998  0006CC  8105               	bsf	5,0,b	;volatile
  4999  0006CE  D002               	goto	l477
  5000  0006D0                     l476:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 885: else
  5004                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5005  0006D0  010F               	movlb	15	; () banked
  5006  0006D2  9105               	bcf	5,0,b	;volatile
  5007  0006D4                     l477:
  5008                           
  5009                           ; BSR set to: 15
  5010                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5011  0006D4  0100               	movlb	0	; () banked
  5012  0006D6  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5013  0006D8  D003               	goto	l478
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5017  0006DA  010F               	movlb	15	; () banked
  5018  0006DC  8305               	bsf	5,1,b	;volatile
  5019  0006DE  D002               	goto	l479
  5020  0006E0                     l478:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 890: else
  5024                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5025  0006E0  010F               	movlb	15	; () banked
  5026  0006E2  9305               	bcf	5,1,b	;volatile
  5027  0006E4                     l479:
  5028                           
  5029                           ; BSR set to: 15
  5030                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5031  0006E4  0100               	movlb	0	; () banked
  5032  0006E6  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5033  0006E8  D003               	goto	l480
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5037  0006EA  010F               	movlb	15	; () banked
  5038  0006EC  8B05               	bsf	5,5,b	;volatile
  5039  0006EE  D002               	goto	l481
  5040  0006F0                     l480:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;inc\CANlib.h: 895: else
  5044                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5045  0006F0  010F               	movlb	15	; () banked
  5046  0006F2  9B05               	bcf	5,5,b	;volatile
  5047  0006F4                     l481:
  5048                           
  5049                           ; BSR set to: 15
  5050                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5051  0006F4  0100               	movlb	0	; () banked
  5052  0006F6  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5053  0006F8  D003               	goto	l482
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5057  0006FA  010F               	movlb	15	; () banked
  5058  0006FC  8D05               	bsf	5,6,b	;volatile
  5059  0006FE  D002               	goto	l483
  5060  000700                     l482:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 900: else
  5064                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5065  000700  010F               	movlb	15	; () banked
  5066  000702  9D05               	bcf	5,6,b	;volatile
  5067  000704                     l483:
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5071  000704  0100               	movlb	0	; () banked
  5072  000706  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5073  000708  D003               	goto	l484
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5077  00070A  010F               	movlb	15	; () banked
  5078  00070C  8F05               	bsf	5,7,b	;volatile
  5079  00070E  D002               	goto	l2798
  5080  000710                     l484:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;inc\CANlib.h: 905: else
  5084                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5085  000710  010F               	movlb	15	; () banked
  5086  000712  9F05               	bcf	5,7,b	;volatile
  5087  000714                     l2798:
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5091  000714  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5092  000718  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5093  00071C  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5094  000720  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5095  000724  0E16               	movlw	22
  5096  000726  D006               	goto	u2750
  5097  000728                     u2755:
  5098  000728  0100               	movlb	0	; () banked
  5099  00072A  90D8               	bcf	status,0,c
  5100  00072C  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5101  00072E  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5102  000730  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5103  000732  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5104  000734                     u2750:
  5105  000734  2EE8               	decfsz	wreg,f,c
  5106  000736  D7F8               	goto	u2755
  5107  000738  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5108  00073C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5109  000740  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5110  000744  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5114  000748  0100               	movlb	0	; () banked
  5115  00074A  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5116  00074C  0100               	movlb	0	; () banked
  5117  00074E  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5118  000750  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5119  000752  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5120  000754  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5124  000756  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5125  00075A                     l2804:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 911: }
  5129                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5130  00075A  0E02               	movlw	2
  5131  00075C  0100               	movlb	0	; () banked
  5132  00075E  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5133  000760  A4D8               	btfss	status,2,c
  5134  000762  D089               	goto	l2838
  5135                           
  5136                           ; BSR set to: 0
  5137  000764  0EF7               	movlw	247
  5138  000766  0100               	movlb	0	; () banked
  5139  000768  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5140  00076A  A4D8               	btfss	status,2,c
  5141  00076C  D084               	goto	l2838
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;inc\CANlib.h: 915: {
  5145                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5146  00076E  010F               	movlb	15	; () banked
  5147  000770  8709               	bsf	9,3,b	;volatile
  5148                           
  5149                           ; BSR set to: 15
  5150                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5151  000772  0100               	movlb	0	; () banked
  5152  000774  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5153  000776  0100               	movlb	0	; () banked
  5154  000778  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5155  00077A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5156  00077C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5157  00077E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5161  000780  C06A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5165  000784  0E00               	movlw	0
  5166  000786  0100               	movlb	0	; () banked
  5167  000788  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5168  00078A  0100               	movlb	0	; () banked
  5169  00078C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5170  00078E  0EFF               	movlw	255
  5171  000790  0100               	movlb	0	; () banked
  5172  000792  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5173  000794  0100               	movlb	0	; () banked
  5174  000796  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5175  000798  0E00               	movlw	0
  5176  00079A  0100               	movlb	0	; () banked
  5177  00079C  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5178  00079E  0100               	movlb	0	; () banked
  5179  0007A0  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5180  0007A2  0E00               	movlw	0
  5181  0007A4  0100               	movlb	0	; () banked
  5182  0007A6  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5183  0007A8  0100               	movlb	0	; () banked
  5184  0007AA  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5188  0007AC  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5189  0007B0  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5190  0007B4  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5191  0007B8  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5192  0007BC  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5193  0007C0  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5194  0007C4  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5195  0007C8  0100               	movlb	0	; () banked
  5196  0007CA  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5197  0007CC  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5198  0007D0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5199  0007D4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5200  0007D8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5204  0007DC  C06A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5208  0007E0  0100               	movlb	0	; () banked
  5209  0007E2  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5210  0007E4  D003               	goto	l487
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5214  0007E6  010F               	movlb	15	; () banked
  5215  0007E8  8109               	bsf	9,0,b	;volatile
  5216  0007EA  D002               	goto	l488
  5217  0007EC                     l487:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;inc\CANlib.h: 927: else
  5221                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5222  0007EC  010F               	movlb	15	; () banked
  5223  0007EE  9109               	bcf	9,0,b	;volatile
  5224  0007F0                     l488:
  5225                           
  5226                           ; BSR set to: 15
  5227                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5228  0007F0  0100               	movlb	0	; () banked
  5229  0007F2  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5230  0007F4  D003               	goto	l489
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5234  0007F6  010F               	movlb	15	; () banked
  5235  0007F8  8309               	bsf	9,1,b	;volatile
  5236  0007FA  D002               	goto	l490
  5237  0007FC                     l489:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;inc\CANlib.h: 932: else
  5241                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5242  0007FC  010F               	movlb	15	; () banked
  5243  0007FE  9309               	bcf	9,1,b	;volatile
  5244  000800                     l490:
  5245                           
  5246                           ; BSR set to: 15
  5247                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5248  000800  0100               	movlb	0	; () banked
  5249  000802  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5250  000804  D003               	goto	l491
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5254  000806  010F               	movlb	15	; () banked
  5255  000808  8B09               	bsf	9,5,b	;volatile
  5256  00080A  D002               	goto	l492
  5257  00080C                     l491:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 937: else
  5261                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5262  00080C  010F               	movlb	15	; () banked
  5263  00080E  9B09               	bcf	9,5,b	;volatile
  5264  000810                     l492:
  5265                           
  5266                           ; BSR set to: 15
  5267                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5268  000810  0100               	movlb	0	; () banked
  5269  000812  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5270  000814  D003               	goto	l493
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5274  000816  010F               	movlb	15	; () banked
  5275  000818  8D09               	bsf	9,6,b	;volatile
  5276  00081A  D002               	goto	l494
  5277  00081C                     l493:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 942: else
  5281                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5282  00081C  010F               	movlb	15	; () banked
  5283  00081E  9D09               	bcf	9,6,b	;volatile
  5284  000820                     l494:
  5285                           
  5286                           ; BSR set to: 15
  5287                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5288  000820  0100               	movlb	0	; () banked
  5289  000822  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5290  000824  D003               	goto	l495
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5294  000826  010F               	movlb	15	; () banked
  5295  000828  8F09               	bsf	9,7,b	;volatile
  5296  00082A  D002               	goto	l2832
  5297  00082C                     l495:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;inc\CANlib.h: 947: else
  5301                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5302  00082C  010F               	movlb	15	; () banked
  5303  00082E  9F09               	bcf	9,7,b	;volatile
  5304  000830                     l2832:
  5305                           
  5306                           ; BSR set to: 15
  5307                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5308  000830  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5309  000834  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5310  000838  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5311  00083C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5312  000840  0E16               	movlw	22
  5313  000842  D006               	goto	u2830
  5314  000844                     u2835:
  5315  000844  0100               	movlb	0	; () banked
  5316  000846  90D8               	bcf	status,0,c
  5317  000848  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5318  00084A  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5319  00084C  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5320  00084E  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5321  000850                     u2830:
  5322  000850  2EE8               	decfsz	wreg,f,c
  5323  000852  D7F8               	goto	u2835
  5324  000854  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5325  000858  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5326  00085C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5327  000860  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5331  000864  0100               	movlb	0	; () banked
  5332  000866  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5333  000868  0100               	movlb	0	; () banked
  5334  00086A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5335  00086C  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5336  00086E  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5337  000870  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5341  000872  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5342  000876                     l2838:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 953: }
  5346                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5347  000876  0E03               	movlw	3
  5348  000878  0100               	movlb	0	; () banked
  5349  00087A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5350  00087C  A4D8               	btfss	status,2,c
  5351  00087E  D089               	goto	l2872
  5352                           
  5353                           ; BSR set to: 0
  5354  000880  0EF7               	movlw	247
  5355  000882  0100               	movlb	0	; () banked
  5356  000884  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5357  000886  A4D8               	btfss	status,2,c
  5358  000888  D084               	goto	l2872
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;inc\CANlib.h: 956: {
  5362                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5363  00088A  010F               	movlb	15	; () banked
  5364  00088C  870D               	bsf	13,3,b	;volatile
  5365                           
  5366                           ; BSR set to: 15
  5367                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5368  00088E  0100               	movlb	0	; () banked
  5369  000890  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5370  000892  0100               	movlb	0	; () banked
  5371  000894  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5372  000896  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5373  000898  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5374  00089A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5378  00089C  C06A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5382  0008A0  0E00               	movlw	0
  5383  0008A2  0100               	movlb	0	; () banked
  5384  0008A4  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5385  0008A6  0100               	movlb	0	; () banked
  5386  0008A8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5387  0008AA  0EFF               	movlw	255
  5388  0008AC  0100               	movlb	0	; () banked
  5389  0008AE  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5390  0008B0  0100               	movlb	0	; () banked
  5391  0008B2  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5392  0008B4  0E00               	movlw	0
  5393  0008B6  0100               	movlb	0	; () banked
  5394  0008B8  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5395  0008BA  0100               	movlb	0	; () banked
  5396  0008BC  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5397  0008BE  0E00               	movlw	0
  5398  0008C0  0100               	movlb	0	; () banked
  5399  0008C2  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5400  0008C4  0100               	movlb	0	; () banked
  5401  0008C6  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5405  0008C8  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5406  0008CC  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5407  0008D0  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5408  0008D4  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5409  0008D8  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5410  0008DC  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5411  0008E0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5412  0008E4  0100               	movlb	0	; () banked
  5413  0008E6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5414  0008E8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5415  0008EC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5416  0008F0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5417  0008F4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5421  0008F8  C06A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5425  0008FC  0100               	movlb	0	; () banked
  5426  0008FE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5427  000900  D003               	goto	l498
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5431  000902  010F               	movlb	15	; () banked
  5432  000904  810D               	bsf	13,0,b	;volatile
  5433  000906  D002               	goto	l499
  5434  000908                     l498:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;inc\CANlib.h: 968: else
  5438                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5439  000908  010F               	movlb	15	; () banked
  5440  00090A  910D               	bcf	13,0,b	;volatile
  5441  00090C                     l499:
  5442                           
  5443                           ; BSR set to: 15
  5444                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5445  00090C  0100               	movlb	0	; () banked
  5446  00090E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5447  000910  D003               	goto	l500
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5451  000912  010F               	movlb	15	; () banked
  5452  000914  830D               	bsf	13,1,b	;volatile
  5453  000916  D002               	goto	l501
  5454  000918                     l500:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;inc\CANlib.h: 973: else
  5458                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5459  000918  010F               	movlb	15	; () banked
  5460  00091A  930D               	bcf	13,1,b	;volatile
  5461  00091C                     l501:
  5462                           
  5463                           ; BSR set to: 15
  5464                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5465  00091C  0100               	movlb	0	; () banked
  5466  00091E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5467  000920  D003               	goto	l502
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5471  000922  010F               	movlb	15	; () banked
  5472  000924  8B0D               	bsf	13,5,b	;volatile
  5473  000926  D002               	goto	l503
  5474  000928                     l502:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;inc\CANlib.h: 978: else
  5478                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5479  000928  010F               	movlb	15	; () banked
  5480  00092A  9B0D               	bcf	13,5,b	;volatile
  5481  00092C                     l503:
  5482                           
  5483                           ; BSR set to: 15
  5484                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5485  00092C  0100               	movlb	0	; () banked
  5486  00092E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5487  000930  D003               	goto	l504
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5491  000932  010F               	movlb	15	; () banked
  5492  000934  8D0D               	bsf	13,6,b	;volatile
  5493  000936  D002               	goto	l505
  5494  000938                     l504:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 983: else
  5498                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5499  000938  010F               	movlb	15	; () banked
  5500  00093A  9D0D               	bcf	13,6,b	;volatile
  5501  00093C                     l505:
  5502                           
  5503                           ; BSR set to: 15
  5504                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5505  00093C  0100               	movlb	0	; () banked
  5506  00093E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5507  000940  D003               	goto	l506
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5511  000942  010F               	movlb	15	; () banked
  5512  000944  8F0D               	bsf	13,7,b	;volatile
  5513  000946  D002               	goto	l2866
  5514  000948                     l506:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 988: else
  5518                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5519  000948  010F               	movlb	15	; () banked
  5520  00094A  9F0D               	bcf	13,7,b	;volatile
  5521  00094C                     l2866:
  5522                           
  5523                           ; BSR set to: 15
  5524                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5525  00094C  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5526  000950  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5527  000954  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5528  000958  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5529  00095C  0E16               	movlw	22
  5530  00095E  D006               	goto	u2910
  5531  000960                     u2915:
  5532  000960  0100               	movlb	0	; () banked
  5533  000962  90D8               	bcf	status,0,c
  5534  000964  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5535  000966  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5536  000968  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5537  00096A  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5538  00096C                     u2910:
  5539  00096C  2EE8               	decfsz	wreg,f,c
  5540  00096E  D7F8               	goto	u2915
  5541  000970  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5542  000974  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5543  000978  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5544  00097C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5548  000980  0100               	movlb	0	; () banked
  5549  000982  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5550  000984  0100               	movlb	0	; () banked
  5551  000986  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5552  000988  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5553  00098A  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5554  00098C  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5558  00098E  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5559  000992                     l2872:
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 994: }
  5563                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5564  000992  0E04               	movlw	4
  5565  000994  0100               	movlb	0	; () banked
  5566  000996  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5567  000998  A4D8               	btfss	status,2,c
  5568  00099A  D089               	goto	l2906
  5569                           
  5570                           ; BSR set to: 0
  5571  00099C  0EF7               	movlw	247
  5572  00099E  0100               	movlb	0	; () banked
  5573  0009A0  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5574  0009A2  A4D8               	btfss	status,2,c
  5575  0009A4  D084               	goto	l2906
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;inc\CANlib.h: 997: {
  5579                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5580  0009A6  010F               	movlb	15	; () banked
  5581  0009A8  8711               	bsf	17,3,b	;volatile
  5582                           
  5583                           ; BSR set to: 15
  5584                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5585  0009AA  0100               	movlb	0	; () banked
  5586  0009AC  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5587  0009AE  0100               	movlb	0	; () banked
  5588  0009B0  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5589  0009B2  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5590  0009B4  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5591  0009B6  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5595  0009B8  C06A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5599  0009BC  0E00               	movlw	0
  5600  0009BE  0100               	movlb	0	; () banked
  5601  0009C0  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5602  0009C2  0100               	movlb	0	; () banked
  5603  0009C4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5604  0009C6  0EFF               	movlw	255
  5605  0009C8  0100               	movlb	0	; () banked
  5606  0009CA  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5607  0009CC  0100               	movlb	0	; () banked
  5608  0009CE  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5609  0009D0  0E00               	movlw	0
  5610  0009D2  0100               	movlb	0	; () banked
  5611  0009D4  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5612  0009D6  0100               	movlb	0	; () banked
  5613  0009D8  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5614  0009DA  0E00               	movlw	0
  5615  0009DC  0100               	movlb	0	; () banked
  5616  0009DE  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5617  0009E0  0100               	movlb	0	; () banked
  5618  0009E2  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5622  0009E4  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5623  0009E8  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5624  0009EC  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5625  0009F0  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5626  0009F4  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5627  0009F8  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5628  0009FC  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5629  000A00  0100               	movlb	0	; () banked
  5630  000A02  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5631  000A04  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5632  000A08  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5633  000A0C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5634  000A10  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5638  000A14  C06A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5642  000A18  0100               	movlb	0	; () banked
  5643  000A1A  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5644  000A1C  D003               	goto	l509
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5648  000A1E  010F               	movlb	15	; () banked
  5649  000A20  8111               	bsf	17,0,b	;volatile
  5650  000A22  D002               	goto	l510
  5651  000A24                     l509:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;inc\CANlib.h: 1009: else
  5655                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5656  000A24  010F               	movlb	15	; () banked
  5657  000A26  9111               	bcf	17,0,b	;volatile
  5658  000A28                     l510:
  5659                           
  5660                           ; BSR set to: 15
  5661                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5662  000A28  0100               	movlb	0	; () banked
  5663  000A2A  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5664  000A2C  D003               	goto	l511
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5668  000A2E  010F               	movlb	15	; () banked
  5669  000A30  8311               	bsf	17,1,b	;volatile
  5670  000A32  D002               	goto	l512
  5671  000A34                     l511:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 1014: else
  5675                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5676  000A34  010F               	movlb	15	; () banked
  5677  000A36  9311               	bcf	17,1,b	;volatile
  5678  000A38                     l512:
  5679                           
  5680                           ; BSR set to: 15
  5681                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5682  000A38  0100               	movlb	0	; () banked
  5683  000A3A  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5684  000A3C  D003               	goto	l513
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5688  000A3E  010F               	movlb	15	; () banked
  5689  000A40  8B11               	bsf	17,5,b	;volatile
  5690  000A42  D002               	goto	l514
  5691  000A44                     l513:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;inc\CANlib.h: 1019: else
  5695                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5696  000A44  010F               	movlb	15	; () banked
  5697  000A46  9B11               	bcf	17,5,b	;volatile
  5698  000A48                     l514:
  5699                           
  5700                           ; BSR set to: 15
  5701                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5702  000A48  0100               	movlb	0	; () banked
  5703  000A4A  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5704  000A4C  D003               	goto	l515
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5708  000A4E  010F               	movlb	15	; () banked
  5709  000A50  8D11               	bsf	17,6,b	;volatile
  5710  000A52  D002               	goto	l516
  5711  000A54                     l515:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;inc\CANlib.h: 1024: else
  5715                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5716  000A54  010F               	movlb	15	; () banked
  5717  000A56  9D11               	bcf	17,6,b	;volatile
  5718  000A58                     l516:
  5719                           
  5720                           ; BSR set to: 15
  5721                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5722  000A58  0100               	movlb	0	; () banked
  5723  000A5A  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5724  000A5C  D003               	goto	l517
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5728  000A5E  010F               	movlb	15	; () banked
  5729  000A60  8F11               	bsf	17,7,b	;volatile
  5730  000A62  D002               	goto	l2900
  5731  000A64                     l517:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;inc\CANlib.h: 1029: else
  5735                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5736  000A64  010F               	movlb	15	; () banked
  5737  000A66  9F11               	bcf	17,7,b	;volatile
  5738  000A68                     l2900:
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5742  000A68  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5743  000A6C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5744  000A70  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5745  000A74  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5746  000A78  0E16               	movlw	22
  5747  000A7A  D006               	goto	u2990
  5748  000A7C                     u2995:
  5749  000A7C  0100               	movlb	0	; () banked
  5750  000A7E  90D8               	bcf	status,0,c
  5751  000A80  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5752  000A82  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5753  000A84  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5754  000A86  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5755  000A88                     u2990:
  5756  000A88  2EE8               	decfsz	wreg,f,c
  5757  000A8A  D7F8               	goto	u2995
  5758  000A8C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5759  000A90  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5760  000A94  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5761  000A98  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5765  000A9C  0100               	movlb	0	; () banked
  5766  000A9E  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5767  000AA0  0100               	movlb	0	; () banked
  5768  000AA2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5769  000AA4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5770  000AA6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5771  000AA8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5775  000AAA  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5776  000AAE                     l2906:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 1035: }
  5780                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5781  000AAE  0E05               	movlw	5
  5782  000AB0  0100               	movlb	0	; () banked
  5783  000AB2  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5784  000AB4  A4D8               	btfss	status,2,c
  5785  000AB6  0012               	return	
  5786                           
  5787                           ; BSR set to: 0
  5788  000AB8  0EF7               	movlw	247
  5789  000ABA  0100               	movlb	0	; () banked
  5790  000ABC  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5791  000ABE  A4D8               	btfss	status,2,c
  5792  000AC0  0012               	return	
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;inc\CANlib.h: 1038: {
  5796                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5797  000AC2  010F               	movlb	15	; () banked
  5798  000AC4  8715               	bsf	21,3,b	;volatile
  5799                           
  5800                           ; BSR set to: 15
  5801                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5802  000AC6  0100               	movlb	0	; () banked
  5803  000AC8  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5804  000ACA  0100               	movlb	0	; () banked
  5805  000ACC  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5806  000ACE  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5807  000AD0  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5808  000AD2  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5812  000AD4  C06A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5816  000AD8  0E00               	movlw	0
  5817  000ADA  0100               	movlb	0	; () banked
  5818  000ADC  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5819  000ADE  0100               	movlb	0	; () banked
  5820  000AE0  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5821  000AE2  0EFF               	movlw	255
  5822  000AE4  0100               	movlb	0	; () banked
  5823  000AE6  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5824  000AE8  0100               	movlb	0	; () banked
  5825  000AEA  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5826  000AEC  0E00               	movlw	0
  5827  000AEE  0100               	movlb	0	; () banked
  5828  000AF0  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5829  000AF2  0100               	movlb	0	; () banked
  5830  000AF4  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5831  000AF6  0E00               	movlw	0
  5832  000AF8  0100               	movlb	0	; () banked
  5833  000AFA  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5834  000AFC  0100               	movlb	0	; () banked
  5835  000AFE  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5839  000B00  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5840  000B04  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5841  000B08  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5842  000B0C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5843  000B10  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5844  000B14  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5845  000B18  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5846  000B1C  0100               	movlb	0	; () banked
  5847  000B1E  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5848  000B20  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5849  000B24  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5850  000B28  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5851  000B2C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5855  000B30  C06A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5859  000B34  0100               	movlb	0	; () banked
  5860  000B36  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5861  000B38  D003               	goto	l520
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5865  000B3A  010F               	movlb	15	; () banked
  5866  000B3C  8115               	bsf	21,0,b	;volatile
  5867  000B3E  D002               	goto	l521
  5868  000B40                     l520:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;inc\CANlib.h: 1050: else
  5872                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5873  000B40  010F               	movlb	15	; () banked
  5874  000B42  9115               	bcf	21,0,b	;volatile
  5875  000B44                     l521:
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5879  000B44  0100               	movlb	0	; () banked
  5880  000B46  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5881  000B48  D003               	goto	l522
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5885  000B4A  010F               	movlb	15	; () banked
  5886  000B4C  8315               	bsf	21,1,b	;volatile
  5887  000B4E  D002               	goto	l523
  5888  000B50                     l522:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 1055: else
  5892                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5893  000B50  010F               	movlb	15	; () banked
  5894  000B52  9315               	bcf	21,1,b	;volatile
  5895  000B54                     l523:
  5896                           
  5897                           ; BSR set to: 15
  5898                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5899  000B54  0100               	movlb	0	; () banked
  5900  000B56  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5901  000B58  D003               	goto	l524
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5905  000B5A  010F               	movlb	15	; () banked
  5906  000B5C  8B15               	bsf	21,5,b	;volatile
  5907  000B5E  D002               	goto	l525
  5908  000B60                     l524:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;inc\CANlib.h: 1060: else
  5912                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5913  000B60  010F               	movlb	15	; () banked
  5914  000B62  9B15               	bcf	21,5,b	;volatile
  5915  000B64                     l525:
  5916                           
  5917                           ; BSR set to: 15
  5918                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5919  000B64  0100               	movlb	0	; () banked
  5920  000B66  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5921  000B68  D003               	goto	l526
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5925  000B6A  010F               	movlb	15	; () banked
  5926  000B6C  8D15               	bsf	21,6,b	;volatile
  5927  000B6E  D002               	goto	l527
  5928  000B70                     l526:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;inc\CANlib.h: 1065: else
  5932                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5933  000B70  010F               	movlb	15	; () banked
  5934  000B72  9D15               	bcf	21,6,b	;volatile
  5935  000B74                     l527:
  5936                           
  5937                           ; BSR set to: 15
  5938                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5939  000B74  0100               	movlb	0	; () banked
  5940  000B76  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5941  000B78  D003               	goto	l528
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5945  000B7A  010F               	movlb	15	; () banked
  5946  000B7C  8F15               	bsf	21,7,b	;volatile
  5947  000B7E  D002               	goto	l2934
  5948  000B80                     l528:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;inc\CANlib.h: 1070: else
  5952                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5953  000B80  010F               	movlb	15	; () banked
  5954  000B82  9F15               	bcf	21,7,b	;volatile
  5955  000B84                     l2934:
  5956                           
  5957                           ; BSR set to: 15
  5958                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5959  000B84  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5960  000B88  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5961  000B8C  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5962  000B90  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5963  000B94  0E16               	movlw	22
  5964  000B96  D006               	goto	u3070
  5965  000B98                     u3075:
  5966  000B98  0100               	movlb	0	; () banked
  5967  000B9A  90D8               	bcf	status,0,c
  5968  000B9C  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5969  000B9E  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5970  000BA0  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5971  000BA2  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5972  000BA4                     u3070:
  5973  000BA4  2EE8               	decfsz	wreg,f,c
  5974  000BA6  D7F8               	goto	u3075
  5975  000BA8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5976  000BAC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5977  000BB0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5978  000BB4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5982  000BB8  0100               	movlb	0	; () banked
  5983  000BBA  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5984  000BBC  0100               	movlb	0	; () banked
  5985  000BBE  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5986  000BC0  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5987  000BC2  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5988  000BC4  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5992  000BC6  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5993  000BCA  0012               	return	
  5994  000BCC                     __end_of_CANSetFilter:
  5995                           	opt stack 0
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           intcon	equ	0xFF2
  6003                           intcon2	equ	0xFF1
  6004                           postinc0	equ	0xFEE
  6005                           wreg	equ	0xFE8
  6006                           indf2	equ	0xFDF
  6007                           fsr2h	equ	0xFDA
  6008                           fsr2l	equ	0xFD9
  6009                           status	equ	0xFD8
  6010                           
  6011 ;; *************** function _CANOperationMode *****************
  6012 ;; Defined at:
  6013 ;;		line 206 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  mode            1    wreg     enum E16838
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  mode            1    0[BANK0 ] enum E16838
  6018 ;; Return value:  Size  Location     Type
  6019 ;;		None               void
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6027 ;;      Params:         0       0       0       0
  6028 ;;      Locals:         0       1       0       0
  6029 ;;      Temps:          0       0       0       0
  6030 ;;      Totals:         0       1       0       0
  6031 ;;Total ram usage:        1 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    3
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_CANInitialize
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text10
  6042  002562                     __ptext10:
  6043                           	opt stack 0
  6044  002562                     _CANOperationMode:
  6045                           	opt stack 25
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;incstack = 0
  6049                           ;CANOperationMode@mode stored from wreg
  6050  002562  0100               	movlb	0	; () banked
  6051  002564  6F60               	movwf	CANOperationMode@mode& (0+255),b
  6052                           
  6053                           ;inc\CANlib.h: 208: CANCON = mode;
  6054  002566  C060  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6055  00256A                     l2530:
  6056  00256A  506E               	movf	3950,w,c	;volatile
  6057  00256C  0BE0               	andlw	224
  6058  00256E  0100               	movlb	0	; () banked
  6059  002570  1960               	xorwf	CANOperationMode@mode& (0+255),w,b
  6060  002572  B4D8               	btfsc	status,2,c
  6061  002574  0012               	return	
  6062  002576  D7F9               	goto	l2530
  6063  002578                     __end_of_CANOperationMode:
  6064                           	opt stack 0
  6065                           tblptru	equ	0xFF8
  6066                           tblptrh	equ	0xFF7
  6067                           tblptrl	equ	0xFF6
  6068                           tablat	equ	0xFF5
  6069                           prodh	equ	0xFF4
  6070                           prodl	equ	0xFF3
  6071                           intcon	equ	0xFF2
  6072                           intcon2	equ	0xFF1
  6073                           postinc0	equ	0xFEE
  6074                           wreg	equ	0xFE8
  6075                           indf2	equ	0xFDF
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080 ;; *************** function ___awdiv *****************
  6081 ;; Defined at:
  6082 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  dividend        2    0[BANK0 ] int 
  6085 ;;  divisor         2    2[BANK0 ] int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  quotient        2    6[BANK0 ] int 
  6088 ;;  sign            1    5[BANK0 ] unsigned char 
  6089 ;;  counter         1    4[BANK0 ] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2    0[BANK0 ] int 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6099 ;;      Params:         0       4       0       0
  6100 ;;      Locals:         0       4       0       0
  6101 ;;      Temps:          0       0       0       0
  6102 ;;      Totals:         0       8       0       0
  6103 ;;Total ram usage:        8 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    3
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text11
  6114  002124                     __ptext11:
  6115                           	opt stack 0
  6116  002124                     ___awdiv:
  6117                           	opt stack 27
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;incstack = 0
  6121  002124  0E00               	movlw	0
  6122  002126  0100               	movlb	0	; () banked
  6123  002128  6F65               	movwf	___awdiv@sign& (0+255),b
  6124                           
  6125                           ; BSR set to: 0
  6126  00212A  0100               	movlb	0	; () banked
  6127  00212C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6128  00212E  D008               	goto	l3530
  6129                           
  6130                           ; BSR set to: 0
  6131  002130  0100               	movlb	0	; () banked
  6132  002132  6D62               	negf	___awdiv@divisor& (0+255),b
  6133  002134  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6134  002136  B0D8               	btfsc	status,0,c
  6135  002138  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6136                           
  6137                           ; BSR set to: 0
  6138  00213A  0E01               	movlw	1
  6139  00213C  0100               	movlb	0	; () banked
  6140  00213E  6F65               	movwf	___awdiv@sign& (0+255),b
  6141  002140                     l3530:
  6142                           
  6143                           ; BSR set to: 0
  6144  002140  0100               	movlb	0	; () banked
  6145  002142  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6146  002144  D008               	goto	l3536
  6147                           
  6148                           ; BSR set to: 0
  6149  002146  0100               	movlb	0	; () banked
  6150  002148  6D60               	negf	___awdiv@dividend& (0+255),b
  6151  00214A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6152  00214C  B0D8               	btfsc	status,0,c
  6153  00214E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6154                           
  6155                           ; BSR set to: 0
  6156  002150  0E01               	movlw	1
  6157  002152  0100               	movlb	0	; () banked
  6158  002154  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  6159  002156                     l3536:
  6160                           
  6161                           ; BSR set to: 0
  6162  002156  0E00               	movlw	0
  6163  002158  0100               	movlb	0	; () banked
  6164  00215A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  6165  00215C  0E00               	movlw	0
  6166  00215E  6F66               	movwf	___awdiv@quotient& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169  002160  0100               	movlb	0	; () banked
  6170  002162  5162               	movf	___awdiv@divisor& (0+255),w,b
  6171  002164  0100               	movlb	0	; () banked
  6172  002166  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6173  002168  B4D8               	btfsc	status,2,c
  6174  00216A  D02C               	goto	l3558
  6175                           
  6176                           ; BSR set to: 0
  6177  00216C  0E01               	movlw	1
  6178  00216E  0100               	movlb	0	; () banked
  6179  002170  6F64               	movwf	___awdiv@counter& (0+255),b
  6180  002172  D006               	goto	l3544
  6181  002174                     l3542:
  6182                           
  6183                           ; BSR set to: 0
  6184  002174  0100               	movlb	0	; () banked
  6185  002176  90D8               	bcf	status,0,c
  6186  002178  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  6187  00217A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6188  00217C  0100               	movlb	0	; () banked
  6189  00217E  2B64               	incf	___awdiv@counter& (0+255),f,b
  6190  002180                     l3544:
  6191                           
  6192                           ; BSR set to: 0
  6193  002180  0100               	movlb	0	; () banked
  6194  002182  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6195  002184  D7F7               	goto	l3542
  6196  002186                     l3546:
  6197                           
  6198                           ; BSR set to: 0
  6199  002186  0100               	movlb	0	; () banked
  6200  002188  90D8               	bcf	status,0,c
  6201  00218A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  6202  00218C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  00218E  0100               	movlb	0	; () banked
  6206  002190  5162               	movf	___awdiv@divisor& (0+255),w,b
  6207  002192  0100               	movlb	0	; () banked
  6208  002194  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  6209  002196  0100               	movlb	0	; () banked
  6210  002198  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6211  00219A  0100               	movlb	0	; () banked
  6212  00219C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6213  00219E  A0D8               	btfss	status,0,c
  6214  0021A0  D00A               	goto	l3554
  6215                           
  6216                           ; BSR set to: 0
  6217  0021A2  0100               	movlb	0	; () banked
  6218  0021A4  5162               	movf	___awdiv@divisor& (0+255),w,b
  6219  0021A6  0100               	movlb	0	; () banked
  6220  0021A8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  6221  0021AA  0100               	movlb	0	; () banked
  6222  0021AC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6223  0021AE  0100               	movlb	0	; () banked
  6224  0021B0  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6225                           
  6226                           ; BSR set to: 0
  6227  0021B2  0100               	movlb	0	; () banked
  6228  0021B4  8166               	bsf	___awdiv@quotient& (0+255),0,b
  6229  0021B6                     l3554:
  6230                           
  6231                           ; BSR set to: 0
  6232  0021B6  0100               	movlb	0	; () banked
  6233  0021B8  90D8               	bcf	status,0,c
  6234  0021BA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6235  0021BC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  6236                           
  6237                           ; BSR set to: 0
  6238  0021BE  0100               	movlb	0	; () banked
  6239  0021C0  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  6240  0021C2  D7E1               	goto	l3546
  6241  0021C4                     l3558:
  6242                           
  6243                           ; BSR set to: 0
  6244  0021C4  0100               	movlb	0	; () banked
  6245  0021C6  5165               	movf	___awdiv@sign& (0+255),w,b
  6246  0021C8  0100               	movlb	0	; () banked
  6247  0021CA  B4D8               	btfsc	status,2,c
  6248  0021CC  D005               	goto	l3562
  6249                           
  6250                           ; BSR set to: 0
  6251  0021CE  0100               	movlb	0	; () banked
  6252  0021D0  6D66               	negf	___awdiv@quotient& (0+255),b
  6253  0021D2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6254  0021D4  B0D8               	btfsc	status,0,c
  6255  0021D6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6256  0021D8                     l3562:
  6257                           
  6258                           ; BSR set to: 0
  6259  0021D8  C066  F060         	movff	___awdiv@quotient,?___awdiv
  6260  0021DC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  6261  0021E0  0012               	return	
  6262  0021E2                     __end_of___awdiv:
  6263                           	opt stack 0
  6264                           tblptru	equ	0xFF8
  6265                           tblptrh	equ	0xFF7
  6266                           tblptrl	equ	0xFF6
  6267                           tablat	equ	0xFF5
  6268                           prodh	equ	0xFF4
  6269                           prodl	equ	0xFF3
  6270                           intcon	equ	0xFF2
  6271                           intcon2	equ	0xFF1
  6272                           postinc0	equ	0xFEE
  6273                           wreg	equ	0xFE8
  6274                           indf2	equ	0xFDF
  6275                           fsr2h	equ	0xFDA
  6276                           fsr2l	equ	0xFD9
  6277                           status	equ	0xFD8
  6278                           
  6279 ;; *************** function _CANisTXwarningON *****************
  6280 ;; Defined at:
  6281 ;;		line 1119 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      unsigned char 
  6288 ;; Registers used:
  6289 ;;		wreg
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6295 ;;      Params:         0       0       0       0
  6296 ;;      Locals:         0       0       0       0
  6297 ;;      Temps:          0       0       0       0
  6298 ;;      Totals:         0       0       0       0
  6299 ;;Total ram usage:        0 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    3
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_main
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text12
  6310  0025A0                     __ptext12:
  6311                           	opt stack 0
  6312  0025A0                     _CANisTXwarningON:
  6313                           	opt stack 27
  6314                           
  6315                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;incstack = 0
  6319  0025A0  A474               	btfss	3956,2,c	;volatile
  6320  0025A2  D002               	goto	u3820
  6321  0025A4  0E01               	movlw	1
  6322  0025A6  0012               	return	
  6323  0025A8                     u3820:
  6324  0025A8  0E00               	movlw	0
  6325  0025AA  0012               	return	
  6326  0025AC                     __end_of_CANisTXwarningON:
  6327                           	opt stack 0
  6328                           tblptru	equ	0xFF8
  6329                           tblptrh	equ	0xFF7
  6330                           tblptrl	equ	0xFF6
  6331                           tablat	equ	0xFF5
  6332                           prodh	equ	0xFF4
  6333                           prodl	equ	0xFF3
  6334                           intcon	equ	0xFF2
  6335                           intcon2	equ	0xFF1
  6336                           postinc0	equ	0xFEE
  6337                           wreg	equ	0xFE8
  6338                           indf2	equ	0xFDF
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function _CANisRXwarningON *****************
  6344 ;; Defined at:
  6345 ;;		line 1127 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      unsigned char 
  6352 ;; Registers used:
  6353 ;;		wreg
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6359 ;;      Params:         0       0       0       0
  6360 ;;      Locals:         0       0       0       0
  6361 ;;      Temps:          0       0       0       0
  6362 ;;      Totals:         0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    3
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text13
  6374  0025AC                     __ptext13:
  6375                           	opt stack 0
  6376  0025AC                     _CANisRXwarningON:
  6377                           	opt stack 27
  6378                           
  6379                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6380                           
  6381                           ;incstack = 0
  6382  0025AC  A274               	btfss	3956,1,c	;volatile
  6383  0025AE  D002               	goto	u3830
  6384  0025B0  0E01               	movlw	1
  6385  0025B2  0012               	return	
  6386  0025B4                     u3830:
  6387  0025B4  0E00               	movlw	0
  6388  0025B6  0012               	return	
  6389  0025B8                     __end_of_CANisRXwarningON:
  6390                           	opt stack 0
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           prodh	equ	0xFF4
  6396                           prodl	equ	0xFF3
  6397                           intcon	equ	0xFF2
  6398                           intcon2	equ	0xFF1
  6399                           postinc0	equ	0xFEE
  6400                           wreg	equ	0xFE8
  6401                           indf2	equ	0xFDF
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _ADC_Read *****************
  6407 ;; Defined at:
  6408 ;;		line 212 in file "Brake_System.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;		None               void
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6422 ;;      Params:         0       0       0       0
  6423 ;;      Locals:         0       0       0       0
  6424 ;;      Temps:          0       2       0       0
  6425 ;;      Totals:         0       2       0       0
  6426 ;;Total ram usage:        2 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    4
  6429 ;; This function calls:
  6430 ;;		___lwdiv
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text14
  6437  002286                     __ptext14:
  6438                           	opt stack 0
  6439  002286                     _ADC_Read:
  6440                           	opt stack 26
  6441                           
  6442                           ;Brake_System.c: 213: for (i = 0; i < number_of_measures; i++) {
  6443                           
  6444                           ;incstack = 0
  6445  002286  0E00               	movlw	0
  6446  002288  0100               	movlb	0	; () banked
  6447  00228A  6F9D               	movwf	_i& (0+255),b
  6448  00228C  D012               	goto	l3506
  6449  00228E                     l671:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;Brake_System.c: 214: ADCON0bits.GO = 1;
  6453  00228E  82C2               	bsf	4034,1,c	;volatile
  6454  002290                     l672:
  6455  002290  B2C2               	btfsc	4034,1,c	;volatile
  6456  002292  D7FE               	goto	l672
  6457                           
  6458                           ;Brake_System.c: 216: read = ADRESH;
  6459  002294  CFC4 F09E          	movff	4036,_read	;volatile
  6460                           
  6461                           ;Brake_System.c: 217: partial_sum = partial_sum + read;
  6462  002298  0100               	movlb	0	; () banked
  6463  00229A  519E               	movf	_read& (0+255),w,b
  6464  00229C  0100               	movlb	0	; () banked
  6465  00229E  2596               	addwf	_partial_sum& (0+255),w,b
  6466  0022A0  0100               	movlb	0	; () banked
  6467  0022A2  6F96               	movwf	_partial_sum& (0+255),b
  6468  0022A4  0E00               	movlw	0
  6469  0022A6  0100               	movlb	0	; () banked
  6470  0022A8  2197               	addwfc	(_partial_sum+1)& (0+255),w,b
  6471  0022AA  0100               	movlb	0	; () banked
  6472  0022AC  6F97               	movwf	(_partial_sum+1)& (0+255),b
  6473                           
  6474                           ; BSR set to: 0
  6475  0022AE  0100               	movlb	0	; () banked
  6476  0022B0  2B9D               	incf	_i& (0+255),f,b
  6477  0022B2                     l3506:
  6478                           
  6479                           ; BSR set to: 0
  6480  0022B2  0100               	movlb	0	; () banked
  6481  0022B4  51AA               	movf	_number_of_measures& (0+255),w,b
  6482  0022B6  0100               	movlb	0	; () banked
  6483  0022B8  5D9D               	subwf	_i& (0+255),w,b
  6484  0022BA  A0D8               	btfss	status,0,c
  6485  0022BC  D7E8               	goto	l671
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;Brake_System.c: 218: }
  6489                           ;Brake_System.c: 219: correction_factor = (partial_sum / number_of_measures) - 127;
  6490                           
  6491                           ; BSR set to: 0
  6492  0022BE  C096  F060         	movff	_partial_sum,___lwdiv@dividend
  6493  0022C2  C097  F061         	movff	_partial_sum+1,___lwdiv@dividend+1
  6494  0022C6  C0AA  F062         	movff	_number_of_measures,___lwdiv@divisor
  6495  0022CA  0100               	movlb	0	; () banked
  6496  0022CC  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6497  0022CE  ECC7  F011         	call	___lwdiv	;wreg free
  6498  0022D2  0E81               	movlw	129
  6499  0022D4  0100               	movlb	0	; () banked
  6500  0022D6  2560               	addwf	?___lwdiv& (0+255),w,b
  6501  0022D8  0100               	movlb	0	; () banked
  6502  0022DA  6F94               	movwf	_correction_factor& (0+255),b
  6503  0022DC  0EFF               	movlw	255
  6504  0022DE  0100               	movlb	0	; () banked
  6505  0022E0  2161               	addwfc	(?___lwdiv+1)& (0+255),w,b
  6506  0022E2  0100               	movlb	0	; () banked
  6507  0022E4  6F95               	movwf	(_correction_factor+1)& (0+255),b
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;Brake_System.c: 220: home_position = correction_factor / 4 + 127;
  6511  0022E6  C094  F067         	movff	_correction_factor,??_ADC_Read
  6512  0022EA  C095  F068         	movff	_correction_factor+1,??_ADC_Read+1
  6513  0022EE  0100               	movlb	0	; () banked
  6514  0022F0  90D8               	bcf	status,0,c
  6515  0022F2  3368               	rrcf	(??_ADC_Read+1)& (0+255),f,b
  6516  0022F4  3367               	rrcf	??_ADC_Read& (0+255),f,b
  6517  0022F6  0100               	movlb	0	; () banked
  6518  0022F8  90D8               	bcf	status,0,c
  6519  0022FA  3368               	rrcf	(??_ADC_Read+1)& (0+255),f,b
  6520  0022FC  3367               	rrcf	??_ADC_Read& (0+255),f,b
  6521  0022FE  0100               	movlb	0	; () banked
  6522  002300  5167               	movf	??_ADC_Read& (0+255),w,b
  6523  002302  0F7F               	addlw	127
  6524  002304  0100               	movlb	0	; () banked
  6525  002306  6F9C               	movwf	_home_position& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528  002308  0012               	return		;funcret
  6529  00230A                     __end_of_ADC_Read:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           intcon	equ	0xFF2
  6538                           intcon2	equ	0xFF1
  6539                           postinc0	equ	0xFEE
  6540                           wreg	equ	0xFE8
  6541                           indf2	equ	0xFDF
  6542                           fsr2h	equ	0xFDA
  6543                           fsr2l	equ	0xFD9
  6544                           status	equ	0xFD8
  6545                           
  6546 ;; *************** function ___lwdiv *****************
  6547 ;; Defined at:
  6548 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  dividend        2    0[BANK0 ] unsigned int 
  6551 ;;  divisor         2    2[BANK0 ] unsigned int 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  quotient        2    4[BANK0 ] unsigned int 
  6554 ;;  counter         1    6[BANK0 ] unsigned char 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  2    0[BANK0 ] unsigned int 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6564 ;;      Params:         0       4       0       0
  6565 ;;      Locals:         0       3       0       0
  6566 ;;      Temps:          0       0       0       0
  6567 ;;      Totals:         0       7       0       0
  6568 ;;Total ram usage:        7 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    3
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_ADC_Read
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text15
  6579  00238E                     __ptext15:
  6580                           	opt stack 0
  6581  00238E                     ___lwdiv:
  6582                           	opt stack 26
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;incstack = 0
  6586  00238E  0E00               	movlw	0
  6587  002390  0100               	movlb	0	; () banked
  6588  002392  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6589  002394  0E00               	movlw	0
  6590  002396  6F64               	movwf	___lwdiv@quotient& (0+255),b
  6591                           
  6592                           ; BSR set to: 0
  6593  002398  0100               	movlb	0	; () banked
  6594  00239A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6595  00239C  0100               	movlb	0	; () banked
  6596  00239E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6597  0023A0  B4D8               	btfsc	status,2,c
  6598  0023A2  D02C               	goto	l1089
  6599                           
  6600                           ; BSR set to: 0
  6601  0023A4  0E01               	movlw	1
  6602  0023A6  0100               	movlb	0	; () banked
  6603  0023A8  6F66               	movwf	___lwdiv@counter& (0+255),b
  6604  0023AA  D006               	goto	l3254
  6605  0023AC                     l3252:
  6606                           
  6607                           ; BSR set to: 0
  6608  0023AC  0100               	movlb	0	; () banked
  6609  0023AE  90D8               	bcf	status,0,c
  6610  0023B0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  6611  0023B2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6612  0023B4  0100               	movlb	0	; () banked
  6613  0023B6  2B66               	incf	___lwdiv@counter& (0+255),f,b
  6614  0023B8                     l3254:
  6615                           
  6616                           ; BSR set to: 0
  6617  0023B8  0100               	movlb	0	; () banked
  6618  0023BA  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6619  0023BC  D7F7               	goto	l3252
  6620  0023BE                     l3256:
  6621                           
  6622                           ; BSR set to: 0
  6623  0023BE  0100               	movlb	0	; () banked
  6624  0023C0  90D8               	bcf	status,0,c
  6625  0023C2  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  6626  0023C4  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6627                           
  6628                           ; BSR set to: 0
  6629  0023C6  0100               	movlb	0	; () banked
  6630  0023C8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6631  0023CA  0100               	movlb	0	; () banked
  6632  0023CC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  6633  0023CE  0100               	movlb	0	; () banked
  6634  0023D0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6635  0023D2  0100               	movlb	0	; () banked
  6636  0023D4  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6637  0023D6  A0D8               	btfss	status,0,c
  6638  0023D8  D00A               	goto	l3264
  6639                           
  6640                           ; BSR set to: 0
  6641  0023DA  0100               	movlb	0	; () banked
  6642  0023DC  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6643  0023DE  0100               	movlb	0	; () banked
  6644  0023E0  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  6645  0023E2  0100               	movlb	0	; () banked
  6646  0023E4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6647  0023E6  0100               	movlb	0	; () banked
  6648  0023E8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6649                           
  6650                           ; BSR set to: 0
  6651  0023EA  0100               	movlb	0	; () banked
  6652  0023EC  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  6653  0023EE                     l3264:
  6654                           
  6655                           ; BSR set to: 0
  6656  0023EE  0100               	movlb	0	; () banked
  6657  0023F0  90D8               	bcf	status,0,c
  6658  0023F2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6659  0023F4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  6660                           
  6661                           ; BSR set to: 0
  6662  0023F6  0100               	movlb	0	; () banked
  6663  0023F8  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  6664  0023FA  D7E1               	goto	l3256
  6665  0023FC                     l1089:
  6666                           
  6667                           ; BSR set to: 0
  6668  0023FC  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  6669  002400  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6670                           
  6671                           ; BSR set to: 0
  6672  002404  0012               	return		;funcret
  6673  002406                     __end_of___lwdiv:
  6674                           	opt stack 0
  6675                           tblptru	equ	0xFF8
  6676                           tblptrh	equ	0xFF7
  6677                           tblptrl	equ	0xFF6
  6678                           tablat	equ	0xFF5
  6679                           prodh	equ	0xFF4
  6680                           prodl	equ	0xFF3
  6681                           intcon	equ	0xFF2
  6682                           intcon2	equ	0xFF1
  6683                           postinc0	equ	0xFEE
  6684                           wreg	equ	0xFE8
  6685                           indf2	equ	0xFDF
  6686                           fsr2h	equ	0xFDA
  6687                           fsr2l	equ	0xFD9
  6688                           status	equ	0xFD8
  6689                           
  6690 ;; *************** function _ISR_Bassa *****************
  6691 ;; Defined at:
  6692 ;;		line 129 in file "Brake_System.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;		None               void
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6706 ;;      Params:         0       0       0       0
  6707 ;;      Locals:         0       0       0       0
  6708 ;;      Temps:         17       0       0       0
  6709 ;;      Totals:        17       0       0       0
  6710 ;;Total ram usage:       17 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    2
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		Interrupt level 1
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	intcodelo
  6721  000018                     __pintcodelo:
  6722                           	opt stack 0
  6723  000018                     _ISR_Bassa:
  6724                           	opt stack 25
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;incstack = 0
  6728  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6729  00001A  CFD8 F001          	movff	status,??_ISR_Bassa
  6730  00001E  CFE8 F002          	movff	wreg,??_ISR_Bassa+1
  6731  000022  CFE0 F003          	movff	bsr,??_ISR_Bassa+2
  6732  000026  CFFA F004          	movff	pclath,??_ISR_Bassa+3
  6733  00002A  CFFB F005          	movff	pclatu,??_ISR_Bassa+4
  6734  00002E  CFE9 F006          	movff	fsr0l,??_ISR_Bassa+5
  6735  000032  CFEA F007          	movff	fsr0h,??_ISR_Bassa+6
  6736  000036  CFE1 F008          	movff	fsr1l,??_ISR_Bassa+7
  6737  00003A  CFE2 F009          	movff	fsr1h,??_ISR_Bassa+8
  6738  00003E  CFD9 F00A          	movff	fsr2l,??_ISR_Bassa+9
  6739  000042  CFDA F00B          	movff	fsr2h,??_ISR_Bassa+10
  6740  000046  CFF3 F00C          	movff	prodl,??_ISR_Bassa+11
  6741  00004A  CFF4 F00D          	movff	prodh,??_ISR_Bassa+12
  6742  00004E  CFF6 F00E          	movff	tblptrl,??_ISR_Bassa+13
  6743  000052  CFF7 F00F          	movff	tblptrh,??_ISR_Bassa+14
  6744  000056  CFF8 F010          	movff	tblptru,??_ISR_Bassa+15
  6745  00005A  CFF5 F011          	movff	tablat,??_ISR_Bassa+16
  6746                           
  6747                           ;Brake_System.c: 130: if (PIR2bits.TMR3IF) {
  6748  00005E  A2A1               	btfss	4001,1,c	;volatile
  6749  000060  D00C               	goto	i1l643
  6750                           
  6751                           ;Brake_System.c: 131: TMR3_counter++;
  6752  000062  0E01               	movlw	1
  6753  000064  0100               	movlb	0	; () banked
  6754  000066  2786               	addwf	_TMR3_counter& (0+255),f,b
  6755  000068  0E00               	movlw	0
  6756  00006A  2387               	addwfc	(_TMR3_counter+1)& (0+255),f,b
  6757  00006C  2388               	addwfc	(_TMR3_counter+2)& (0+255),f,b
  6758  00006E  2389               	addwfc	(_TMR3_counter+3)& (0+255),f,b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;Brake_System.c: 132: TMR3H = 0x63;
  6762  000070  0E63               	movlw	99
  6763  000072  6EB3               	movwf	4019,c	;volatile
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;Brake_System.c: 133: TMR3L = 0xC0;
  6767  000074  0EC0               	movlw	192
  6768  000076  6EB2               	movwf	4018,c	;volatile
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;Brake_System.c: 134: PIR2bits.TMR3IF = 0;
  6772  000078  92A1               	bcf	4001,1,c	;volatile
  6773  00007A                     i1l643:
  6774  00007A  C011  FFF5         	movff	??_ISR_Bassa+16,tablat
  6775  00007E  C010  FFF8         	movff	??_ISR_Bassa+15,tblptru
  6776  000082  C00F  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  6777  000086  C00E  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  6778  00008A  C00D  FFF4         	movff	??_ISR_Bassa+12,prodh
  6779  00008E  C00C  FFF3         	movff	??_ISR_Bassa+11,prodl
  6780  000092  C00B  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  6781  000096  C00A  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  6782  00009A  C009  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  6783  00009E  C008  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  6784  0000A2  C007  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  6785  0000A6  C006  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  6786  0000AA  C005  FFFB         	movff	??_ISR_Bassa+4,pclatu
  6787  0000AE  C004  FFFA         	movff	??_ISR_Bassa+3,pclath
  6788  0000B2  C003  FFE0         	movff	??_ISR_Bassa+2,bsr
  6789  0000B6  C002  FFE8         	movff	??_ISR_Bassa+1,wreg
  6790  0000BA  C001  FFD8         	movff	??_ISR_Bassa,status
  6791  0000BE  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6792  0000C0  0010               	retfie	
  6793  0000C2                     __end_of_ISR_Bassa:
  6794                           	opt stack 0
  6795                           pclatu	equ	0xFFB
  6796                           pclath	equ	0xFFA
  6797                           tblptru	equ	0xFF8
  6798                           tblptrh	equ	0xFF7
  6799                           tblptrl	equ	0xFF6
  6800                           tablat	equ	0xFF5
  6801                           prodh	equ	0xFF4
  6802                           prodl	equ	0xFF3
  6803                           intcon	equ	0xFF2
  6804                           intcon2	equ	0xFF1
  6805                           postinc0	equ	0xFEE
  6806                           fsr0h	equ	0xFEA
  6807                           fsr0l	equ	0xFE9
  6808                           wreg	equ	0xFE8
  6809                           fsr1h	equ	0xFE2
  6810                           fsr1l	equ	0xFE1
  6811                           bsr	equ	0xFE0
  6812                           indf2	equ	0xFDF
  6813                           fsr2h	equ	0xFDA
  6814                           fsr2l	equ	0xFD9
  6815                           status	equ	0xFD8
  6816                           
  6817 ;; *************** function _ISR_Alta *****************
  6818 ;; Defined at:
  6819 ;;		line 95 in file "Brake_System.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;		None               void
  6826 ;; Registers used:
  6827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6833 ;;      Params:         0       0       0       0
  6834 ;;      Locals:         0       0       0       0
  6835 ;;      Temps:         18       0       0       0
  6836 ;;      Totals:        18       0       0       0
  6837 ;;Total ram usage:       18 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    1
  6840 ;; This function calls:
  6841 ;;		_CANisRxReady
  6842 ;;		_CANreceiveMessage
  6843 ;;		_WriteTimer0
  6844 ;;		i2___awdiv
  6845 ;;		i2___wmul
  6846 ;; This function is called by:
  6847 ;;		Interrupt level 2
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	intcode
  6852  000008                     __pintcode:
  6853                           	opt stack 0
  6854  000008                     _ISR_Alta:
  6855                           	opt stack 25
  6856                           
  6857                           ;incstack = 0
  6858  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6859  00000A  CFFA F024          	movff	pclath,??_ISR_Alta+4
  6860  00000E  CFFB F025          	movff	pclatu,??_ISR_Alta+5
  6861  000012  EDE4  F00E         	call	int_func,f	;refresh shadow registers
  6862                           pclatu	equ	0xFFB
  6863                           pclath	equ	0xFFA
  6864                           tblptru	equ	0xFF8
  6865                           tblptrh	equ	0xFF7
  6866                           tblptrl	equ	0xFF6
  6867                           tablat	equ	0xFF5
  6868                           prodh	equ	0xFF4
  6869                           prodl	equ	0xFF3
  6870                           intcon	equ	0xFF2
  6871                           intcon2	equ	0xFF1
  6872                           postinc0	equ	0xFEE
  6873                           fsr0h	equ	0xFEA
  6874                           fsr0l	equ	0xFE9
  6875                           wreg	equ	0xFE8
  6876                           fsr1h	equ	0xFE2
  6877                           fsr1l	equ	0xFE1
  6878                           bsr	equ	0xFE0
  6879                           indf2	equ	0xFDF
  6880                           fsr2h	equ	0xFDA
  6881                           fsr2l	equ	0xFD9
  6882                           status	equ	0xFD8
  6883                           
  6884                           	psect	intcode_body
  6885  001DC8                     __pintcode_body:
  6886                           	opt stack 25
  6887  001DC8                     int_func:
  6888                           	opt stack 25
  6889  001DC8  0006               	pop		; remove dummy address from shadow register refresh
  6890  001DCA  CFE9 F026          	movff	fsr0l,??_ISR_Alta+6
  6891  001DCE  CFEA F027          	movff	fsr0h,??_ISR_Alta+7
  6892  001DD2  CFE1 F028          	movff	fsr1l,??_ISR_Alta+8
  6893  001DD6  CFE2 F029          	movff	fsr1h,??_ISR_Alta+9
  6894  001DDA  CFD9 F02A          	movff	fsr2l,??_ISR_Alta+10
  6895  001DDE  CFDA F02B          	movff	fsr2h,??_ISR_Alta+11
  6896  001DE2  CFF3 F02C          	movff	prodl,??_ISR_Alta+12
  6897  001DE6  CFF4 F02D          	movff	prodh,??_ISR_Alta+13
  6898  001DEA  CFF6 F02E          	movff	tblptrl,??_ISR_Alta+14
  6899  001DEE  CFF7 F02F          	movff	tblptrh,??_ISR_Alta+15
  6900  001DF2  CFF8 F030          	movff	tblptru,??_ISR_Alta+16
  6901  001DF6  CFF5 F031          	movff	tablat,??_ISR_Alta+17
  6902                           
  6903                           ;Brake_System.c: 96: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6904  001DFA  A0A4               	btfss	4004,0,c	;volatile
  6905  001DFC  B2A4               	btfsc	4004,1,c	;volatile
  6906  001DFE  D001               	goto	i2l3630
  6907  001E00  D021               	goto	i2l630
  6908  001E02                     i2l3630:
  6909                           
  6910                           ;Brake_System.c: 97: if (CANisRxReady()) {
  6911  001E02  ECBC  F012         	call	_CANisRxReady	;wreg free
  6912  001E06  0900               	iorlw	0
  6913  001E08  B4D8               	btfsc	status,2,c
  6914  001E0A  D01A               	goto	i2l633
  6915                           
  6916                           ;Brake_System.c: 98: CANreceiveMessage(&msg);
  6917  001E0C  0E3A               	movlw	low _msg
  6918  001E0E  6E12               	movwf	CANreceiveMessage@msg,c
  6919  001E10  0E00               	movlw	high _msg
  6920  001E12  6E13               	movwf	CANreceiveMessage@msg+1,c
  6921  001E14  ECAC  F009         	call	_CANreceiveMessage	;wreg free
  6922                           
  6923                           ;Brake_System.c: 99: if (msg.RTR == 1) {
  6924  001E18  0448               	decf	_msg+14,w,c
  6925  001E1A  A4D8               	btfss	status,2,c
  6926  001E1C  D009               	goto	i2l3638
  6927                           
  6928                           ;Brake_System.c: 100: id = msg.identifier;
  6929  001E1E  C03A  F08E         	movff	_msg,_id
  6930  001E22  C03B  F08F         	movff	_msg+1,_id+1
  6931  001E26  C03C  F090         	movff	_msg+2,_id+2
  6932  001E2A  C03D  F091         	movff	_msg+3,_id+3
  6933                           
  6934                           ;Brake_System.c: 101: remote_frame = 1;
  6935  001E2E  824A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6936  001E30                     i2l3638:
  6937                           
  6938                           ;Brake_System.c: 102: }
  6939                           ;Brake_System.c: 103: if (msg.identifier == 0b00000000000000000000000000110) {
  6940  001E30  0E06               	movlw	6
  6941  001E32  183A               	xorwf	_msg,w,c
  6942  001E34  103B               	iorwf	_msg+1,w,c
  6943  001E36  103C               	iorwf	_msg+2,w,c
  6944  001E38  103D               	iorwf	_msg+3,w,c
  6945  001E3A  B4D8               	btfsc	status,2,c
  6946                           
  6947                           ;Brake_System.c: 104: brake_signal_CAN = msg.data[0];
  6948  001E3C  C03E  F09A         	movff	_msg+4,_brake_signal_CAN
  6949  001E40                     i2l633:
  6950                           
  6951                           ;Brake_System.c: 105: }
  6952                           ;Brake_System.c: 106: }
  6953                           ;Brake_System.c: 107: PIR3bits.RXB0IF = 0;
  6954  001E40  90A4               	bcf	4004,0,c	;volatile
  6955                           
  6956                           ;Brake_System.c: 108: PIR3bits.RXB1IF = 0;
  6957  001E42  92A4               	bcf	4004,1,c	;volatile
  6958  001E44                     i2l630:
  6959                           
  6960                           ;Brake_System.c: 109: }
  6961                           ;Brake_System.c: 110: if (INTCONbits.TMR0IF == 1) {
  6962  001E44  A4F2               	btfss	intcon,2,c	;volatile
  6963  001E46  D07D               	goto	i2l639
  6964                           
  6965                           ;Brake_System.c: 111: PORTCbits.RC0 = ~PORTCbits.RC0;
  6966  001E48  A082               	btfss	3970,0,c	;volatile
  6967  001E4A  D002               	goto	i2u411_40
  6968  001E4C  0E01               	movlw	1
  6969  001E4E  D001               	goto	i2u411_46
  6970  001E50                     i2u411_40:
  6971  001E50  0E00               	movlw	0
  6972  001E52                     i2u411_46:
  6973  001E52  0AFF               	xorlw	255
  6974  001E54  6E20               	movwf	??_ISR_Alta& (0+255),c
  6975  001E56  5082               	movf	3970,w,c	;volatile
  6976  001E58  1820               	xorwf	??_ISR_Alta,w,c
  6977  001E5A  0BFE               	andlw	-2
  6978  001E5C  1820               	xorwf	??_ISR_Alta,w,c
  6979  001E5E  6E82               	movwf	3970,c	;volatile
  6980                           
  6981                           ;Brake_System.c: 112: if (PORTCbits.RC0 == 1) {
  6982  001E60  A082               	btfss	3970,0,c	;volatile
  6983  001E62  D068               	goto	i2l3654
  6984                           
  6985                           ;Brake_System.c: 113: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  6986  001E64  0E40               	movlw	64
  6987  001E66  6E20               	movwf	??_ISR_Alta& (0+255),c
  6988  001E68  0E06               	movlw	6
  6989  001E6A  6E21               	movwf	(??_ISR_Alta+1)& (0+255),c
  6990  001E6C  C049  F012         	movff	_brake_value_degree,i2___wmul@multiplier
  6991  001E70  6A13               	clrf	i2___wmul@multiplier+1,c
  6992  001E72  0E05               	movlw	5
  6993  001E74  6E15               	movwf	i2___wmul@multiplicand+1,c
  6994  001E76  0E78               	movlw	120
  6995  001E78  6E14               	movwf	i2___wmul@multiplicand,c
  6996  001E7A  EC8C  F012         	call	i2___wmul	;wreg free
  6997  001E7E  C012  F018         	movff	?i2___wmul,i2___awdiv@dividend
  6998  001E82  C013  F019         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  6999  001E86  0E00               	movlw	0
  7000  001E88  6E1B               	movwf	i2___awdiv@divisor+1,c
  7001  001E8A  0EB4               	movlw	180
  7002  001E8C  6E1A               	movwf	i2___awdiv@divisor,c
  7003  001E8E  EC85  F011         	call	i2___awdiv	;wreg free
  7004  001E92  90D8               	bcf	status,0,c
  7005  001E94  3618               	rlcf	?i2___awdiv,f,c
  7006  001E96  3619               	rlcf	?i2___awdiv+1,f,c
  7007  001E98  5020               	movf	??_ISR_Alta,w,c
  7008  001E9A  2618               	addwf	?i2___awdiv,f,c
  7009  001E9C  5021               	movf	??_ISR_Alta+1,w,c
  7010  001E9E  2219               	addwfc	?i2___awdiv+1,f,c
  7011  001EA0  C018  F036         	movff	?i2___awdiv,_timer_on
  7012  001EA4  C019  F037         	movff	?i2___awdiv+1,_timer_on+1
  7013  001EA8  0E00               	movlw	0
  7014  001EAA  BE37               	btfsc	_timer_on+1,7,c
  7015  001EAC  0EFF               	movlw	-1
  7016  001EAE  6E38               	movwf	_timer_on+2,c
  7017  001EB0  6E39               	movwf	_timer_on+3,c
  7018                           
  7019                           ;Brake_System.c: 114: timer_on = 65536 - timer_on;
  7020  001EB2  C036  F020         	movff	_timer_on,??_ISR_Alta
  7021  001EB6  C037  F021         	movff	_timer_on+1,??_ISR_Alta+1
  7022  001EBA  C038  F022         	movff	_timer_on+2,??_ISR_Alta+2
  7023  001EBE  C039  F023         	movff	_timer_on+3,??_ISR_Alta+3
  7024  001EC2  1E20               	comf	??_ISR_Alta,f,c
  7025  001EC4  1E21               	comf	??_ISR_Alta+1,f,c
  7026  001EC6  1E22               	comf	??_ISR_Alta+2,f,c
  7027  001EC8  1E23               	comf	??_ISR_Alta+3,f,c
  7028  001ECA  2A20               	incf	??_ISR_Alta,f,c
  7029  001ECC  0E00               	movlw	0
  7030  001ECE  2221               	addwfc	??_ISR_Alta+1,f,c
  7031  001ED0  2222               	addwfc	??_ISR_Alta+2,f,c
  7032  001ED2  2223               	addwfc	??_ISR_Alta+3,f,c
  7033  001ED4  0E00               	movlw	0
  7034  001ED6  2420               	addwf	??_ISR_Alta,w,c
  7035  001ED8  6E36               	movwf	_timer_on,c
  7036  001EDA  0E00               	movlw	0
  7037  001EDC  2021               	addwfc	??_ISR_Alta+1,w,c
  7038  001EDE  6E37               	movwf	_timer_on+1,c
  7039  001EE0  0E01               	movlw	1
  7040  001EE2  2022               	addwfc	??_ISR_Alta+2,w,c
  7041  001EE4  6E38               	movwf	_timer_on+2,c
  7042  001EE6  0E00               	movlw	0
  7043  001EE8  2023               	addwfc	??_ISR_Alta+3,w,c
  7044  001EEA  6E39               	movwf	_timer_on+3,c
  7045                           
  7046                           ;Brake_System.c: 115: timer_off = 40000 - timer_on;
  7047  001EEC  C036  F020         	movff	_timer_on,??_ISR_Alta
  7048  001EF0  C037  F021         	movff	_timer_on+1,??_ISR_Alta+1
  7049  001EF4  C038  F022         	movff	_timer_on+2,??_ISR_Alta+2
  7050  001EF8  C039  F023         	movff	_timer_on+3,??_ISR_Alta+3
  7051  001EFC  1E20               	comf	??_ISR_Alta,f,c
  7052  001EFE  1E21               	comf	??_ISR_Alta+1,f,c
  7053  001F00  1E22               	comf	??_ISR_Alta+2,f,c
  7054  001F02  1E23               	comf	??_ISR_Alta+3,f,c
  7055  001F04  2A20               	incf	??_ISR_Alta,f,c
  7056  001F06  0E00               	movlw	0
  7057  001F08  2221               	addwfc	??_ISR_Alta+1,f,c
  7058  001F0A  2222               	addwfc	??_ISR_Alta+2,f,c
  7059  001F0C  2223               	addwfc	??_ISR_Alta+3,f,c
  7060  001F0E  0E40               	movlw	64
  7061  001F10  2420               	addwf	??_ISR_Alta,w,c
  7062  001F12  6E32               	movwf	_timer_off,c
  7063  001F14  0E9C               	movlw	156
  7064  001F16  2021               	addwfc	??_ISR_Alta+1,w,c
  7065  001F18  6E33               	movwf	_timer_off+1,c
  7066  001F1A  0E00               	movlw	0
  7067  001F1C  2022               	addwfc	??_ISR_Alta+2,w,c
  7068  001F1E  6E34               	movwf	_timer_off+2,c
  7069  001F20  0E00               	movlw	0
  7070  001F22  2023               	addwfc	??_ISR_Alta+3,w,c
  7071  001F24  6E35               	movwf	_timer_off+3,c
  7072                           
  7073                           ;Brake_System.c: 116: WriteTimer0(timer_on);
  7074  001F26  C036  F012         	movff	_timer_on,WriteTimer0@timer0
  7075  001F2A  C037  F013         	movff	_timer_on+1,WriteTimer0@timer0+1
  7076  001F2E  ECC7  F012         	call	_WriteTimer0	;wreg free
  7077                           
  7078                           ;Brake_System.c: 117: } else {
  7079  001F32  D006               	goto	i2l3656
  7080  001F34                     i2l3654:
  7081                           
  7082                           ;Brake_System.c: 118: WriteTimer0(timer_off);
  7083  001F34  C032  F012         	movff	_timer_off,WriteTimer0@timer0
  7084  001F38  C033  F013         	movff	_timer_off+1,WriteTimer0@timer0+1
  7085  001F3C  ECC7  F012         	call	_WriteTimer0	;wreg free
  7086  001F40                     i2l3656:
  7087                           
  7088                           ;Brake_System.c: 119: }
  7089                           ;Brake_System.c: 120: INTCONbits.TMR0IF = 0;
  7090  001F40  94F2               	bcf	intcon,2,c	;volatile
  7091  001F42                     i2l639:
  7092  001F42  C031  FFF5         	movff	??_ISR_Alta+17,tablat
  7093  001F46  C030  FFF8         	movff	??_ISR_Alta+16,tblptru
  7094  001F4A  C02F  FFF7         	movff	??_ISR_Alta+15,tblptrh
  7095  001F4E  C02E  FFF6         	movff	??_ISR_Alta+14,tblptrl
  7096  001F52  C02D  FFF4         	movff	??_ISR_Alta+13,prodh
  7097  001F56  C02C  FFF3         	movff	??_ISR_Alta+12,prodl
  7098  001F5A  C02B  FFDA         	movff	??_ISR_Alta+11,fsr2h
  7099  001F5E  C02A  FFD9         	movff	??_ISR_Alta+10,fsr2l
  7100  001F62  C029  FFE2         	movff	??_ISR_Alta+9,fsr1h
  7101  001F66  C028  FFE1         	movff	??_ISR_Alta+8,fsr1l
  7102  001F6A  C027  FFEA         	movff	??_ISR_Alta+7,fsr0h
  7103  001F6E  C026  FFE9         	movff	??_ISR_Alta+6,fsr0l
  7104  001F72  C025  FFFB         	movff	??_ISR_Alta+5,pclatu
  7105  001F76  C024  FFFA         	movff	??_ISR_Alta+4,pclath
  7106  001F7A  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7107  001F7C  0011               	retfie		f
  7108  001F7E                     __end_of_ISR_Alta:
  7109                           	opt stack 0
  7110                           pclatu	equ	0xFFB
  7111                           pclath	equ	0xFFA
  7112                           tblptru	equ	0xFF8
  7113                           tblptrh	equ	0xFF7
  7114                           tblptrl	equ	0xFF6
  7115                           tablat	equ	0xFF5
  7116                           prodh	equ	0xFF4
  7117                           prodl	equ	0xFF3
  7118                           intcon	equ	0xFF2
  7119                           intcon2	equ	0xFF1
  7120                           postinc0	equ	0xFEE
  7121                           fsr0h	equ	0xFEA
  7122                           fsr0l	equ	0xFE9
  7123                           wreg	equ	0xFE8
  7124                           fsr1h	equ	0xFE2
  7125                           fsr1l	equ	0xFE1
  7126                           bsr	equ	0xFE0
  7127                           indf2	equ	0xFDF
  7128                           fsr2h	equ	0xFDA
  7129                           fsr2l	equ	0xFD9
  7130                           status	equ	0xFD8
  7131                           
  7132 ;; *************** function i2___wmul *****************
  7133 ;; Defined at:
  7134 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  multiplier      2   17[COMRAM] unsigned int 
  7137 ;;  multiplicand    2   19[COMRAM] unsigned int 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  __wmul          2   21[COMRAM] unsigned int 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2   17[COMRAM] unsigned int 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0, prodl, prodh
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7149 ;;      Params:         4       0       0       0
  7150 ;;      Locals:         2       0       0       0
  7151 ;;      Temps:          0       0       0       0
  7152 ;;      Totals:         6       0       0       0
  7153 ;;Total ram usage:        6 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_ISR_Alta
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text18
  7163  002518                     __ptext18:
  7164                           	opt stack 0
  7165  002518                     i2___wmul:
  7166                           	opt stack 25
  7167                           
  7168                           ;incstack = 0
  7169  002518  5012               	movf	i2___wmul@multiplier,w,c
  7170  00251A  0214               	mulwf	i2___wmul@multiplicand,c
  7171  00251C  CFF3 F016          	movff	prodl,i2___wmul@product
  7172  002520  CFF4 F017          	movff	prodh,i2___wmul@product+1
  7173  002524  5012               	movf	i2___wmul@multiplier,w,c
  7174  002526  0215               	mulwf	i2___wmul@multiplicand+1,c
  7175  002528  50F3               	movf	prodl,w,c
  7176  00252A  2617               	addwf	i2___wmul@product+1,f,c
  7177  00252C  5013               	movf	i2___wmul@multiplier+1,w,c
  7178  00252E  0214               	mulwf	i2___wmul@multiplicand,c
  7179  002530  50F3               	movf	prodl,w,c
  7180  002532  2617               	addwf	i2___wmul@product+1,f,c
  7181  002534  C016  F012         	movff	i2___wmul@product,?i2___wmul
  7182  002538  C017  F013         	movff	i2___wmul@product+1,?i2___wmul+1
  7183  00253C  0012               	return	
  7184  00253E                     __end_ofi2___wmul:
  7185                           	opt stack 0
  7186                           pclatu	equ	0xFFB
  7187                           pclath	equ	0xFFA
  7188                           tblptru	equ	0xFF8
  7189                           tblptrh	equ	0xFF7
  7190                           tblptrl	equ	0xFF6
  7191                           tablat	equ	0xFF5
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           intcon	equ	0xFF2
  7195                           intcon2	equ	0xFF1
  7196                           postinc0	equ	0xFEE
  7197                           fsr0h	equ	0xFEA
  7198                           fsr0l	equ	0xFE9
  7199                           wreg	equ	0xFE8
  7200                           fsr1h	equ	0xFE2
  7201                           fsr1l	equ	0xFE1
  7202                           bsr	equ	0xFE0
  7203                           indf2	equ	0xFDF
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function i2___awdiv *****************
  7209 ;; Defined at:
  7210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  dividend        2   23[COMRAM] int 
  7213 ;;  divisor         2   25[COMRAM] int 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  __awdiv         2   29[COMRAM] int 
  7216 ;;  __awdiv         1   28[COMRAM] unsigned char 
  7217 ;;  __awdiv         1   27[COMRAM] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  2   23[COMRAM] int 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7227 ;;      Params:         4       0       0       0
  7228 ;;      Locals:         4       0       0       0
  7229 ;;      Temps:          0       0       0       0
  7230 ;;      Totals:         8       0       0       0
  7231 ;;Total ram usage:        8 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_ISR_Alta
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text19
  7241  00230A                     __ptext19:
  7242                           	opt stack 0
  7243  00230A                     i2___awdiv:
  7244                           	opt stack 25
  7245                           
  7246                           ;incstack = 0
  7247  00230A  0E00               	movlw	0
  7248  00230C  6E1D               	movwf	i2___awdiv@sign,c
  7249  00230E  AE1B               	btfss	i2___awdiv@divisor+1,7,c
  7250  002310  D006               	goto	i2l3580
  7251  002312  6C1A               	negf	i2___awdiv@divisor,c
  7252  002314  1E1B               	comf	i2___awdiv@divisor+1,f,c
  7253  002316  B0D8               	btfsc	status,0,c
  7254  002318  2A1B               	incf	i2___awdiv@divisor+1,f,c
  7255  00231A  0E01               	movlw	1
  7256  00231C  6E1D               	movwf	i2___awdiv@sign,c
  7257  00231E                     i2l3580:
  7258  00231E  AE19               	btfss	i2___awdiv@dividend+1,7,c
  7259  002320  D006               	goto	i2l3586
  7260  002322  6C18               	negf	i2___awdiv@dividend,c
  7261  002324  1E19               	comf	i2___awdiv@dividend+1,f,c
  7262  002326  B0D8               	btfsc	status,0,c
  7263  002328  2A19               	incf	i2___awdiv@dividend+1,f,c
  7264  00232A  0E01               	movlw	1
  7265  00232C  1A1D               	xorwf	i2___awdiv@sign,f,c
  7266  00232E                     i2l3586:
  7267  00232E  0E00               	movlw	0
  7268  002330  6E1F               	movwf	i2___awdiv@quotient+1,c
  7269  002332  0E00               	movlw	0
  7270  002334  6E1E               	movwf	i2___awdiv@quotient,c
  7271  002336  501A               	movf	i2___awdiv@divisor,w,c
  7272  002338  101B               	iorwf	i2___awdiv@divisor+1,w,c
  7273  00233A  B4D8               	btfsc	status,2,c
  7274  00233C  D01C               	goto	i2l3608
  7275  00233E  0E01               	movlw	1
  7276  002340  6E1C               	movwf	i2___awdiv@counter,c
  7277  002342  D004               	goto	i2l3594
  7278  002344                     i2l3592:
  7279  002344  90D8               	bcf	status,0,c
  7280  002346  361A               	rlcf	i2___awdiv@divisor,f,c
  7281  002348  361B               	rlcf	i2___awdiv@divisor+1,f,c
  7282  00234A  2A1C               	incf	i2___awdiv@counter,f,c
  7283  00234C                     i2l3594:
  7284  00234C  AE1B               	btfss	i2___awdiv@divisor+1,7,c
  7285  00234E  D7FA               	goto	i2l3592
  7286  002350                     i2l3596:
  7287  002350  90D8               	bcf	status,0,c
  7288  002352  361E               	rlcf	i2___awdiv@quotient,f,c
  7289  002354  361F               	rlcf	i2___awdiv@quotient+1,f,c
  7290  002356  501A               	movf	i2___awdiv@divisor,w,c
  7291  002358  5C18               	subwf	i2___awdiv@dividend,w,c
  7292  00235A  501B               	movf	i2___awdiv@divisor+1,w,c
  7293  00235C  5819               	subwfb	i2___awdiv@dividend+1,w,c
  7294  00235E  A0D8               	btfss	status,0,c
  7295  002360  D005               	goto	i2l3604
  7296  002362  501A               	movf	i2___awdiv@divisor,w,c
  7297  002364  5E18               	subwf	i2___awdiv@dividend,f,c
  7298  002366  501B               	movf	i2___awdiv@divisor+1,w,c
  7299  002368  5A19               	subwfb	i2___awdiv@dividend+1,f,c
  7300  00236A  801E               	bsf	i2___awdiv@quotient,0,c
  7301  00236C                     i2l3604:
  7302  00236C  90D8               	bcf	status,0,c
  7303  00236E  321B               	rrcf	i2___awdiv@divisor+1,f,c
  7304  002370  321A               	rrcf	i2___awdiv@divisor,f,c
  7305  002372  2E1C               	decfsz	i2___awdiv@counter,f,c
  7306  002374  D7ED               	goto	i2l3596
  7307  002376                     i2l3608:
  7308  002376  501D               	movf	i2___awdiv@sign,w,c
  7309  002378  B4D8               	btfsc	status,2,c
  7310  00237A  D004               	goto	i2l3612
  7311  00237C  6C1E               	negf	i2___awdiv@quotient,c
  7312  00237E  1E1F               	comf	i2___awdiv@quotient+1,f,c
  7313  002380  B0D8               	btfsc	status,0,c
  7314  002382  2A1F               	incf	i2___awdiv@quotient+1,f,c
  7315  002384                     i2l3612:
  7316  002384  C01E  F018         	movff	i2___awdiv@quotient,?i2___awdiv
  7317  002388  C01F  F019         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  7318  00238C  0012               	return	
  7319  00238E                     __end_ofi2___awdiv:
  7320                           	opt stack 0
  7321                           pclatu	equ	0xFFB
  7322                           pclath	equ	0xFFA
  7323                           tblptru	equ	0xFF8
  7324                           tblptrh	equ	0xFF7
  7325                           tblptrl	equ	0xFF6
  7326                           tablat	equ	0xFF5
  7327                           prodh	equ	0xFF4
  7328                           prodl	equ	0xFF3
  7329                           intcon	equ	0xFF2
  7330                           intcon2	equ	0xFF1
  7331                           postinc0	equ	0xFEE
  7332                           fsr0h	equ	0xFEA
  7333                           fsr0l	equ	0xFE9
  7334                           wreg	equ	0xFE8
  7335                           fsr1h	equ	0xFE2
  7336                           fsr1l	equ	0xFE1
  7337                           bsr	equ	0xFE0
  7338                           indf2	equ	0xFDF
  7339                           fsr2h	equ	0xFDA
  7340                           fsr2l	equ	0xFD9
  7341                           status	equ	0xFD8
  7342                           
  7343 ;; *************** function _WriteTimer0 *****************
  7344 ;; Defined at:
  7345 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  timer0          2   17[COMRAM] unsigned int 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  timer           2   19[COMRAM] struct Timers
  7350 ;; Return value:  Size  Location     Type
  7351 ;;		None               void
  7352 ;; Registers used:
  7353 ;;		None
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7359 ;;      Params:         2       0       0       0
  7360 ;;      Locals:         2       0       0       0
  7361 ;;      Temps:          0       0       0       0
  7362 ;;      Totals:         4       0       0       0
  7363 ;;Total ram usage:        4 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_ISR_Alta
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text20
  7373  00258E                     __ptext20:
  7374                           	opt stack 0
  7375  00258E                     _WriteTimer0:
  7376                           	opt stack 25
  7377                           
  7378                           ;incstack = 0
  7379  00258E  C012  F014         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7380  002592  C013  F015         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7381  002596  C015  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7382  00259A  C014  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7383  00259E  0012               	return		;funcret
  7384  0025A0                     __end_of_WriteTimer0:
  7385                           	opt stack 0
  7386                           pclatu	equ	0xFFB
  7387                           pclath	equ	0xFFA
  7388                           tblptru	equ	0xFF8
  7389                           tblptrh	equ	0xFF7
  7390                           tblptrl	equ	0xFF6
  7391                           tablat	equ	0xFF5
  7392                           prodh	equ	0xFF4
  7393                           prodl	equ	0xFF3
  7394                           intcon	equ	0xFF2
  7395                           intcon2	equ	0xFF1
  7396                           postinc0	equ	0xFEE
  7397                           fsr0h	equ	0xFEA
  7398                           fsr0l	equ	0xFE9
  7399                           wreg	equ	0xFE8
  7400                           fsr1h	equ	0xFE2
  7401                           fsr1l	equ	0xFE1
  7402                           bsr	equ	0xFE0
  7403                           indf2	equ	0xFDF
  7404                           fsr2h	equ	0xFDA
  7405                           fsr2l	equ	0xFD9
  7406                           status	equ	0xFD8
  7407                           
  7408 ;; *************** function _CANreceiveMessage *****************
  7409 ;; Defined at:
  7410 ;;		line 528 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  msg             2   17[COMRAM] PTR struct .
  7413 ;;		 -> msg(15), 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  tamp            1   28[COMRAM] unsigned char 
  7416 ;;  error           1   27[COMRAM] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      unsigned char 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7426 ;;      Params:         2       0       0       0
  7427 ;;      Locals:         2       0       0       0
  7428 ;;      Temps:          8       0       0       0
  7429 ;;      Totals:        12       0       0       0
  7430 ;;Total ram usage:       12 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_ISR_Alta
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text21
  7440  001358                     __ptext21:
  7441                           	opt stack 0
  7442  001358                     _CANreceiveMessage:
  7443                           	opt stack 25
  7444                           
  7445                           ;inc\CANlib.h: 530: BYTE tamp;
  7446                           ;inc\CANlib.h: 531: BYTE error = 0;
  7447                           
  7448                           ;incstack = 0
  7449  001358  0E00               	movlw	0
  7450  00135A  6E1C               	movwf	CANreceiveMessage@error,c
  7451                           
  7452                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7453  00135C  BE74               	btfsc	3956,7,c	;volatile
  7454                           
  7455                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7456  00135E  801C               	bsf	CANreceiveMessage@error,0,c
  7457                           
  7458                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7459  001360  BC74               	btfsc	3956,6,c	;volatile
  7460                           
  7461                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7462  001362  821C               	bsf	CANreceiveMessage@error,1,c
  7463                           
  7464                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7465  001364  010F               	movlb	15	; () banked
  7466  001366  AF50               	btfss	80,7,b	;volatile
  7467  001368  D143               	goto	i2l412
  7468                           
  7469                           ; BSR set to: 15
  7470                           ;inc\CANlib.h: 541: {
  7471                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7472  00136A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7473  00136E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7474  001372  6ADE               	clrf	postinc2,c
  7475  001374  6ADE               	clrf	postinc2,c
  7476  001376  6ADE               	clrf	postinc2,c
  7477  001378  6ADD               	clrf	postdec2,c
  7478                           
  7479                           ; BSR set to: 15
  7480                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7481  00137A  EE20 F004          	lfsr	2,4
  7482  00137E  5012               	movf	CANreceiveMessage@msg,w,c
  7483  001380  26D9               	addwf	fsr2l,f,c
  7484  001382  5013               	movf	CANreceiveMessage@msg+1,w,c
  7485  001384  22DA               	addwfc	fsr2h,f,c
  7486  001386  CF56 FFDF          	movff	3926,indf2	;volatile
  7487                           
  7488                           ; BSR set to: 15
  7489                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7490  00138A  EE20 F005          	lfsr	2,5
  7491  00138E  5012               	movf	CANreceiveMessage@msg,w,c
  7492  001390  26D9               	addwf	fsr2l,f,c
  7493  001392  5013               	movf	CANreceiveMessage@msg+1,w,c
  7494  001394  22DA               	addwfc	fsr2h,f,c
  7495  001396  CF57 FFDF          	movff	3927,indf2	;volatile
  7496                           
  7497                           ; BSR set to: 15
  7498                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7499  00139A  EE20 F006          	lfsr	2,6
  7500  00139E  5012               	movf	CANreceiveMessage@msg,w,c
  7501  0013A0  26D9               	addwf	fsr2l,f,c
  7502  0013A2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7503  0013A4  22DA               	addwfc	fsr2h,f,c
  7504  0013A6  CF58 FFDF          	movff	3928,indf2	;volatile
  7505                           
  7506                           ; BSR set to: 15
  7507                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7508  0013AA  EE20 F007          	lfsr	2,7
  7509  0013AE  5012               	movf	CANreceiveMessage@msg,w,c
  7510  0013B0  26D9               	addwf	fsr2l,f,c
  7511  0013B2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7512  0013B4  22DA               	addwfc	fsr2h,f,c
  7513  0013B6  CF59 FFDF          	movff	3929,indf2	;volatile
  7514                           
  7515                           ; BSR set to: 15
  7516                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7517  0013BA  EE20 F008          	lfsr	2,8
  7518  0013BE  5012               	movf	CANreceiveMessage@msg,w,c
  7519  0013C0  26D9               	addwf	fsr2l,f,c
  7520  0013C2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7521  0013C4  22DA               	addwfc	fsr2h,f,c
  7522  0013C6  CF5A FFDF          	movff	3930,indf2	;volatile
  7523                           
  7524                           ; BSR set to: 15
  7525                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7526  0013CA  EE20 F009          	lfsr	2,9
  7527  0013CE  5012               	movf	CANreceiveMessage@msg,w,c
  7528  0013D0  26D9               	addwf	fsr2l,f,c
  7529  0013D2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7530  0013D4  22DA               	addwfc	fsr2h,f,c
  7531  0013D6  CF5B FFDF          	movff	3931,indf2	;volatile
  7532                           
  7533                           ; BSR set to: 15
  7534                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7535  0013DA  EE20 F00A          	lfsr	2,10
  7536  0013DE  5012               	movf	CANreceiveMessage@msg,w,c
  7537  0013E0  26D9               	addwf	fsr2l,f,c
  7538  0013E2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7539  0013E4  22DA               	addwfc	fsr2h,f,c
  7540  0013E6  CF5C FFDF          	movff	3932,indf2	;volatile
  7541                           
  7542                           ; BSR set to: 15
  7543                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7544  0013EA  EE20 F00B          	lfsr	2,11
  7545  0013EE  5012               	movf	CANreceiveMessage@msg,w,c
  7546  0013F0  26D9               	addwf	fsr2l,f,c
  7547  0013F2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7548  0013F4  22DA               	addwfc	fsr2h,f,c
  7549  0013F6  CF5D FFDF          	movff	3933,indf2	;volatile
  7550                           
  7551                           ; BSR set to: 15
  7552                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7553  0013FA  EE20 F00E          	lfsr	2,14
  7554  0013FE  5012               	movf	CANreceiveMessage@msg,w,c
  7555  001400  26D9               	addwf	fsr2l,f,c
  7556  001402  5013               	movf	CANreceiveMessage@msg+1,w,c
  7557  001404  22DA               	addwfc	fsr2h,f,c
  7558  001406  010F               	movlb	15	; () banked
  7559  001408  AD55               	btfss	85,6,b	;volatile
  7560  00140A  D002               	goto	i2u361_40
  7561  00140C  0E01               	movlw	1
  7562  00140E  D001               	goto	i2u361_46
  7563  001410                     i2u361_40:
  7564  001410  0E00               	movlw	0
  7565  001412                     i2u361_46:
  7566  001412  6EDF               	movwf	indf2,c
  7567                           
  7568                           ; BSR set to: 15
  7569                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7570  001414  EE20 F00D          	lfsr	2,13
  7571  001418  5012               	movf	CANreceiveMessage@msg,w,c
  7572  00141A  26D9               	addwf	fsr2l,f,c
  7573  00141C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7574  00141E  22DA               	addwfc	fsr2h,f,c
  7575  001420  010F               	movlb	15	; () banked
  7576  001422  5155               	movf	85,w,b	;volatile
  7577  001424  0B0F               	andlw	15
  7578  001426  6EDF               	movwf	indf2,c
  7579                           
  7580                           ; BSR set to: 15
  7581                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7582  001428  EE20 F00C          	lfsr	2,12
  7583  00142C  5012               	movf	CANreceiveMessage@msg,w,c
  7584  00142E  26D9               	addwf	fsr2l,f,c
  7585  001430  5013               	movf	CANreceiveMessage@msg+1,w,c
  7586  001432  22DA               	addwfc	fsr2h,f,c
  7587  001434  010F               	movlb	15	; () banked
  7588  001436  A752               	btfss	82,3,b	;volatile
  7589  001438  D002               	goto	i2u362_40
  7590  00143A  0E01               	movlw	1
  7591  00143C  D001               	goto	i2u362_46
  7592  00143E                     i2u362_40:
  7593  00143E  0E00               	movlw	0
  7594  001440                     i2u362_46:
  7595  001440  6EDF               	movwf	indf2,c
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7599  001442  010F               	movlb	15	; () banked
  7600  001444  B752               	btfsc	82,3,b	;volatile
  7601  001446  D044               	goto	i2l3312
  7602                           
  7603                           ; BSR set to: 15
  7604                           ;inc\CANlib.h: 559: {
  7605                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7606  001448  CF51 F014          	movff	3921,??_CANreceiveMessage	;volatile
  7607  00144C  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7608  00144E  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7609  001450  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7610  001452  0E03               	movlw	3
  7611  001454                     i2u364_45:
  7612  001454  90D8               	bcf	status,0,c
  7613  001456  3614               	rlcf	??_CANreceiveMessage,f,c
  7614  001458  3615               	rlcf	??_CANreceiveMessage+1,f,c
  7615  00145A  3616               	rlcf	??_CANreceiveMessage+2,f,c
  7616  00145C  3617               	rlcf	??_CANreceiveMessage+3,f,c
  7617  00145E  2EE8               	decfsz	wreg,f,c
  7618  001460  D7F9               	goto	i2u364_45
  7619  001462  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7620  001466  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7621  00146A  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  7622  00146E  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7623  001472  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7624  001476  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7625                           
  7626                           ; BSR set to: 15
  7627                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7628  00147A  010F               	movlb	15	; () banked
  7629  00147C  3952               	swapf	82,w,b	;volatile
  7630  00147E  42E8               	rrncf	wreg,f,c
  7631  001480  0B07               	andlw	7
  7632  001482  0B07               	andlw	7
  7633  001484  6E1D               	movwf	CANreceiveMessage@tamp,c
  7634                           
  7635                           ; BSR set to: 15
  7636                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7637  001486  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7638  00148A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7639  00148E  CFDE F014          	movff	postinc2,??_CANreceiveMessage
  7640  001492  CFDE F015          	movff	postinc2,??_CANreceiveMessage+1
  7641  001496  CFDE F016          	movff	postinc2,??_CANreceiveMessage+2
  7642  00149A  CFDE F017          	movff	postinc2,??_CANreceiveMessage+3
  7643  00149E  501D               	movf	CANreceiveMessage@tamp,w,c
  7644  0014A0  2414               	addwf	??_CANreceiveMessage,w,c
  7645  0014A2  6E18               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7646  0014A4  0E00               	movlw	0
  7647  0014A6  2015               	addwfc	??_CANreceiveMessage+1,w,c
  7648  0014A8  6E19               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7649  0014AA  0E00               	movlw	0
  7650  0014AC  2016               	addwfc	??_CANreceiveMessage+2,w,c
  7651  0014AE  6E1A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7652  0014B0  0E00               	movlw	0
  7653  0014B2  2017               	addwfc	??_CANreceiveMessage+3,w,c
  7654  0014B4  6E1B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7655  0014B6  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7656  0014BA  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7657  0014BE  C018  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7658  0014C2  C019  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7659  0014C6  C01A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7660  0014CA  C01B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7661                           
  7662                           ;inc\CANlib.h: 563: }
  7663  0014CE  D08D               	goto	i2l3338
  7664  0014D0                     i2l3312:
  7665                           
  7666                           ; BSR set to: 15
  7667                           ;inc\CANlib.h: 564: else
  7668                           ;inc\CANlib.h: 565: {
  7669                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7670  0014D0  CF54 F014          	movff	3924,??_CANreceiveMessage	;volatile
  7671  0014D4  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7672  0014D6  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7673  0014D8  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7674  0014DA  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7675  0014DE  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7676  0014E2  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  7677  0014E6  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7678  0014EA  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7679  0014EE  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7680                           
  7681                           ; BSR set to: 15
  7682                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7683  0014F2  CF53 F014          	movff	3923,??_CANreceiveMessage	;volatile
  7684  0014F6  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7685  0014F8  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7686  0014FA  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7687  0014FC  C016  F017         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7688  001500  C015  F016         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7689  001504  C014  F015         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7690  001508  6A14               	clrf	??_CANreceiveMessage,c
  7691  00150A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7692  00150E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7693  001512  5014               	movf	??_CANreceiveMessage,w,c
  7694  001514  26DE               	addwf	postinc2,f,c
  7695  001516  5015               	movf	??_CANreceiveMessage+1,w,c
  7696  001518  22DE               	addwfc	postinc2,f,c
  7697  00151A  5016               	movf	??_CANreceiveMessage+2,w,c
  7698  00151C  22DE               	addwfc	postinc2,f,c
  7699  00151E  5017               	movf	??_CANreceiveMessage+3,w,c
  7700  001520  22DE               	addwfc	postinc2,f,c
  7701                           
  7702                           ; BSR set to: 15
  7703                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7704  001522  010F               	movlb	15	; () banked
  7705  001524  A152               	btfss	82,0,b	;volatile
  7706  001526  D00C               	goto	i2l3320
  7707                           
  7708                           ; BSR set to: 15
  7709                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7710  001528  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7711  00152C  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7712  001530  0E00               	movlw	0
  7713  001532  12DE               	iorwf	postinc2,f,c
  7714  001534  0E00               	movlw	0
  7715  001536  12DE               	iorwf	postinc2,f,c
  7716  001538  0E01               	movlw	1
  7717  00153A  12DE               	iorwf	postinc2,f,c
  7718  00153C  0E00               	movlw	0
  7719  00153E  12DE               	iorwf	postinc2,f,c
  7720  001540                     i2l3320:
  7721                           
  7722                           ; BSR set to: 15
  7723                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7724  001540  010F               	movlb	15	; () banked
  7725  001542  A352               	btfss	82,1,b	;volatile
  7726  001544  D00C               	goto	i2l3324
  7727                           
  7728                           ; BSR set to: 15
  7729                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7730  001546  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7731  00154A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7732  00154E  0E00               	movlw	0
  7733  001550  12DE               	iorwf	postinc2,f,c
  7734  001552  0E00               	movlw	0
  7735  001554  12DE               	iorwf	postinc2,f,c
  7736  001556  0E02               	movlw	2
  7737  001558  12DE               	iorwf	postinc2,f,c
  7738  00155A  0E00               	movlw	0
  7739  00155C  12DE               	iorwf	postinc2,f,c
  7740  00155E                     i2l3324:
  7741                           
  7742                           ; BSR set to: 15
  7743                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7744  00155E  010F               	movlb	15	; () banked
  7745  001560  AB52               	btfss	82,5,b	;volatile
  7746  001562  D00C               	goto	i2l3328
  7747                           
  7748                           ; BSR set to: 15
  7749                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7750  001564  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7751  001568  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7752  00156C  0E00               	movlw	0
  7753  00156E  12DE               	iorwf	postinc2,f,c
  7754  001570  0E00               	movlw	0
  7755  001572  12DE               	iorwf	postinc2,f,c
  7756  001574  0E04               	movlw	4
  7757  001576  12DE               	iorwf	postinc2,f,c
  7758  001578  0E00               	movlw	0
  7759  00157A  12DE               	iorwf	postinc2,f,c
  7760  00157C                     i2l3328:
  7761                           
  7762                           ; BSR set to: 15
  7763                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7764  00157C  010F               	movlb	15	; () banked
  7765  00157E  AD52               	btfss	82,6,b	;volatile
  7766  001580  D00C               	goto	i2l3332
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7770  001582  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7771  001586  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7772  00158A  0E00               	movlw	0
  7773  00158C  12DE               	iorwf	postinc2,f,c
  7774  00158E  0E00               	movlw	0
  7775  001590  12DE               	iorwf	postinc2,f,c
  7776  001592  0E08               	movlw	8
  7777  001594  12DE               	iorwf	postinc2,f,c
  7778  001596  0E00               	movlw	0
  7779  001598  12DE               	iorwf	postinc2,f,c
  7780  00159A                     i2l3332:
  7781                           
  7782                           ; BSR set to: 15
  7783                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7784  00159A  010F               	movlb	15	; () banked
  7785  00159C  AF52               	btfss	82,7,b	;volatile
  7786  00159E  D00C               	goto	i2l3336
  7787                           
  7788                           ; BSR set to: 15
  7789                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7790  0015A0  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7791  0015A4  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7792  0015A8  0E00               	movlw	0
  7793  0015AA  12DE               	iorwf	postinc2,f,c
  7794  0015AC  0E00               	movlw	0
  7795  0015AE  12DE               	iorwf	postinc2,f,c
  7796  0015B0  0E10               	movlw	16
  7797  0015B2  12DE               	iorwf	postinc2,f,c
  7798  0015B4  0E00               	movlw	0
  7799  0015B6  12DE               	iorwf	postinc2,f,c
  7800  0015B8                     i2l3336:
  7801                           
  7802                           ; BSR set to: 15
  7803                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7804  0015B8  CF51 F014          	movff	3921,??_CANreceiveMessage	;volatile
  7805  0015BC  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7806  0015BE  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7807  0015C0  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7808  0015C2  0E15               	movlw	21
  7809  0015C4                     i2u370_45:
  7810  0015C4  90D8               	bcf	status,0,c
  7811  0015C6  3614               	rlcf	??_CANreceiveMessage,f,c
  7812  0015C8  3615               	rlcf	??_CANreceiveMessage+1,f,c
  7813  0015CA  3616               	rlcf	??_CANreceiveMessage+2,f,c
  7814  0015CC  3617               	rlcf	??_CANreceiveMessage+3,f,c
  7815  0015CE  2EE8               	decfsz	wreg,f,c
  7816  0015D0  D7F9               	goto	i2u370_45
  7817  0015D2  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7818  0015D6  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7819  0015DA  5014               	movf	??_CANreceiveMessage,w,c
  7820  0015DC  12DE               	iorwf	postinc2,f,c
  7821  0015DE  5015               	movf	??_CANreceiveMessage+1,w,c
  7822  0015E0  12DE               	iorwf	postinc2,f,c
  7823  0015E2  5016               	movf	??_CANreceiveMessage+2,w,c
  7824  0015E4  12DE               	iorwf	postinc2,f,c
  7825  0015E6  5017               	movf	??_CANreceiveMessage+3,w,c
  7826  0015E8  12DE               	iorwf	postinc2,f,c
  7827  0015EA                     i2l3338:
  7828                           
  7829                           ; BSR set to: 15
  7830                           ;inc\CANlib.h: 581: }
  7831                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7832  0015EA  010F               	movlb	15	; () banked
  7833  0015EC  9F50               	bcf	80,7,b	;volatile
  7834                           
  7835                           ; BSR set to: 15
  7836                           ;inc\CANlib.h: 584: return (error);
  7837                           ;	Return value of _CANreceiveMessage is never used
  7838  0015EE  0012               	return	
  7839  0015F0                     i2l412:
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;inc\CANlib.h: 585: }
  7843                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7844  0015F0  AE60               	btfss	3936,7,c	;volatile
  7845  0015F2  0012               	return	
  7846                           
  7847                           ; BSR set to: 15
  7848                           ;inc\CANlib.h: 588: {
  7849                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7850  0015F4  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7851  0015F8  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7852  0015FC  6ADE               	clrf	postinc2,c
  7853  0015FE  6ADE               	clrf	postinc2,c
  7854  001600  6ADE               	clrf	postinc2,c
  7855  001602  6ADD               	clrf	postdec2,c
  7856                           
  7857                           ; BSR set to: 15
  7858                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7859  001604  EE20 F004          	lfsr	2,4
  7860  001608  5012               	movf	CANreceiveMessage@msg,w,c
  7861  00160A  26D9               	addwf	fsr2l,f,c
  7862  00160C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7863  00160E  22DA               	addwfc	fsr2h,f,c
  7864  001610  CF66 FFDF          	movff	3942,indf2	;volatile
  7865                           
  7866                           ; BSR set to: 15
  7867                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7868  001614  EE20 F005          	lfsr	2,5
  7869  001618  5012               	movf	CANreceiveMessage@msg,w,c
  7870  00161A  26D9               	addwf	fsr2l,f,c
  7871  00161C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7872  00161E  22DA               	addwfc	fsr2h,f,c
  7873  001620  CF67 FFDF          	movff	3943,indf2	;volatile
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7877  001624  EE20 F006          	lfsr	2,6
  7878  001628  5012               	movf	CANreceiveMessage@msg,w,c
  7879  00162A  26D9               	addwf	fsr2l,f,c
  7880  00162C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7881  00162E  22DA               	addwfc	fsr2h,f,c
  7882  001630  CF68 FFDF          	movff	3944,indf2	;volatile
  7883                           
  7884                           ; BSR set to: 15
  7885                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7886  001634  EE20 F007          	lfsr	2,7
  7887  001638  5012               	movf	CANreceiveMessage@msg,w,c
  7888  00163A  26D9               	addwf	fsr2l,f,c
  7889  00163C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7890  00163E  22DA               	addwfc	fsr2h,f,c
  7891  001640  CF69 FFDF          	movff	3945,indf2	;volatile
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7895  001644  EE20 F008          	lfsr	2,8
  7896  001648  5012               	movf	CANreceiveMessage@msg,w,c
  7897  00164A  26D9               	addwf	fsr2l,f,c
  7898  00164C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7899  00164E  22DA               	addwfc	fsr2h,f,c
  7900  001650  CF6A FFDF          	movff	3946,indf2	;volatile
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7904  001654  EE20 F009          	lfsr	2,9
  7905  001658  5012               	movf	CANreceiveMessage@msg,w,c
  7906  00165A  26D9               	addwf	fsr2l,f,c
  7907  00165C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7908  00165E  22DA               	addwfc	fsr2h,f,c
  7909  001660  CF6B FFDF          	movff	3947,indf2	;volatile
  7910                           
  7911                           ; BSR set to: 15
  7912                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7913  001664  EE20 F00A          	lfsr	2,10
  7914  001668  5012               	movf	CANreceiveMessage@msg,w,c
  7915  00166A  26D9               	addwf	fsr2l,f,c
  7916  00166C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7917  00166E  22DA               	addwfc	fsr2h,f,c
  7918  001670  CF6C FFDF          	movff	3948,indf2	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7922  001674  EE20 F00B          	lfsr	2,11
  7923  001678  5012               	movf	CANreceiveMessage@msg,w,c
  7924  00167A  26D9               	addwf	fsr2l,f,c
  7925  00167C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7926  00167E  22DA               	addwfc	fsr2h,f,c
  7927  001680  CF6D FFDF          	movff	3949,indf2	;volatile
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7931  001684  EE20 F00E          	lfsr	2,14
  7932  001688  5012               	movf	CANreceiveMessage@msg,w,c
  7933  00168A  26D9               	addwf	fsr2l,f,c
  7934  00168C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7935  00168E  22DA               	addwfc	fsr2h,f,c
  7936  001690  AC65               	btfss	3941,6,c	;volatile
  7937  001692  D002               	goto	i2u372_40
  7938  001694  0E01               	movlw	1
  7939  001696  D001               	goto	i2u372_46
  7940  001698                     i2u372_40:
  7941  001698  0E00               	movlw	0
  7942  00169A                     i2u372_46:
  7943  00169A  6EDF               	movwf	indf2,c
  7944                           
  7945                           ; BSR set to: 15
  7946                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7947  00169C  EE20 F00D          	lfsr	2,13
  7948  0016A0  5012               	movf	CANreceiveMessage@msg,w,c
  7949  0016A2  26D9               	addwf	fsr2l,f,c
  7950  0016A4  5013               	movf	CANreceiveMessage@msg+1,w,c
  7951  0016A6  22DA               	addwfc	fsr2h,f,c
  7952  0016A8  5065               	movf	3941,w,c	;volatile
  7953  0016AA  0B0F               	andlw	15
  7954  0016AC  6EDF               	movwf	indf2,c
  7955                           
  7956                           ; BSR set to: 15
  7957                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7958  0016AE  EE20 F00C          	lfsr	2,12
  7959  0016B2  5012               	movf	CANreceiveMessage@msg,w,c
  7960  0016B4  26D9               	addwf	fsr2l,f,c
  7961  0016B6  5013               	movf	CANreceiveMessage@msg+1,w,c
  7962  0016B8  22DA               	addwfc	fsr2h,f,c
  7963  0016BA  A662               	btfss	3938,3,c	;volatile
  7964  0016BC  D002               	goto	i2u373_40
  7965  0016BE  0E01               	movlw	1
  7966  0016C0  D001               	goto	i2u373_46
  7967  0016C2                     i2u373_40:
  7968  0016C2  0E00               	movlw	0
  7969  0016C4                     i2u373_46:
  7970  0016C4  6EDF               	movwf	indf2,c
  7971                           
  7972                           ; BSR set to: 15
  7973                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7974  0016C6  B662               	btfsc	3938,3,c	;volatile
  7975  0016C8  D043               	goto	i2l3374
  7976                           
  7977                           ; BSR set to: 15
  7978                           ;inc\CANlib.h: 606: {
  7979                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7980  0016CA  CF61 F014          	movff	3937,??_CANreceiveMessage	;volatile
  7981  0016CE  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7982  0016D0  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7983  0016D2  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7984  0016D4  0E03               	movlw	3
  7985  0016D6                     i2u375_45:
  7986  0016D6  90D8               	bcf	status,0,c
  7987  0016D8  3614               	rlcf	??_CANreceiveMessage,f,c
  7988  0016DA  3615               	rlcf	??_CANreceiveMessage+1,f,c
  7989  0016DC  3616               	rlcf	??_CANreceiveMessage+2,f,c
  7990  0016DE  3617               	rlcf	??_CANreceiveMessage+3,f,c
  7991  0016E0  2EE8               	decfsz	wreg,f,c
  7992  0016E2  D7F9               	goto	i2u375_45
  7993  0016E4  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7994  0016E8  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7995  0016EC  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  7996  0016F0  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7997  0016F4  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7998  0016F8  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7999                           
  8000                           ; BSR set to: 15
  8001                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8002  0016FC  3862               	swapf	3938,w,c	;volatile
  8003  0016FE  42E8               	rrncf	wreg,f,c
  8004  001700  0B07               	andlw	7
  8005  001702  0B07               	andlw	7
  8006  001704  6E1D               	movwf	CANreceiveMessage@tamp,c
  8007                           
  8008                           ; BSR set to: 15
  8009                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8010  001706  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8011  00170A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8012  00170E  CFDE F014          	movff	postinc2,??_CANreceiveMessage
  8013  001712  CFDE F015          	movff	postinc2,??_CANreceiveMessage+1
  8014  001716  CFDE F016          	movff	postinc2,??_CANreceiveMessage+2
  8015  00171A  CFDE F017          	movff	postinc2,??_CANreceiveMessage+3
  8016  00171E  501D               	movf	CANreceiveMessage@tamp,w,c
  8017  001720  2414               	addwf	??_CANreceiveMessage,w,c
  8018  001722  6E18               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8019  001724  0E00               	movlw	0
  8020  001726  2015               	addwfc	??_CANreceiveMessage+1,w,c
  8021  001728  6E19               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8022  00172A  0E00               	movlw	0
  8023  00172C  2016               	addwfc	??_CANreceiveMessage+2,w,c
  8024  00172E  6E1A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8025  001730  0E00               	movlw	0
  8026  001732  2017               	addwfc	??_CANreceiveMessage+3,w,c
  8027  001734  6E1B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8028  001736  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8029  00173A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8030  00173E  C018  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8031  001742  C019  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8032  001746  C01A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8033  00174A  C01B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8034                           
  8035                           ;inc\CANlib.h: 610: }
  8036  00174E  D088               	goto	i2l3400
  8037  001750                     i2l3374:
  8038                           
  8039                           ; BSR set to: 15
  8040                           ;inc\CANlib.h: 611: else
  8041                           ;inc\CANlib.h: 612: {
  8042                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8043  001750  CF64 F014          	movff	3940,??_CANreceiveMessage	;volatile
  8044  001754  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8045  001756  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8046  001758  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8047  00175A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8048  00175E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8049  001762  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  8050  001766  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8051  00176A  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8052  00176E  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8053                           
  8054                           ; BSR set to: 15
  8055                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8056  001772  CF63 F014          	movff	3939,??_CANreceiveMessage	;volatile
  8057  001776  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8058  001778  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8059  00177A  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8060  00177C  C016  F017         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8061  001780  C015  F016         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8062  001784  C014  F015         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8063  001788  6A14               	clrf	??_CANreceiveMessage,c
  8064  00178A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8065  00178E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8066  001792  5014               	movf	??_CANreceiveMessage,w,c
  8067  001794  26DE               	addwf	postinc2,f,c
  8068  001796  5015               	movf	??_CANreceiveMessage+1,w,c
  8069  001798  22DE               	addwfc	postinc2,f,c
  8070  00179A  5016               	movf	??_CANreceiveMessage+2,w,c
  8071  00179C  22DE               	addwfc	postinc2,f,c
  8072  00179E  5017               	movf	??_CANreceiveMessage+3,w,c
  8073  0017A0  22DE               	addwfc	postinc2,f,c
  8074                           
  8075                           ; BSR set to: 15
  8076                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8077  0017A2  A062               	btfss	3938,0,c	;volatile
  8078  0017A4  D00C               	goto	i2l3382
  8079                           
  8080                           ; BSR set to: 15
  8081                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8082  0017A6  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8083  0017AA  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8084  0017AE  0E00               	movlw	0
  8085  0017B0  12DE               	iorwf	postinc2,f,c
  8086  0017B2  0E00               	movlw	0
  8087  0017B4  12DE               	iorwf	postinc2,f,c
  8088  0017B6  0E01               	movlw	1
  8089  0017B8  12DE               	iorwf	postinc2,f,c
  8090  0017BA  0E00               	movlw	0
  8091  0017BC  12DE               	iorwf	postinc2,f,c
  8092  0017BE                     i2l3382:
  8093                           
  8094                           ; BSR set to: 15
  8095                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8096  0017BE  A262               	btfss	3938,1,c	;volatile
  8097  0017C0  D00C               	goto	i2l3386
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8101  0017C2  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8102  0017C6  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8103  0017CA  0E00               	movlw	0
  8104  0017CC  12DE               	iorwf	postinc2,f,c
  8105  0017CE  0E00               	movlw	0
  8106  0017D0  12DE               	iorwf	postinc2,f,c
  8107  0017D2  0E02               	movlw	2
  8108  0017D4  12DE               	iorwf	postinc2,f,c
  8109  0017D6  0E00               	movlw	0
  8110  0017D8  12DE               	iorwf	postinc2,f,c
  8111  0017DA                     i2l3386:
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8115  0017DA  AA62               	btfss	3938,5,c	;volatile
  8116  0017DC  D00C               	goto	i2l3390
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8120  0017DE  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8121  0017E2  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8122  0017E6  0E00               	movlw	0
  8123  0017E8  12DE               	iorwf	postinc2,f,c
  8124  0017EA  0E00               	movlw	0
  8125  0017EC  12DE               	iorwf	postinc2,f,c
  8126  0017EE  0E04               	movlw	4
  8127  0017F0  12DE               	iorwf	postinc2,f,c
  8128  0017F2  0E00               	movlw	0
  8129  0017F4  12DE               	iorwf	postinc2,f,c
  8130  0017F6                     i2l3390:
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8134  0017F6  AC62               	btfss	3938,6,c	;volatile
  8135  0017F8  D00C               	goto	i2l3394
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8139  0017FA  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8140  0017FE  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8141  001802  0E00               	movlw	0
  8142  001804  12DE               	iorwf	postinc2,f,c
  8143  001806  0E00               	movlw	0
  8144  001808  12DE               	iorwf	postinc2,f,c
  8145  00180A  0E08               	movlw	8
  8146  00180C  12DE               	iorwf	postinc2,f,c
  8147  00180E  0E00               	movlw	0
  8148  001810  12DE               	iorwf	postinc2,f,c
  8149  001812                     i2l3394:
  8150                           
  8151                           ; BSR set to: 15
  8152                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8153  001812  AE62               	btfss	3938,7,c	;volatile
  8154  001814  D00C               	goto	i2l3398
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8158  001816  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8159  00181A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8160  00181E  0E00               	movlw	0
  8161  001820  12DE               	iorwf	postinc2,f,c
  8162  001822  0E00               	movlw	0
  8163  001824  12DE               	iorwf	postinc2,f,c
  8164  001826  0E10               	movlw	16
  8165  001828  12DE               	iorwf	postinc2,f,c
  8166  00182A  0E00               	movlw	0
  8167  00182C  12DE               	iorwf	postinc2,f,c
  8168  00182E                     i2l3398:
  8169                           
  8170                           ; BSR set to: 15
  8171                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8172  00182E  CF61 F014          	movff	3937,??_CANreceiveMessage	;volatile
  8173  001832  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8174  001834  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8175  001836  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8176  001838  0E15               	movlw	21
  8177  00183A                     i2u381_45:
  8178  00183A  90D8               	bcf	status,0,c
  8179  00183C  3614               	rlcf	??_CANreceiveMessage,f,c
  8180  00183E  3615               	rlcf	??_CANreceiveMessage+1,f,c
  8181  001840  3616               	rlcf	??_CANreceiveMessage+2,f,c
  8182  001842  3617               	rlcf	??_CANreceiveMessage+3,f,c
  8183  001844  2EE8               	decfsz	wreg,f,c
  8184  001846  D7F9               	goto	i2u381_45
  8185  001848  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8186  00184C  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8187  001850  5014               	movf	??_CANreceiveMessage,w,c
  8188  001852  12DE               	iorwf	postinc2,f,c
  8189  001854  5015               	movf	??_CANreceiveMessage+1,w,c
  8190  001856  12DE               	iorwf	postinc2,f,c
  8191  001858  5016               	movf	??_CANreceiveMessage+2,w,c
  8192  00185A  12DE               	iorwf	postinc2,f,c
  8193  00185C  5017               	movf	??_CANreceiveMessage+3,w,c
  8194  00185E  12DE               	iorwf	postinc2,f,c
  8195  001860                     i2l3400:
  8196                           
  8197                           ; BSR set to: 15
  8198                           ;inc\CANlib.h: 629: }
  8199                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8200  001860  9E60               	bcf	3936,7,c	;volatile
  8201                           
  8202                           ; BSR set to: 15
  8203                           ;inc\CANlib.h: 632: return (error);
  8204                           ;	Return value of _CANreceiveMessage is never used
  8205  001862  0012               	return	
  8206  001864                     __end_of_CANreceiveMessage:
  8207                           	opt stack 0
  8208                           pclatu	equ	0xFFB
  8209                           pclath	equ	0xFFA
  8210                           tblptru	equ	0xFF8
  8211                           tblptrh	equ	0xFF7
  8212                           tblptrl	equ	0xFF6
  8213                           tablat	equ	0xFF5
  8214                           prodh	equ	0xFF4
  8215                           prodl	equ	0xFF3
  8216                           intcon	equ	0xFF2
  8217                           intcon2	equ	0xFF1
  8218                           postinc0	equ	0xFEE
  8219                           fsr0h	equ	0xFEA
  8220                           fsr0l	equ	0xFE9
  8221                           wreg	equ	0xFE8
  8222                           fsr1h	equ	0xFE2
  8223                           fsr1l	equ	0xFE1
  8224                           bsr	equ	0xFE0
  8225                           indf2	equ	0xFDF
  8226                           postinc2	equ	0xFDE
  8227                           postdec2	equ	0xFDD
  8228                           fsr2h	equ	0xFDA
  8229                           fsr2l	equ	0xFD9
  8230                           status	equ	0xFD8
  8231                           
  8232 ;; *************** function _CANisRxReady *****************
  8233 ;; Defined at:
  8234 ;;		line 1163 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      unsigned char 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8248 ;;      Params:         0       0       0       0
  8249 ;;      Locals:         1       0       0       0
  8250 ;;      Temps:          0       0       0       0
  8251 ;;      Totals:         1       0       0       0
  8252 ;;Total ram usage:        1 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_ISR_Alta
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text22
  8262  002578                     __ptext22:
  8263                           	opt stack 0
  8264  002578                     _CANisRxReady:
  8265                           	opt stack 25
  8266                           
  8267                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;incstack = 0
  8271  002578  0E01               	movlw	1
  8272  00257A  6E12               	movwf	_CANisRxReady$2970,c
  8273  00257C  BE60               	btfsc	3936,7,c	;volatile
  8274  00257E  D005               	goto	i2l563
  8275  002580  010F               	movlb	15	; () banked
  8276  002582  BF50               	btfsc	80,7,b	;volatile
  8277  002584  D002               	goto	i2l563
  8278                           
  8279                           ; BSR set to: 15
  8280  002586  0E00               	movlw	0
  8281  002588  6E12               	movwf	_CANisRxReady$2970,c
  8282  00258A                     i2l563:
  8283  00258A  5012               	movf	_CANisRxReady$2970,w,c
  8284  00258C  0012               	return	
  8285  00258E                     __end_of_CANisRxReady:
  8286                           	opt stack 0
  8287  0000                     pclatu	equ	0xFFB
  8288                           pclath	equ	0xFFA
  8289                           tblptru	equ	0xFF8
  8290                           tblptrh	equ	0xFF7
  8291                           tblptrl	equ	0xFF6
  8292                           tablat	equ	0xFF5
  8293                           prodh	equ	0xFF4
  8294                           prodl	equ	0xFF3
  8295                           intcon	equ	0xFF2
  8296                           intcon2	equ	0xFF1
  8297                           postinc0	equ	0xFEE
  8298                           fsr0h	equ	0xFEA
  8299                           fsr0l	equ	0xFE9
  8300                           wreg	equ	0xFE8
  8301                           fsr1h	equ	0xFE2
  8302                           fsr1l	equ	0xFE1
  8303                           bsr	equ	0xFE0
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           pclatu	equ	0xFFB
  8311                           pclath	equ	0xFFA
  8312                           tblptru	equ	0xFF8
  8313                           tblptrh	equ	0xFF7
  8314                           tblptrl	equ	0xFF6
  8315                           tablat	equ	0xFF5
  8316                           prodh	equ	0xFF4
  8317                           prodl	equ	0xFF3
  8318                           intcon	equ	0xFF2
  8319                           intcon2	equ	0xFF1
  8320                           postinc0	equ	0xFEE
  8321                           fsr0h	equ	0xFEA
  8322                           fsr0l	equ	0xFE9
  8323                           wreg	equ	0xFE8
  8324                           fsr1h	equ	0xFE2
  8325                           fsr1l	equ	0xFE1
  8326                           bsr	equ	0xFE0
  8327                           indf2	equ	0xFDF
  8328                           postinc2	equ	0xFDE
  8329                           postdec2	equ	0xFDD
  8330                           fsr2h	equ	0xFDA
  8331                           fsr2l	equ	0xFD9
  8332                           status	equ	0xFD8
  8333                           
  8334                           	psect	rparam
  8335  0000                     pclatu	equ	0xFFB
  8336                           pclath	equ	0xFFA
  8337                           tblptru	equ	0xFF8
  8338                           tblptrh	equ	0xFF7
  8339                           tblptrl	equ	0xFF6
  8340                           tablat	equ	0xFF5
  8341                           prodh	equ	0xFF4
  8342                           prodl	equ	0xFF3
  8343                           intcon	equ	0xFF2
  8344                           intcon2	equ	0xFF1
  8345                           postinc0	equ	0xFEE
  8346                           fsr0h	equ	0xFEA
  8347                           fsr0l	equ	0xFE9
  8348                           wreg	equ	0xFE8
  8349                           fsr1h	equ	0xFE2
  8350                           fsr1l	equ	0xFE1
  8351                           bsr	equ	0xFE0
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           fsr2h	equ	0xFDA
  8356                           fsr2l	equ	0xFD9
  8357                           status	equ	0xFD8
  8358                           
  8359                           	psect	temp
  8360  00004B                     btemp:
  8361                           	opt stack 0
  8362  00004B                     	ds	1
  8363  0000                     int$flags	set	btemp
  8364                           pclatu	equ	0xFFB
  8365                           pclath	equ	0xFFA
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           intcon2	equ	0xFF1
  8374                           postinc0	equ	0xFEE
  8375                           fsr0h	equ	0xFEA
  8376                           fsr0l	equ	0xFE9
  8377                           wreg	equ	0xFE8
  8378                           fsr1h	equ	0xFE2
  8379                           fsr1l	equ	0xFE1
  8380                           bsr	equ	0xFE0
  8381                           indf2	equ	0xFDF
  8382                           postinc2	equ	0xFDE
  8383                           postdec2	equ	0xFDD
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      74
    BANK0           160     38      75
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> status_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _status_ok->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___lwdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   10174
                                             26 BANK0     12    12      0
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
               _board_initialization
                          _status_ok
 ---------------------------------------------------------------------------------
 (1) _status_ok                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6449
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     515
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     365
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1016
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     2      0     290
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_Alta                                            18    18      0    1918
                                             31 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                        _WriteTimer0
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     209
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) i2___awdiv                                            8     4      4     352
                                             23 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _WriteTimer0                                          4     2      2     196
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _CANreceiveMessage                                   12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (6) _CANisRxReady                                         1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___lwdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _status_ok
     _CANisTxReady
     _CANsendMessage

 _ISR_Bassa (ROOT)

 _ISR_Alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     26      4B       4       46.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     31      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95       9        0.0%
DATA                 0      0      95      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 06 16:53:34 2015

           ??_CANisTXwarningON 0060                              _i 009D           __end_of_CANSetFilter 0BCC  
                 ___awdiv@sign 0065                             _id 008E                             bsr 000FE0  
          ___wmul@multiplicand 0062                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                    __CFG_LVP$ON 000000  
                          l400 118A                            l401 1194                            l500 0918  
                          l404 12A4                            l501 091C                            l405 12A8  
                          l510 0A28                            l502 0928                            l406 12B4  
                          l511 0A34                            l503 092C                            l520 0B40  
                          l512 0A38                            l504 0938                            l440 1A8E  
                          l360 1CBE                            l521 0B44                            l513 0A44  
                          l505 093C                            l441 1A92                            l361 1CC8  
                          l522 0B50                            l514 0A48                            l506 0948  
                          l450 1B9A                            l442 1A9E                            l434 1A5E  
                          l370 0C78                            l523 0B54                            l515 0A54  
                          l451 1BA6                            l435 1A62                            l371 0C82  
                          l524 0B60                            l516 0A58                            l452 1BAA  
                          l436 1A6E                            l380 10D4                            l372 0C8C  
                          l525 0B64                            l517 0A64                            l509 0A24  
                          l453 1BB6                            l445 1B76                            l437 1A72  
                          l381 0E66                            l365 0E50                            l526 0B70  
                          l470 05DA                            l446 1B7A                            l438 1A7E  
                          l390 1020                            l382 0E6A                            l366 0BE2  
                          l527 0B74                            l471 05E6                            l447 1B86  
                          l439 1A82                            l391 1024                            l383 0F62  
                          l375 0D9C                            l367 0BE6                            l528 0B80  
                          l480 06F0                            l472 05EA                            l448 1B8A  
                          l392 1030                            l384 0EF2                            l376 0DA0  
                          l368 0CDE                            l481 06F4                            l473 05F6  
                          l465 05B6                            l449 1B96                            l385 0EFC  
                          l377 0DAC                            l369 0C6E                            l490 0800  
                          l482 0700                            l466 05BA                            l386 0F06  
                          l650 1FAC                            l491 080C                            l483 0704  
                          l467 05C6                            l571 24D4                            l395 10EA  
                          l387 0F10                            l492 0810                            l484 0710  
                          l476 06D0                            l468 05CA                            l396 10EE  
                          l660 2462                            l493 081C                            l477 06D4  
                          l469 05D6                            l397 11E6                            l494 0820  
                          l478 06E0                            l558 255C                            l398 1176  
                          l671 228E                            l495 082C                            l487 07EC  
                          l479 06E4                            l399 1180                            l672 2290  
                          l488 07F0                            l489 07FC                            l498 0908  
                          l666 2464                            l499 090C                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012                            _msg 003A  
                          wreg 000FE8                   __CFG_WDT$OFF 000000                           l3030 0C96  
                         l1089 23FC                           l3202 1298                           l3106 0F1A  
                         l3050 0D90                           l3132 1034                           l3126 1014  
                         l3208 12B8                           l3056 0DB0                           l2530 256A  
                         l3242 24C6                           l3252 23AC                           l2700 03B0  
                         l3254 23B8                           l2622 1BBA                           l3182 119E  
                         l3264 23EE                           l3256 23BE                           l3506 22B2  
                         l3530 2140                           l2900 0A68                           l2804 075A  
                         l2564 19D2                           l2548 191C                           l3542 2174  
                         l2718 046A                           l2646 0184                           l2590 1AA2  
                         l3710 210E                           l3544 2180                           l3536 2156  
                         l2832 0830                           l2736 0524                           l2664 023C  
                         l3562 21D8                           l3554 21B6                           l3546 2186  
                         l2906 0AAE                           l2770 0640                           l2682 02F6  
                         l2764 05FA                           l2596 1AE8                           l3558 21C4  
                         l2934 0B84                           l2838 0876                           l2872 0992  
                         l2866 094C                           l3684 1F9A                           l2798 0714  
                         l2990 1CD4                           l3678 1F8E                           l2992 1D18  
                         l2984 1CB6                           l2986 1CCC                           u2140 1898  
                         _LATA 000F89                           _LATB 000F8A                           _LATC 000F8B  
                         u3200 0CB6                           _LATD 000F8C                           u2145 188C  
                         _LATE 000F8D                           u3210 0D02                           u2155 18F8  
                         u2500 032C                           u2420 01B8                           u2180 194E  
                         u3205 0CAA                           u3070 0BA4                           u2350 1BDA  
                         u2270 1AC2                           u3215 0CF6                           u4200 20AC  
                         u2505 0320                           u2425 01AC                           u2185 1942  
                         u3225 0D62                           u3330 0F3A                           u3075 0B98  
                         u2515 038C                           u2435 0218                           u2355 1BCE  
                         u2275 1AB6                           u2195 19AE                           u2540 03E6  
                         u2460 0272                           u2380 0100                           u3340 0F86  
                         u3335 0F2E                           u2545 03DA                           u2465 0266  
                         u2385 00F4                           u4217 24C8                           u3345 0F7A  
                         u2555 0446                           u2475 02D2                           u2395 0160  
                         u3355 0FE6                           u2580 04A0                           u3460 11BE  
                         u2910 096C                           u2830 0850                           u2750 0734  
                         u2670 061A                           u3470 120A                           u2585 0494  
                         u3465 11B2                           u2915 0960                           u2835 0844  
                         u2755 0728                           u2675 060E                           u2595 0500  
                         u3475 11FE                           u3820 25A8                           u3485 126A  
                         u3830 25B4                           u2990 0A88                           u2995 0A7C  
          __size_of_CANSetMask 039E                           _main 1F7E                           _read 009E  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 004B               __end_of_ADC_Read 230A  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 00C2                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 2562                   _status_array 00A0  
              _brake_value_inc 009B     __size_of_CANreceiveMessage 050C                          ?_main 0001  
              __end_of___awdiv 21E2                          _T0CON 000FD5                ___awdiv@divisor 0062  
                        _T3CON 000FB1             __size_of_ISR_Bassa 00AA                __end_of___lwdiv 2406  
                        i1l643 007A                          i2l412 15F0                          i2l630 1E44  
                        i2l633 1E40                          i2l563 258A                          i2l639 1F42  
              ___awdiv@counter 0064                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR3L 000FB2                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96              _CANisRxReady$2970 0012                  __CFG_PWRT$OFF 000000  
             __end_of_ISR_Alta 1F7E                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
           CANInitialize@flags 0072                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0250  
         __end_of_CANisRxReady 258E                          tablat 000FF5           __end_of_CANisTxReady 2562  
             __end_ofi2___wmul 253E                          status 000FD8             __size_ofi2___awdiv 0084  
               __CFG_PBADEN$ON 000000                __initialization 2468                   __end_of_main 2124  
__size_of_board_initialization 00A4               _brake_signal_CAN 009A                         ??_main 007A  
                __activetblptr 000002              _CANisTxReady$2968 0060                         _ADCON1 000FC1  
                       _CANCON 000F6F                         _ADRESH 000FC4               ___awdiv@dividend 0060  
              __CFG_BBSIZ$1024 000000                         i2l3400 1860                         i2l3320 1540  
                       i2l3312 14D0                         i2l3332 159A                         i2l3324 155E  
                       i2l3336 15B8                         i2l3328 157C                         i2l3338 15EA  
                       i2l3612 2384                         i2l3604 236C                         i2l3390 17F6  
                       i2l3382 17BE                         i2l3374 1750                         i2l3630 1E02  
                       i2l3608 2376                         i2l3394 1812                         i2l3386 17DA  
                       i2l3580 231E                         i2l3398 182E                         i2l3654 1F34  
                       i2l3638 1E30                         i2l3592 2344                         i2l3656 1F40  
                       i2l3594 234C                         i2l3586 232E                         i2l3596 2350  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 0064             CANsendMessage@tamp 006C  
            __end_of_ISR_Bassa 00C2               __end_of_delay_ms 24E2          __size_of_CANSetFilter 0B06  
               __CFG_XINST$OFF 000000                         ___wmul 24E2                      ??___awdiv 0064  
               __CFG_STVREN$ON 000000                      ??___lwdiv 0064                   ??_CANSetMask 0065  
                       clear_0 246E                         clear_1 247C               ___awdiv@quotient 0066  
               i2___awdiv@sign 001D                __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 238E  
                    ?_ADC_Read 0001                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 009C                   _CANSetFilter 00C6  
                   __accesstop 0060        __end_of__initialization 249A             __end_of_CANSetMask 1C02  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001  
                    ?_ISR_Alta 0001                   __pidataBANK0 25B8          CANSetFilter@numBuffer 0069  
                    ?i2___wmul 0012      __size_of_CANisTXwarningON 000C                     ??_ADC_Read 0067  
        __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024       __end_of_CANOperationMode 2578  
                   __pbssBANK0 0086        __size_of_CANsendMessage 078C                     ??_ISR_Alta 0020  
                      ?___wmul 0060               WriteTimer0@timer 0014                  ??_WriteTimer0 0014  
                 _CANisRxReady 2578                        _CANSTAT 000F6E                   _CANisTxReady 253E  
                      _BRGCON1 000F70                        _BRGCON2 000F71                        _BRGCON3 000F72  
                   ??i2___wmul 0016         __size_of_CANInitialize 01C6                      ?_delay_ms 0066  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25            CANsendMessage@flags 0067             __size_of_status_ok 0062  
                      __Hparam 0000                        __Lparam 0000               delay_ms@value_ms 0066  
                      ___awdiv 2124                __size_of___wmul 0036                        ___lwdiv 238E  
         CANInitialize@propSeg 0077                        __pcinit 2468                        __ramtop 0300  
                      __ptext0 1F7E                        __ptext1 2406                        __ptext2 0BCC  
                      __ptext3 253E                        __ptext4 21E2                        __ptext5 24A8  
                      __ptext6 24E2                        __ptext7 1C02                        __ptext8 1864  
                      __ptext9 00C6                      _T0CONbits 000FD5            __end_of_WriteTimer0 25A0  
                   ??_delay_ms 0068         CANreceiveMessage@error 001C   __end_of_board_initialization 2286  
               __pintcode_body 1DC8           end_of_initialization 249A                  __Lmediumconst 0000  
                      int_func 1DC8            i2___wmul@multiplier 0012               _CANisRXwarningON 25AC  
                _CANInitialize 1C02                      _ISR_Bassa 0018                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE              __end_of_status_ok 2468  
                    _PORTBbits 000F81                 CANSetMask@mask 0060                      _PORTCbits 000F82  
            _correction_factor 0094                 CANSetMask@tamp 006A                 CANSetMask@type 0064  
             _CANisTXwarningON 25A0              __size_of_ADC_Read 0084                      i2___awdiv 230A  
      _clock_counter_reference 0092                 _CANsendMessage 0BCC               CANInitialize@BRP 0071  
             CANInitialize@SJW 0070                 ?_CANInitialize 006E             i2___awdiv@dividend 0018  
             _ADC_wait_counter 0098                     ?_ISR_Bassa 0001              __size_of_ISR_Alta 1F76  
               __end_of___wmul 2518                    _WriteTimer0 258E               i2___wmul@product 0016  
          start_initialization 2468             _number_of_measures 00AA             i2___awdiv@quotient 001E  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 0069                     ?i2___awdiv 0018  
       __end_of_CANsendMessage 1358              ?_CANOperationMode 0001             ??_CANOperationMode 0060  
   CANInitialize@FilterConfig1 0078     CANInitialize@FilterConfig2 0079           _board_initialization 21E2  
                     ??___wmul 0064                    __pdataBANK0 00A9               __CFG_LPT1OSC$OFF 000000  
           _brake_value_degree 0049         CANInitialize@phaseSeg1 006E         CANInitialize@phaseSeg2 006F  
                  __pbssCOMRAM 0032                  __pcstackBANK0 0060                    _BRGCON2bits 000F71  
                  _BRGCON3bits 000F72              __size_of_delay_ms 003A                ?_CANsendMessage 0060  
              ??_CANInitialize 0073             CANSetFilter@filter 0060               ___lwdiv@dividend 0060  
        ?_board_initialization 0001                    ??_ISR_Bassa 0001                      __pintcode 0008  
                     ?___awdiv 0060                       ?___lwdiv 0060                    __pintcodelo 0018  
            WriteTimer0@timer0 0012       __end_of_CANisRXwarningON 25B8                    _brake_value 00A8  
                  _COMSTATbits 000F74                       _ADC_Read 2286               ___lwdiv@quotient 0064  
                  ??i2___awdiv 001C          CANreceiveMessage@tamp 001D                 ___wmul@product 0064  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 00A9                       _IPR3bits 000FA5  
                     _PIE2bits 000FA0                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 25AC  
                     i2u411_40 1E50                       i2u411_46 1E52                       i2u361_40 1410  
                     i2u361_46 1412                       i2u362_40 143E                       i2u370_45 15C4  
                     i2u362_46 1440                       _PIR2bits 000FA1                       i2u372_40 1698  
                     i2u364_45 1454                       i2u372_46 169A                       i2u373_40 16C2  
                     _PIR3bits 000FA4                       i2u381_45 183A                       i2u373_46 16C4  
                     i2u375_45 16D6                       _RXB0EIDH 000F63                       _RXB0EIDL 000F64  
                     _RXB1EIDH 000F53                       _RXB1EIDL 000F54                       _ISR_Alta 0008  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61  
                     _RXB0SIDL 000F62                       _RXF0EIDH 000F02                       _RXB1SIDH 000F51  
                     _RXF0EIDL 000F03                       _RXB1SIDL 000F52                       _RXF1EIDH 000F06  
                     _RXF1EIDL 000F07                       _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B  
                     _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F                       _RXF4EIDH 000F12  
                     _RXF4EIDL 000F13                       _RXF5EIDH 000F16                       _RXF5EIDL 000F17  
                     _RXF0SIDH 000F00                       _RXF0SIDL 000F01                       _TXB0EIDH 000F43  
                     _RXF1SIDH 000F04                       _TXB0EIDL 000F44                       _RXF1SIDL 000F05  
                    _wait_time 009F                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0032  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 0060  
                     i2___wmul 2518                _ADC_wait_factor 0099                      _status_ok 2406  
            i2___awdiv@divisor 001A              i2___awdiv@counter 001C                  ?_CANSetFilter 0060  
                  _INTCON2bits 000FF1                     _CANCONbits 000F6F                       __Hrparam 0000  
                 _RXB0SIDLbits 000F62         ??_board_initialization 007A                       __Lrparam 0000  
                 _RXB1SIDLbits 000F52                     _CANSetMask 1864               __size_of___awdiv 00BE  
        i2___wmul@multiplicand 0014               __size_of___lwdiv 0078                       _Tx_retry 0250  
                 ?_WriteTimer0 0012                     ?_status_ok 0001                   _RXF0SIDLbits 000F01  
                     _delay_ms 24A8                ___lwdiv@divisor 0062                   _RXF1SIDLbits 000F05  
              ___lwdiv@counter 0066                 ??_CANSetFilter 0065                       __ptext10 2562  
                     __ptext11 2124                       __ptext20 258E                       __ptext12 25A0  
                     __ptext21 1358                       __ptext13 25AC                       __ptext22 2578  
                     __ptext14 2286                       __ptext15 238E                       __ptext18 2518  
                     __ptext19 230A                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0066  
                 _remote_frame 0251                  __size_of_main 01A6           CANreceiveMessage@msg 0012  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0036  
                 _TXB2SIDLbits 000F22                       int$flags 004B      __size_of_CANOperationMode 0016  
                ?_CANisRxReady 0001                    _partial_sum 0096                  ?_CANisTxReady 0001  
                  _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19  
                  _RXB0CONbits 000F60                    _RXB1CONbits 000F50              _CANreceiveMessage 1358  
                 _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2               ??_CANsendMessage 0068  
           ?_CANreceiveMessage 0012       CANsendMessage@identifier 0060                       intlevel1 0000  
                     intlevel2 0000                   _TMR3_counter 0086               CANSetFilter@tamp 006A  
             CANSetFilter@type 0064            ??_CANreceiveMessage 0014                    _TXB0DLCbits 000F45  
                  _TXB1DLCbits 000F35                    _TXB0CONbits 000F40                    _TXB2DLCbits 000F25  
                  _TXB1CONbits 000F30                    _TXB2CONbits 000F20           CANOperationMode@mode 0060  
               ??_CANisRxReady 0012                    ?_CANSetMask 0060                 ??_CANisTxReady 0060  
    __end_of_CANreceiveMessage 1864                    ??_status_ok 0070              ?_CANisRXwarningON 0001  
                  _TMR3_stored 008A             ??_CANisRXwarningON 0060          __end_of_CANInitialize 1DC8  
            ?_CANisTXwarningON 0001  
