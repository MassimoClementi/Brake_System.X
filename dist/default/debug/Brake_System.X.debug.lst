

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Dec 02 22:05:50 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  00213E                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _delay_quartz_frequency_value
    44  00213E  10                 	db	16
    45                           
    46                           ;initializer for _number_of_measures
    47  00213F  08                 	db	8
    48                           
    49                           ;initializer for _period
    50  002140  F9                 	db	249
    51  0000                     _RXB1CON	set	3920
    52  0000                     _RXB1CONbits	set	3920
    53  0000                     _RXB1D0	set	3926
    54  0000                     _RXB1D1	set	3927
    55  0000                     _RXB1D2	set	3928
    56  0000                     _RXB1D3	set	3929
    57  0000                     _RXB1D4	set	3930
    58  0000                     _RXB1D5	set	3931
    59  0000                     _RXB1D6	set	3932
    60  0000                     _RXB1D7	set	3933
    61  0000                     _RXB1DLC	set	3925
    62  0000                     _RXB1DLCbits	set	3925
    63  0000                     _RXB1EIDH	set	3923
    64  0000                     _RXB1EIDL	set	3924
    65  0000                     _RXB1SIDH	set	3921
    66  0000                     _RXB1SIDL	set	3922
    67  0000                     _RXB1SIDLbits	set	3922
    68  0000                     _RXF0EIDH	set	3842
    69  0000                     _RXF0EIDL	set	3843
    70  0000                     _RXF0SIDH	set	3840
    71  0000                     _RXF0SIDL	set	3841
    72  0000                     _RXF0SIDLbits	set	3841
    73  0000                     _RXF1EIDH	set	3846
    74  0000                     _RXF1EIDL	set	3847
    75  0000                     _RXF1SIDH	set	3844
    76  0000                     _RXF1SIDL	set	3845
    77  0000                     _RXF1SIDLbits	set	3845
    78  0000                     _RXF2EIDH	set	3850
    79  0000                     _RXF2EIDL	set	3851
    80  0000                     _RXF2SIDH	set	3848
    81  0000                     _RXF2SIDL	set	3849
    82  0000                     _RXF2SIDLbits	set	3849
    83  0000                     _RXF3EIDH	set	3854
    84  0000                     _RXF3EIDL	set	3855
    85  0000                     _RXF3SIDH	set	3852
    86  0000                     _RXF3SIDL	set	3853
    87  0000                     _RXF3SIDLbits	set	3853
    88  0000                     _RXF4EIDH	set	3858
    89  0000                     _RXF4EIDL	set	3859
    90  0000                     _RXF4SIDH	set	3856
    91  0000                     _RXF4SIDL	set	3857
    92  0000                     _RXF4SIDLbits	set	3857
    93  0000                     _RXF5EIDH	set	3862
    94  0000                     _RXF5EIDL	set	3863
    95  0000                     _RXF5SIDH	set	3860
    96  0000                     _RXF5SIDL	set	3861
    97  0000                     _RXF5SIDLbits	set	3861
    98  0000                     _RXM0EIDH	set	3866
    99  0000                     _RXM0EIDL	set	3867
   100  0000                     _RXM0SIDH	set	3864
   101  0000                     _RXM0SIDL	set	3865
   102  0000                     _RXM0SIDLbits	set	3865
   103  0000                     _RXM1EIDH	set	3870
   104  0000                     _RXM1EIDL	set	3871
   105  0000                     _RXM1SIDH	set	3868
   106  0000                     _RXM1SIDL	set	3869
   107  0000                     _RXM1SIDLbits	set	3869
   108  0000                     _TXB0CONbits	set	3904
   109  0000                     _TXB0D0	set	3910
   110  0000                     _TXB0D1	set	3911
   111  0000                     _TXB0D2	set	3912
   112  0000                     _TXB0D3	set	3913
   113  0000                     _TXB0D4	set	3914
   114  0000                     _TXB0D5	set	3915
   115  0000                     _TXB0D6	set	3916
   116  0000                     _TXB0D7	set	3917
   117  0000                     _TXB0DLC	set	3909
   118  0000                     _TXB0DLCbits	set	3909
   119  0000                     _TXB0EIDH	set	3907
   120  0000                     _TXB0EIDL	set	3908
   121  0000                     _TXB0SIDH	set	3905
   122  0000                     _TXB0SIDL	set	3906
   123  0000                     _TXB0SIDLbits	set	3906
   124  0000                     _TXB1CONbits	set	3888
   125  0000                     _TXB1D0	set	3894
   126  0000                     _TXB1D1	set	3895
   127  0000                     _TXB1D2	set	3896
   128  0000                     _TXB1D3	set	3897
   129  0000                     _TXB1D4	set	3898
   130  0000                     _TXB1D5	set	3899
   131  0000                     _TXB1D6	set	3900
   132  0000                     _TXB1D7	set	3901
   133  0000                     _TXB1DLC	set	3893
   134  0000                     _TXB1DLCbits	set	3893
   135  0000                     _TXB1EIDH	set	3891
   136  0000                     _TXB1EIDL	set	3892
   137  0000                     _TXB1SIDH	set	3889
   138  0000                     _TXB1SIDL	set	3890
   139  0000                     _TXB1SIDLbits	set	3890
   140  0000                     _TXB2CONbits	set	3872
   141  0000                     _TXB2D0	set	3878
   142  0000                     _TXB2D1	set	3879
   143  0000                     _TXB2D2	set	3880
   144  0000                     _TXB2D3	set	3881
   145  0000                     _TXB2D4	set	3882
   146  0000                     _TXB2D5	set	3883
   147  0000                     _TXB2D6	set	3884
   148  0000                     _TXB2D7	set	3885
   149  0000                     _TXB2DLC	set	3877
   150  0000                     _TXB2DLCbits	set	3877
   151  0000                     _TXB2EIDH	set	3875
   152  0000                     _TXB2EIDL	set	3876
   153  0000                     _TXB2SIDH	set	3873
   154  0000                     _TXB2SIDL	set	3874
   155  0000                     _TXB2SIDLbits	set	3874
   156  0000                     _ADCON0bits	set	4034
   157  0000                     _ADCON1	set	4033
   158  0000                     _ADCON2bits	set	4032
   159  0000                     _ADRESH	set	4036
   160  0000                     _BRGCON1	set	3952
   161  0000                     _BRGCON2	set	3953
   162  0000                     _BRGCON2bits	set	3953
   163  0000                     _BRGCON3	set	3954
   164  0000                     _BRGCON3bits	set	3954
   165  0000                     _CANCON	set	3951
   166  0000                     _CANCONbits	set	3951
   167  0000                     _CANSTAT	set	3950
   168  0000                     _COMSTATbits	set	3956
   169  0000                     _ECCP1CON	set	4026
   170  0000                     _ECCPR1L	set	4027
   171  0000                     _INTCONbits	set	4082
   172  0000                     _LATA	set	3977
   173  0000                     _LATB	set	3978
   174  0000                     _LATC	set	3979
   175  0000                     _LATD	set	3980
   176  0000                     _LATE	set	3981
   177  0000                     _PIE1bits	set	3997
   178  0000                     _PIE3bits	set	4003
   179  0000                     _PIR1bits	set	3998
   180  0000                     _PIR3bits	set	4004
   181  0000                     _PORTBbits	set	3969
   182  0000                     _PR2	set	4043
   183  0000                     _RCONbits	set	4048
   184  0000                     _RXB0CON	set	3936
   185  0000                     _RXB0CONbits	set	3936
   186  0000                     _RXB0D0	set	3942
   187  0000                     _RXB0D1	set	3943
   188  0000                     _RXB0D2	set	3944
   189  0000                     _RXB0D3	set	3945
   190  0000                     _RXB0D4	set	3946
   191  0000                     _RXB0D5	set	3947
   192  0000                     _RXB0D6	set	3948
   193  0000                     _RXB0D7	set	3949
   194  0000                     _RXB0DLC	set	3941
   195  0000                     _RXB0DLCbits	set	3941
   196  0000                     _RXB0EIDH	set	3939
   197  0000                     _RXB0EIDL	set	3940
   198  0000                     _RXB0SIDH	set	3937
   199  0000                     _RXB0SIDL	set	3938
   200  0000                     _RXB0SIDLbits	set	3938
   201  0000                     _RXERRCNT	set	3957
   202  0000                     _T2CON	set	4042
   203  0000                     _T2CONbits	set	4042
   204  0000                     _TMR2	set	4044
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISC	set	3988
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISE	set	3990
   210  0000                     _TXERRCNT	set	3958
   211                           
   212                           ; #config settings
   213  0000                     
   214                           	psect	cinit
   215  001FB0                     __pcinit:
   216                           	opt stack 0
   217  001FB0                     start_initialization:
   218                           	opt stack 0
   219  001FB0                     __initialization:
   220                           	opt stack 0
   221                           
   222                           ; Clear objects allocated to BANK0 (8 bytes)
   223  001FB0  EE00  F077         	lfsr	0,__pbssBANK0
   224  001FB4  0E08               	movlw	8
   225  001FB6                     clear_0:
   226  001FB6  6AEE               	clrf	postinc0,c
   227  001FB8  06E8               	decf	wreg,f,c
   228  001FBA  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   231  001FBC  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   232                           
   233                           ; Clear objects allocated to COMRAM (33 bytes)
   234  001FBE  EE00  F001         	lfsr	0,__pbssCOMRAM
   235  001FC2  0E21               	movlw	33
   236  001FC4                     clear_1:
   237  001FC4  6AEE               	clrf	postinc0,c
   238  001FC6  06E8               	decf	wreg,f,c
   239  001FC8  E1FD               	bnz	clear_1
   240                           
   241                           ; Initialize objects allocated to COMRAM (3 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243  001FCA  0E3E               	movlw	low __pidataCOMRAM
   244  001FCC  6EF6               	movwf	tblptrl,c
   245  001FCE  0E21               	movlw	high __pidataCOMRAM
   246  001FD0  6EF7               	movwf	tblptrh,c
   247  001FD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   248  001FD4  6EF8               	movwf	tblptru,c
   249  001FD6  0009               	tblrd		*+	;fetch initializer
   250  001FD8  CFF5 F041          	movff	tablat,__pdataCOMRAM
   251  001FDC  0009               	tblrd		*+	;fetch initializer
   252  001FDE  CFF5 F042          	movff	tablat,__pdataCOMRAM+1
   253  001FE2  0009               	tblrd		*+	;fetch initializer
   254  001FE4  CFF5 F043          	movff	tablat,__pdataCOMRAM+2
   255  001FE8                     end_of_initialization:
   256                           	opt stack 0
   257  001FE8                     __end_of__initialization:
   258                           	opt stack 0
   259  001FE8  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  001FEA  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  001FEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  001FEE  6EF8               	movwf	tblptru,c
   263  001FF0  0100               	movlb	0
   264  001FF2  EFF8  F00D         	goto	_main	;jump to C main() function
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	bitbssCOMRAM
   273  000220                     __pbitbssCOMRAM:
   274                           	opt stack 0
   275  000220                     _Tx_retry:
   276                           	opt stack 0
   277  000220                     	ds	1
   278  000221                     _remote_frame:
   279                           	opt stack 0
   280  000221                     	ds	1
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	bssCOMRAM
   289  000001                     __pbssCOMRAM:
   290                           	opt stack 0
   291  000001                     _id:
   292                           	opt stack 0
   293  000001                     	ds	4
   294  000005                     _clock_counter_reference:
   295                           	opt stack 0
   296  000005                     	ds	2
   297  000007                     _correction_factor:
   298                           	opt stack 0
   299  000007                     	ds	2
   300  000009                     _partial_sum:
   301                           	opt stack 0
   302  000009                     	ds	2
   303  00000B                     _ADC_wait_counter:
   304                           	opt stack 0
   305  00000B                     	ds	1
   306  00000C                     _ADC_wait_factor:
   307                           	opt stack 0
   308  00000C                     	ds	1
   309  00000D                     _brake_signal_CAN:
   310                           	opt stack 0
   311  00000D                     	ds	1
   312  00000E                     _brake_value_PWM:
   313                           	opt stack 0
   314  00000E                     	ds	1
   315  00000F                     _brake_value_inc:
   316                           	opt stack 0
   317  00000F                     	ds	1
   318  000010                     _home_position:
   319                           	opt stack 0
   320  000010                     	ds	1
   321  000011                     _i:
   322                           	opt stack 0
   323  000011                     	ds	1
   324  000012                     _read:
   325                           	opt stack 0
   326  000012                     	ds	1
   327  000013                     _msg:
   328                           	opt stack 0
   329  000013                     	ds	15
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	dataCOMRAM
   338  000041                     __pdataCOMRAM:
   339                           	opt stack 0
   340  000041                     _delay_quartz_frequency_value:
   341                           	opt stack 0
   342  000041                     	ds	1
   343  000042                     _number_of_measures:
   344                           	opt stack 0
   345  000042                     	ds	1
   346  000043                     _period:
   347                           	opt stack 0
   348  000043                     	ds	1
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           
   356                           	psect	bssBANK0
   357  000077                     __pbssBANK0:
   358                           	opt stack 0
   359  000077                     _status_array:
   360                           	opt stack 0
   361  000077                     	ds	8
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           
   369                           	psect	cstackBANK0
   370  000060                     __pcstackBANK0:
   371                           	opt stack 0
   372  000060                     ??_CANSetMask:
   373  000060                     ??_CANSetFilter:
   374  000060                     ___awdiv@counter:
   375                           	opt stack 0
   376  000060                     ___lwdiv@counter:
   377                           	opt stack 0
   378  000060                     SetDCEPWM1@DCycle:
   379                           	opt stack 0
   380  000060                     ___wmul@product:
   381                           	opt stack 0
   382  000060                     CANsendMessage@identifier:
   383                           	opt stack 0
   384                           
   385                           ; 4 bytes @ 0x0
   386  000060                     	ds	1
   387  000061                     ___awdiv@sign:
   388                           	opt stack 0
   389  000061                     ___lwdiv@quotient:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x1
   393  000061                     	ds	1
   394  000062                     delay_ms@value_ms:
   395                           	opt stack 0
   396  000062                     ___awdiv@quotient:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000062                     	ds	1
   401  000063                     ??_ADC_Read:
   402                           
   403                           ; 0 bytes @ 0x3
   404  000063                     	ds	1
   405  000064                     CANSetMask@numBuffer:
   406                           	opt stack 0
   407  000064                     CANSetFilter@numBuffer:
   408                           	opt stack 0
   409  000064                     CANsendMessage@data:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x4
   413  000064                     	ds	1
   414  000065                     CANSetMask@tamp:
   415                           	opt stack 0
   416  000065                     CANSetFilter@tamp:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x5
   420  000065                     	ds	1
   421  000066                     CANsendMessage@dataLength:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x6
   425  000066                     	ds	1
   426  000067                     CANsendMessage@flags:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x7
   430  000067                     	ds	1
   431  000068                     CANsendMessage@tamp:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x8
   435  000068                     	ds	1
   436  000069                     CANInitialize@phaseSeg1:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x9
   440  000069                     	ds	1
   441  00006A                     CANInitialize@phaseSeg2:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0xA
   445  00006A                     	ds	1
   446  00006B                     CANInitialize@SJW:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0xB
   450  00006B                     	ds	1
   451  00006C                     CANInitialize@BRP:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0xC
   455  00006C                     	ds	1
   456  00006D                     CANInitialize@flags:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0xD
   460  00006D                     	ds	1
   461  00006E                     ??_CANInitialize:
   462                           
   463                           ; 0 bytes @ 0xE
   464  00006E                     	ds	4
   465  000072                     CANInitialize@propSeg:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x12
   469  000072                     	ds	1
   470  000073                     CANInitialize@FilterConfig1:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x13
   474  000073                     	ds	1
   475  000074                     CANInitialize@FilterConfig2:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x14
   479  000074                     	ds	1
   480  000075                     ??_main:
   481                           
   482                           ; 0 bytes @ 0x15
   483  000075                     	ds	2
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           
   491                           	psect	cstackCOMRAM
   492  000022                     __pcstackCOMRAM:
   493                           	opt stack 0
   494  000022                     _CANisRxReady$2699:
   495                           	opt stack 0
   496  000022                     CANreceiveMessage@msg:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x0
   500  000022                     	ds	2
   501  000024                     ??_CANreceiveMessage:
   502                           
   503                           ; 0 bytes @ 0x2
   504  000024                     	ds	8
   505  00002C                     CANreceiveMessage@error:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0xA
   509  00002C                     	ds	1
   510  00002D                     CANreceiveMessage@tamp:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0xB
   514  00002D                     	ds	1
   515  00002E                     ??_ISR_Alta:
   516                           
   517                           ; 0 bytes @ 0xC
   518  00002E                     	ds	14
   519  00003C                     ??_CANsendMessage:
   520  00003C                     ?___wmul:
   521                           	opt stack 0
   522  00003C                     ?___awdiv:
   523                           	opt stack 0
   524  00003C                     ?___lwdiv:
   525                           	opt stack 0
   526  00003C                     CANOperationMode@mode:
   527                           	opt stack 0
   528  00003C                     OpenEPWM1@period:
   529                           	opt stack 0
   530  00003C                     OpenTimer2@config:
   531                           	opt stack 0
   532  00003C                     SetDCEPWM1@dutycycle:
   533                           	opt stack 0
   534  00003C                     ___wmul@multiplier:
   535                           	opt stack 0
   536  00003C                     ___awdiv@dividend:
   537                           	opt stack 0
   538  00003C                     ___lwdiv@dividend:
   539                           	opt stack 0
   540  00003C                     CANSetMask@mask:
   541                           	opt stack 0
   542  00003C                     CANSetFilter@filter:
   543                           	opt stack 0
   544                           
   545                           ; 4 bytes @ 0x1A
   546  00003C                     	ds	2
   547  00003E                     ??_SetDCEPWM1:
   548  00003E                     ___wmul@multiplicand:
   549                           	opt stack 0
   550  00003E                     ___awdiv@divisor:
   551                           	opt stack 0
   552  00003E                     ___lwdiv@divisor:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x1C
   556  00003E                     	ds	2
   557  000040                     CANSetMask@type:
   558                           	opt stack 0
   559  000040                     CANSetFilter@type:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x1E
   563  000040                     	ds	1
   564  000041                     tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           
   571                           ; 0 bytes @ 0x1F
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 99 in file "Brake_System.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2  606[None  ] int 
   584 ;; Registers used:
   585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   591 ;;      Params:         0       0       0       0
   592 ;;      Locals:         0       0       0       0
   593 ;;      Temps:          0       2       0       0
   594 ;;      Totals:         0       2       0       0
   595 ;;Total ram usage:        2 bytes
   596 ;; Hardware stack levels required when called:    5
   597 ;; This function calls:
   598 ;;		_ADC_Read
   599 ;;		_CANisRXwarningON
   600 ;;		_CANisTXwarningON
   601 ;;		_SetDCEPWM1
   602 ;;		___awdiv
   603 ;;		_board_initialization
   604 ;;		_status_ok
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611  001BF0                     __ptext0:
   612                           	opt stack 0
   613  001BF0                     _main:
   614                           	opt stack 26
   615                           
   616                           ;Brake_System.c: 100: board_initialization();
   617                           
   618                           ;incstack = 0
   619  001BF0  EC29  F00F         	call	_board_initialization	;wreg free
   620                           
   621                           ;Brake_System.c: 101: ADC_Read ();
   622  001BF4  EC76  F00F         	call	_ADC_Read	;wreg free
   623  001BF8                     l4403:
   624                           
   625                           ;Brake_System.c: 103: if ((remote_frame == 1)&&(Tx_retry = 1)) {
   626  001BF8  A244               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   627  001BFA  D004               	goto	l4409
   628  001BFC  8044               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   629  001BFE  B044               	btfsc	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   630                           
   631                           ;Brake_System.c: 104: status_ok();
   632  001C00  ECFB  F00F         	call	_status_ok	;wreg free
   633  001C04                     l4409:
   634                           
   635                           ;Brake_System.c: 105: }
   636                           ;Brake_System.c: 107: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   637  001C04  EC93  F010         	call	_CANisTXwarningON	;wreg free
   638  001C08  06E8               	decf	wreg,f,c
   639  001C0A  B4D8               	btfsc	status,2,c
   640  001C0C  D004               	goto	l611
   641  001C0E  EC99  F010         	call	_CANisRXwarningON	;wreg free
   642  001C12  06E8               	decf	wreg,f,c
   643  001C14  B4D8               	btfsc	status,2,c
   644  001C16                     l611:
   645                           
   646                           ;Brake_System.c: 108: PORTBbits.RB0 = 1;
   647  001C16  8081               	bsf	3969,0,c	;volatile
   648                           
   649                           ;Brake_System.c: 109: }
   650                           ;Brake_System.c: 111: if (ADC_wait_counter = 255) {
   651  001C18  680B               	setf	_ADC_wait_counter,c
   652                           
   653                           ;Brake_System.c: 112: ADC_wait_factor++;
   654  001C1A  2A0C               	incf	_ADC_wait_factor,f,c
   655                           
   656                           ;Brake_System.c: 113: if (ADC_wait_factor = 4) {
   657  001C1C  0E04               	movlw	4
   658  001C1E  6E0C               	movwf	_ADC_wait_factor,c
   659                           
   660                           ;Brake_System.c: 114: ADC_Read ();
   661  001C20  EC76  F00F         	call	_ADC_Read	;wreg free
   662                           
   663                           ;Brake_System.c: 115: ADC_wait_factor = 0;
   664  001C24  0E00               	movlw	0
   665  001C26  6E0C               	movwf	_ADC_wait_factor,c
   666                           
   667                           ;Brake_System.c: 116: }
   668                           ;Brake_System.c: 117: ADC_wait_counter = 0;
   669  001C28  0E00               	movlw	0
   670  001C2A  6E0B               	movwf	_ADC_wait_counter,c
   671                           
   672                           ;Brake_System.c: 118: }
   673                           ;Brake_System.c: 120: if ((brake_signal_CAN = 00)&&(brake_value_inc / 2 > 1)) {
   674  001C2C  0E00               	movlw	0
   675  001C2E  6E0D               	movwf	_brake_signal_CAN,c
   676                           
   677                           ;Brake_System.c: 124: }
   678                           ;Brake_System.c: 125: if ((brake_signal_CAN = 01)&&(brake_value_inc + 10 < 256)) {
   679                           
   680                           ;Brake_System.c: 123: SetDCEPWM1 (home_position + brake_value_PWM);
   681                           
   682                           ;Brake_System.c: 122: brake_value_PWM = brake_value_inc / 17;
   683                           
   684                           ;Brake_System.c: 121: brake_value_inc = brake_value_inc / 2;
   685  001C30  0E01               	movlw	1
   686  001C32  6E0D               	movwf	_brake_signal_CAN,c
   687  001C34  500F               	movf	_brake_value_inc,w,c
   688  001C36  0100               	movlb	0	; () banked
   689  001C38  6F75               	movwf	??_main& (0+255),b
   690  001C3A  6B76               	clrf	(??_main+1)& (0+255),b
   691  001C3C  0E0A               	movlw	10
   692  001C3E  0100               	movlb	0	; () banked
   693  001C40  2775               	addwf	??_main& (0+255),f,b
   694  001C42  0E00               	movlw	0
   695  001C44  2376               	addwfc	(??_main+1)& (0+255),f,b
   696  001C46  0100               	movlb	0	; () banked
   697  001C48  BF76               	btfsc	(??_main+1)& (0+255),7,b
   698  001C4A  D004               	goto	l4433
   699  001C4C  0100               	movlb	0	; () banked
   700  001C4E  0576               	decf	(??_main+1)& (0+255),w,b
   701  001C50  B0D8               	btfsc	status,0,c
   702  001C52  D015               	goto	l4439
   703  001C54                     l4433:
   704                           
   705                           ; BSR set to: 0
   706                           ;Brake_System.c: 126: brake_value_inc = brake_value_inc + 10;
   707  001C54  500F               	movf	_brake_value_inc,w,c
   708  001C56  0F0A               	addlw	10
   709  001C58  6E0F               	movwf	_brake_value_inc,c
   710                           
   711                           ; BSR set to: 0
   712                           ;Brake_System.c: 127: brake_value_PWM = brake_value_inc / 17;
   713  001C5A  C00F  F03C         	movff	_brake_value_inc,___awdiv@dividend
   714  001C5E  6A3D               	clrf	___awdiv@dividend+1,c
   715  001C60  0E00               	movlw	0
   716  001C62  6E3F               	movwf	___awdiv@divisor+1,c
   717  001C64  0E11               	movlw	17
   718  001C66  6E3E               	movwf	___awdiv@divisor,c
   719  001C68  ECDB  F00E         	call	___awdiv	;wreg free
   720  001C6C  503C               	movf	?___awdiv,w,c
   721  001C6E  6E0E               	movwf	_brake_value_PWM,c
   722                           
   723                           ;Brake_System.c: 128: SetDCEPWM1 (home_position + brake_value_PWM);
   724  001C70  5010               	movf	_home_position,w,c
   725  001C72  240E               	addwf	_brake_value_PWM,w,c
   726  001C74  6E3C               	movwf	SetDCEPWM1@dutycycle,c
   727  001C76  6A3D               	clrf	SetDCEPWM1@dutycycle+1,c
   728  001C78  363D               	rlcf	SetDCEPWM1@dutycycle+1,f,c
   729  001C7A  EC1E  F010         	call	_SetDCEPWM1	;wreg free
   730  001C7E                     l4439:
   731                           
   732                           ;Brake_System.c: 129: }
   733                           ;Brake_System.c: 130: if ((brake_signal_CAN = 10)&&(brake_value_inc*2 < 256)) {
   734  001C7E  0E0A               	movlw	10
   735  001C80  6E0D               	movwf	_brake_signal_CAN,c
   736  001C82  500F               	movf	_brake_value_inc,w,c
   737  001C84  0D02               	mullw	2
   738  001C86  BEF4               	btfsc	prodh,7,c
   739  001C88  D003               	goto	l4443
   740  001C8A  04F4               	decf	prodh,w,c
   741  001C8C  B0D8               	btfsc	status,0,c
   742  001C8E  D016               	goto	l4449
   743  001C90                     l4443:
   744                           
   745                           ;Brake_System.c: 131: brake_value_inc = brake_value_inc*2;
   746  001C90  500F               	movf	_brake_value_inc,w,c
   747  001C92  0D02               	mullw	2
   748  001C94  CFF3 F00F          	movff	prodl,_brake_value_inc
   749                           
   750                           ;Brake_System.c: 132: brake_value_PWM = brake_value_inc / 17;
   751  001C98  C00F  F03C         	movff	_brake_value_inc,___awdiv@dividend
   752  001C9C  6A3D               	clrf	___awdiv@dividend+1,c
   753  001C9E  0E00               	movlw	0
   754  001CA0  6E3F               	movwf	___awdiv@divisor+1,c
   755  001CA2  0E11               	movlw	17
   756  001CA4  6E3E               	movwf	___awdiv@divisor,c
   757  001CA6  ECDB  F00E         	call	___awdiv	;wreg free
   758  001CAA  503C               	movf	?___awdiv,w,c
   759  001CAC  6E0E               	movwf	_brake_value_PWM,c
   760                           
   761                           ;Brake_System.c: 133: SetDCEPWM1 (home_position + brake_value_PWM);
   762  001CAE  5010               	movf	_home_position,w,c
   763  001CB0  240E               	addwf	_brake_value_PWM,w,c
   764  001CB2  6E3C               	movwf	SetDCEPWM1@dutycycle,c
   765  001CB4  6A3D               	clrf	SetDCEPWM1@dutycycle+1,c
   766  001CB6  363D               	rlcf	SetDCEPWM1@dutycycle+1,f,c
   767  001CB8  EC1E  F010         	call	_SetDCEPWM1	;wreg free
   768  001CBC                     l4449:
   769                           
   770                           ;Brake_System.c: 134: }
   771                           ;Brake_System.c: 135: if ((brake_signal_CAN = 11)&&(brake_value_inc*brake_value_inc < 25
      +                          6)) {
   772  001CBC  0E0B               	movlw	11
   773  001CBE  6E0D               	movwf	_brake_signal_CAN,c
   774  001CC0  500F               	movf	_brake_value_inc,w,c
   775  001CC2  020F               	mulwf	_brake_value_inc,c
   776  001CC4  BEF4               	btfsc	prodh,7,c
   777  001CC6  D003               	goto	l4453
   778  001CC8  04F4               	decf	prodh,w,c
   779  001CCA  B0D8               	btfsc	status,0,c
   780  001CCC  D016               	goto	l4459
   781  001CCE                     l4453:
   782                           
   783                           ;Brake_System.c: 136: brake_value_inc = brake_value_inc*brake_value_inc;
   784  001CCE  500F               	movf	_brake_value_inc,w,c
   785  001CD0  020F               	mulwf	_brake_value_inc,c
   786  001CD2  CFF3 F00F          	movff	prodl,_brake_value_inc
   787                           
   788                           ;Brake_System.c: 137: brake_value_PWM = brake_value_inc / 17;
   789  001CD6  C00F  F03C         	movff	_brake_value_inc,___awdiv@dividend
   790  001CDA  6A3D               	clrf	___awdiv@dividend+1,c
   791  001CDC  0E00               	movlw	0
   792  001CDE  6E3F               	movwf	___awdiv@divisor+1,c
   793  001CE0  0E11               	movlw	17
   794  001CE2  6E3E               	movwf	___awdiv@divisor,c
   795  001CE4  ECDB  F00E         	call	___awdiv	;wreg free
   796  001CE8  503C               	movf	?___awdiv,w,c
   797  001CEA  6E0E               	movwf	_brake_value_PWM,c
   798                           
   799                           ;Brake_System.c: 138: SetDCEPWM1 (home_position + brake_value_PWM);
   800  001CEC  5010               	movf	_home_position,w,c
   801  001CEE  240E               	addwf	_brake_value_PWM,w,c
   802  001CF0  6E3C               	movwf	SetDCEPWM1@dutycycle,c
   803  001CF2  6A3D               	clrf	SetDCEPWM1@dutycycle+1,c
   804  001CF4  363D               	rlcf	SetDCEPWM1@dutycycle+1,f,c
   805  001CF6  EC1E  F010         	call	_SetDCEPWM1	;wreg free
   806  001CFA                     l4459:
   807                           
   808                           ;Brake_System.c: 139: }
   809                           ;Brake_System.c: 141: ADC_wait_counter++;
   810  001CFA  2A0B               	incf	_ADC_wait_counter,f,c
   811  001CFC  D77D               	goto	l4403
   812  001CFE                     __end_of_main:
   813                           	opt stack 0
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           prodh	equ	0xFF4
   819                           prodl	equ	0xFF3
   820                           postinc0	equ	0xFEE
   821                           wreg	equ	0xFE8
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _status_ok *****************
   825 ;; Defined at:
   826 ;;		line 146 in file "Brake_System.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   840 ;;      Params:         0       0       0       0
   841 ;;      Locals:         0       0       0       0
   842 ;;      Temps:          0       0       0       0
   843 ;;      Totals:         0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    3
   847 ;; This function calls:
   848 ;;		_CANsendMessage
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text1
   855  001FF6                     __ptext1:
   856                           	opt stack 0
   857  001FF6                     _status_ok:
   858                           	opt stack 27
   859                           
   860                           ;Brake_System.c: 147: if (i = 1) {
   861                           
   862                           ;incstack = 0
   863  001FF6  0E01               	movlw	1
   864  001FF8  6E11               	movwf	_i,c
   865                           
   866                           ;Brake_System.c: 148: if (id = 0b00000000000000000000000000110) {
   867  001FFA  0E06               	movlw	6
   868  001FFC  6E01               	movwf	_id,c
   869  001FFE  0E00               	movlw	0
   870  002000  6E02               	movwf	_id+1,c
   871  002002  0E00               	movlw	0
   872  002004  6E03               	movwf	_id+2,c
   873  002006  0E00               	movlw	0
   874  002008  6E04               	movwf	_id+3,c
   875                           
   876                           ;Brake_System.c: 149: CANsendMessage(id, status_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
   877  00200A  C001  F060         	movff	_id,CANsendMessage@identifier
   878  00200E  C002  F061         	movff	_id+1,CANsendMessage@identifier+1
   879  002012  C003  F062         	movff	_id+2,CANsendMessage@identifier+2
   880  002016  C004  F063         	movff	_id+3,CANsendMessage@identifier+3
   881  00201A  0E77               	movlw	low _status_array
   882  00201C  0100               	movlb	0	; () banked
   883  00201E  6F64               	movwf	CANsendMessage@data& (0+255),b
   884  002020  0E00               	movlw	high _status_array
   885  002022  0100               	movlb	0	; () banked
   886  002024  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
   887  002026  0E08               	movlw	8
   888  002028  0100               	movlb	0	; () banked
   889  00202A  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
   890  00202C  0EBC               	movlw	188
   891  00202E  0100               	movlb	0	; () banked
   892  002030  6F67               	movwf	CANsendMessage@flags& (0+255),b
   893  002032  EC30  F005         	call	_CANsendMessage	;wreg free
   894                           
   895                           ;Brake_System.c: 150: Tx_retry = 0;
   896  002036  9044               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   897                           
   898                           ;Brake_System.c: 155: }
   899                           ;Brake_System.c: 156: remote_frame = 0;
   900                           
   901                           ;Brake_System.c: 153: else {
   902                           ;Brake_System.c: 154: Tx_retry = 1;
   903                           
   904                           ;Brake_System.c: 151: }
   905                           ;Brake_System.c: 152: }
   906  002038  9244               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   907  00203A  0012               	return		;funcret
   908  00203C                     __end_of_status_ok:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           prodh	equ	0xFF4
   915                           prodl	equ	0xFF3
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _CANsendMessage *****************
   921 ;; Defined at:
   922 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  identifier      4    0[BANK0 ] unsigned long 
   925 ;;  data            2    4[BANK0 ] PTR unsigned char 
   926 ;;		 -> status_array(8), 
   927 ;;  dataLength      1    6[BANK0 ] unsigned char 
   928 ;;  flags           1    7[BANK0 ] enum E16866
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  tamp            4    8[BANK0 ] unsigned long 
   931 ;; Return value:  Size  Location     Type
   932 ;;		None               void
   933 ;; Registers used:
   934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   940 ;;      Params:         0       8       0       0
   941 ;;      Locals:         0       4       0       0
   942 ;;      Temps:          4       0       0       0
   943 ;;      Totals:         4      12       0       0
   944 ;;Total ram usage:       16 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    2
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_status_ok
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text2
   955  000A60                     __ptext2:
   956                           	opt stack 0
   957  000A60                     _CANsendMessage:
   958                           	opt stack 27
   959                           
   960                           ;inc\CANlib.h: 296: unsigned long tamp;
   961                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
   962                           
   963                           ;incstack = 0
   964  000A60  010F               	movlb	15	; () banked
   965  000A62  B740               	btfsc	64,3,b	;volatile
   966  000A64  D13B               	goto	l343
   967                           
   968                           ; BSR set to: 15
   969                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
   970  000A66  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
   971                           
   972                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
   973  000A6A  0100               	movlb	0	; () banked
   974  000A6C  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
   975  000A6E  D003               	goto	l344
   976                           
   977                           ; BSR set to: 0
   978                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
   979  000A70  010F               	movlb	15	; () banked
   980  000A72  8D45               	bsf	69,6,b	;volatile
   981  000A74  D002               	goto	l345
   982  000A76                     l344:
   983                           
   984                           ; BSR set to: 0
   985                           ;inc\CANlib.h: 302: else
   986                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
   987  000A76  010F               	movlb	15	; () banked
   988  000A78  9D45               	bcf	69,6,b	;volatile
   989  000A7A                     l345:
   990                           
   991                           ; BSR set to: 15
   992                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
   993  000A7A  0100               	movlb	0	; () banked
   994  000A7C  A767               	btfss	CANsendMessage@flags& (0+255),3,b
   995  000A7E  D077               	goto	l346
   996                           
   997                           ; BSR set to: 0
   998                           ;inc\CANlib.h: 306: {
   999                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1000  000A80  0100               	movlb	0	; () banked
  1001  000A82  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1002  000A84  0100               	movlb	0	; () banked
  1003  000A86  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1004  000A88  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1005  000A8A  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1006  000A8C  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1010  000A8E  C068  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1014  000A92  0E00               	movlw	0
  1015  000A94  0100               	movlb	0	; () banked
  1016  000A96  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1017  000A98  0100               	movlb	0	; () banked
  1018  000A9A  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1019  000A9C  0EFF               	movlw	255
  1020  000A9E  0100               	movlb	0	; () banked
  1021  000AA0  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1022  000AA2  0100               	movlb	0	; () banked
  1023  000AA4  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1024  000AA6  0E00               	movlw	0
  1025  000AA8  0100               	movlb	0	; () banked
  1026  000AAA  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1027  000AAC  0100               	movlb	0	; () banked
  1028  000AAE  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1029  000AB0  0E00               	movlw	0
  1030  000AB2  0100               	movlb	0	; () banked
  1031  000AB4  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1032  000AB6  0100               	movlb	0	; () banked
  1033  000AB8  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1037  000ABA  C068  F03C         	movff	CANsendMessage@tamp,??_CANsendMessage
  1038  000ABE  C069  F03D         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1039  000AC2  C06A  F03E         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1040  000AC6  C06B  F03F         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1041  000ACA  C03D  F03C         	movff	??_CANsendMessage+1,??_CANsendMessage
  1042  000ACE  C03E  F03D         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1043  000AD2  C03F  F03E         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1044  000AD6  6A3F               	clrf	??_CANsendMessage+3,c
  1045  000AD8  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1046  000ADC  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1047  000AE0  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1048  000AE4  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1052  000AE8  C068  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1056  000AEC  0E00               	movlw	0
  1057  000AEE  010F               	movlb	15	; () banked
  1058  000AF0  6F42               	movwf	66,b	;volatile
  1059                           
  1060                           ; BSR set to: 15
  1061                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1062  000AF2  010F               	movlb	15	; () banked
  1063  000AF4  8742               	bsf	66,3,b	;volatile
  1064                           
  1065                           ; BSR set to: 15
  1066                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1067  000AF6  0100               	movlb	0	; () banked
  1068  000AF8  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1069  000AFA  D002               	goto	l347
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1073  000AFC  010F               	movlb	15	; () banked
  1074  000AFE  8142               	bsf	66,0,b	;volatile
  1075  000B00                     l347:
  1076                           
  1077                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1078  000B00  0100               	movlb	0	; () banked
  1079  000B02  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1080  000B04  D002               	goto	l348
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1084  000B06  010F               	movlb	15	; () banked
  1085  000B08  8342               	bsf	66,1,b	;volatile
  1086  000B0A                     l348:
  1087                           
  1088                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1089  000B0A  0100               	movlb	0	; () banked
  1090  000B0C  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1091  000B0E  D002               	goto	l349
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1095  000B10  010F               	movlb	15	; () banked
  1096  000B12  8B42               	bsf	66,5,b	;volatile
  1097  000B14                     l349:
  1098                           
  1099                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1100  000B14  0100               	movlb	0	; () banked
  1101  000B16  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1102  000B18  D002               	goto	l350
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1106  000B1A  010F               	movlb	15	; () banked
  1107  000B1C  8D42               	bsf	66,6,b	;volatile
  1108  000B1E                     l350:
  1109                           
  1110                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1111  000B1E  0100               	movlb	0	; () banked
  1112  000B20  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1113  000B22  D002               	goto	l4043
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1117  000B24  010F               	movlb	15	; () banked
  1118  000B26  8F42               	bsf	66,7,b	;volatile
  1119  000B28                     l4043:
  1120                           
  1121                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1122  000B28  C060  F03C         	movff	CANsendMessage@identifier,??_CANsendMessage
  1123  000B2C  C061  F03D         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1124  000B30  C062  F03E         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1125  000B34  C063  F03F         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1126  000B38  0E16               	movlw	22
  1127  000B3A  D005               	goto	u5010
  1128  000B3C                     u5015:
  1129  000B3C  90D8               	bcf	status,0,c
  1130  000B3E  323F               	rrcf	??_CANsendMessage+3,f,c
  1131  000B40  323E               	rrcf	??_CANsendMessage+2,f,c
  1132  000B42  323D               	rrcf	??_CANsendMessage+1,f,c
  1133  000B44  323C               	rrcf	??_CANsendMessage,f,c
  1134  000B46                     u5010:
  1135  000B46  2EE8               	decfsz	wreg,f,c
  1136  000B48  D7F9               	goto	u5015
  1137  000B4A  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1138  000B4E  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1139  000B52  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1140  000B56  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1141                           
  1142                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1143  000B5A  0100               	movlb	0	; () banked
  1144  000B5C  5168               	movf	CANsendMessage@tamp& (0+255),w,b
  1145  000B5E  0100               	movlb	0	; () banked
  1146  000B60  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1147  000B62  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1148  000B64  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1149  000B66  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1153  000B68  C068  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1154                           
  1155                           ;inc\CANlib.h: 332: }
  1156  000B6C  D057               	goto	l4063
  1157  000B6E                     l346:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;inc\CANlib.h: 334: else
  1161                           ;inc\CANlib.h: 336: {
  1162                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1163  000B6E  010F               	movlb	15	; () banked
  1164  000B70  9742               	bcf	66,3,b	;volatile
  1165                           
  1166                           ; BSR set to: 15
  1167                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1168  000B72  C060  F03C         	movff	CANsendMessage@identifier,??_CANsendMessage
  1169  000B76  C061  F03D         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1170  000B7A  C062  F03E         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1171  000B7E  C063  F03F         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1172  000B82  0E04               	movlw	4
  1173  000B84  D005               	goto	u5020
  1174  000B86                     u5025:
  1175  000B86  90D8               	bcf	status,0,c
  1176  000B88  323F               	rrcf	??_CANsendMessage+3,f,c
  1177  000B8A  323E               	rrcf	??_CANsendMessage+2,f,c
  1178  000B8C  323D               	rrcf	??_CANsendMessage+1,f,c
  1179  000B8E  323C               	rrcf	??_CANsendMessage,f,c
  1180  000B90                     u5020:
  1181  000B90  2EE8               	decfsz	wreg,f,c
  1182  000B92  D7F9               	goto	u5025
  1183  000B94  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1184  000B98  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1185  000B9C  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1186  000BA0  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1187                           
  1188                           ; BSR set to: 15
  1189                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1190  000BA4  0100               	movlb	0	; () banked
  1191  000BA6  5168               	movf	CANsendMessage@tamp& (0+255),w,b
  1192  000BA8  0100               	movlb	0	; () banked
  1193  000BAA  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1194  000BAC  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1195  000BAE  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1196  000BB0  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1200  000BB2  C068  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1204  000BB6  0E07               	movlw	7
  1205  000BB8  0100               	movlb	0	; () banked
  1206  000BBA  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1207  000BBC  0100               	movlb	0	; () banked
  1208  000BBE  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1209  000BC0  0E00               	movlw	0
  1210  000BC2  0100               	movlb	0	; () banked
  1211  000BC4  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1212  000BC6  0100               	movlb	0	; () banked
  1213  000BC8  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1214  000BCA  0E00               	movlw	0
  1215  000BCC  0100               	movlb	0	; () banked
  1216  000BCE  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1217  000BD0  0100               	movlb	0	; () banked
  1218  000BD2  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1219  000BD4  0E00               	movlw	0
  1220  000BD6  0100               	movlb	0	; () banked
  1221  000BD8  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1222  000BDA  0100               	movlb	0	; () banked
  1223  000BDC  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1227  000BDE  C068  F03C         	movff	CANsendMessage@tamp,??_CANsendMessage
  1228  000BE2  C069  F03D         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1229  000BE6  C06A  F03E         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1230  000BEA  C06B  F03F         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1231  000BEE  0E05               	movlw	5
  1232  000BF0                     u5035:
  1233  000BF0  90D8               	bcf	status,0,c
  1234  000BF2  363C               	rlcf	??_CANsendMessage,f,c
  1235  000BF4  363D               	rlcf	??_CANsendMessage+1,f,c
  1236  000BF6  363E               	rlcf	??_CANsendMessage+2,f,c
  1237  000BF8  363F               	rlcf	??_CANsendMessage+3,f,c
  1238  000BFA  2EE8               	decfsz	wreg,f,c
  1239  000BFC  D7F9               	goto	u5035
  1240  000BFE  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1241  000C02  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1242  000C06  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1243  000C0A  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1247  000C0E  010F               	movlb	15	; () banked
  1248  000C10  5142               	movf	66,w,b	;volatile
  1249  000C12  0B1F               	andlw	31
  1250  000C14  010F               	movlb	15	; () banked
  1251  000C16  6F42               	movwf	66,b	;volatile
  1252                           
  1253                           ; BSR set to: 15
  1254                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1255  000C18  C068  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1256  000C1C                     l4063:
  1257                           
  1258                           ;inc\CANlib.h: 347: }
  1259                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1260  000C1C  0100               	movlb	0	; () banked
  1261  000C1E  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  1262  000C20  D003               	goto	l353
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1266  000C22  010F               	movlb	15	; () banked
  1267  000C24  8140               	bsf	64,0,b	;volatile
  1268  000C26  D002               	goto	l354
  1269  000C28                     l353:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;inc\CANlib.h: 351: else
  1273                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1274  000C28  010F               	movlb	15	; () banked
  1275  000C2A  9140               	bcf	64,0,b	;volatile
  1276  000C2C                     l354:
  1277                           
  1278                           ; BSR set to: 15
  1279                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1280  000C2C  0100               	movlb	0	; () banked
  1281  000C2E  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  1282  000C30  D003               	goto	l355
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1286  000C32  010F               	movlb	15	; () banked
  1287  000C34  8340               	bsf	64,1,b	;volatile
  1288  000C36  D002               	goto	l4069
  1289  000C38                     l355:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;inc\CANlib.h: 355: else
  1293                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1294  000C38  010F               	movlb	15	; () banked
  1295  000C3A  9340               	bcf	64,1,b	;volatile
  1296  000C3C                     l4069:
  1297                           
  1298                           ; BSR set to: 15
  1299                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1300  000C3C  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  1301  000C40  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1302  000C44  50DF               	movf	indf2,w,c
  1303  000C46  010F               	movlb	15	; () banked
  1304  000C48  6F46               	movwf	70,b	;volatile
  1305                           
  1306                           ; BSR set to: 15
  1307                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1308  000C4A  0100               	movlb	0	; () banked
  1309  000C4C  EE20 F001          	lfsr	2,1
  1310  000C50  5164               	movf	CANsendMessage@data& (0+255),w,b
  1311  000C52  26D9               	addwf	fsr2l,f,c
  1312  000C54  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1313  000C56  22DA               	addwfc	fsr2h,f,c
  1314  000C58  50DF               	movf	indf2,w,c
  1315  000C5A  010F               	movlb	15	; () banked
  1316  000C5C  6F47               	movwf	71,b	;volatile
  1317                           
  1318                           ; BSR set to: 15
  1319                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1320  000C5E  0100               	movlb	0	; () banked
  1321  000C60  EE20 F002          	lfsr	2,2
  1322  000C64  5164               	movf	CANsendMessage@data& (0+255),w,b
  1323  000C66  26D9               	addwf	fsr2l,f,c
  1324  000C68  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1325  000C6A  22DA               	addwfc	fsr2h,f,c
  1326  000C6C  50DF               	movf	indf2,w,c
  1327  000C6E  010F               	movlb	15	; () banked
  1328  000C70  6F48               	movwf	72,b	;volatile
  1329                           
  1330                           ; BSR set to: 15
  1331                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1332  000C72  0100               	movlb	0	; () banked
  1333  000C74  EE20 F003          	lfsr	2,3
  1334  000C78  5164               	movf	CANsendMessage@data& (0+255),w,b
  1335  000C7A  26D9               	addwf	fsr2l,f,c
  1336  000C7C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1337  000C7E  22DA               	addwfc	fsr2h,f,c
  1338  000C80  50DF               	movf	indf2,w,c
  1339  000C82  010F               	movlb	15	; () banked
  1340  000C84  6F49               	movwf	73,b	;volatile
  1341                           
  1342                           ; BSR set to: 15
  1343                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1344  000C86  0100               	movlb	0	; () banked
  1345  000C88  EE20 F004          	lfsr	2,4
  1346  000C8C  5164               	movf	CANsendMessage@data& (0+255),w,b
  1347  000C8E  26D9               	addwf	fsr2l,f,c
  1348  000C90  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1349  000C92  22DA               	addwfc	fsr2h,f,c
  1350  000C94  50DF               	movf	indf2,w,c
  1351  000C96  010F               	movlb	15	; () banked
  1352  000C98  6F4A               	movwf	74,b	;volatile
  1353                           
  1354                           ; BSR set to: 15
  1355                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1356  000C9A  0100               	movlb	0	; () banked
  1357  000C9C  EE20 F005          	lfsr	2,5
  1358  000CA0  5164               	movf	CANsendMessage@data& (0+255),w,b
  1359  000CA2  26D9               	addwf	fsr2l,f,c
  1360  000CA4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1361  000CA6  22DA               	addwfc	fsr2h,f,c
  1362  000CA8  50DF               	movf	indf2,w,c
  1363  000CAA  010F               	movlb	15	; () banked
  1364  000CAC  6F4B               	movwf	75,b	;volatile
  1365                           
  1366                           ; BSR set to: 15
  1367                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1368  000CAE  0100               	movlb	0	; () banked
  1369  000CB0  EE20 F006          	lfsr	2,6
  1370  000CB4  5164               	movf	CANsendMessage@data& (0+255),w,b
  1371  000CB6  26D9               	addwf	fsr2l,f,c
  1372  000CB8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1373  000CBA  22DA               	addwfc	fsr2h,f,c
  1374  000CBC  50DF               	movf	indf2,w,c
  1375  000CBE  010F               	movlb	15	; () banked
  1376  000CC0  6F4C               	movwf	76,b	;volatile
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1380  000CC2  0100               	movlb	0	; () banked
  1381  000CC4  EE20 F007          	lfsr	2,7
  1382  000CC8  5164               	movf	CANsendMessage@data& (0+255),w,b
  1383  000CCA  26D9               	addwf	fsr2l,f,c
  1384  000CCC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1385  000CCE  22DA               	addwfc	fsr2h,f,c
  1386  000CD0  50DF               	movf	indf2,w,c
  1387  000CD2  010F               	movlb	15	; () banked
  1388  000CD4  6F4D               	movwf	77,b	;volatile
  1389                           
  1390                           ; BSR set to: 15
  1391                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1392  000CD6  010F               	movlb	15	; () banked
  1393  000CD8  8740               	bsf	64,3,b	;volatile
  1394                           
  1395                           ; BSR set to: 15
  1396                           ;inc\CANlib.h: 368: return;
  1397  000CDA  0012               	return	
  1398  000CDC                     l343:
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;inc\CANlib.h: 369: }
  1402                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1403  000CDC  010F               	movlb	15	; () banked
  1404  000CDE  B730               	btfsc	48,3,b	;volatile
  1405  000CE0  D13B               	goto	l358
  1406                           
  1407                           ; BSR set to: 15
  1408                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1409  000CE2  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1410                           
  1411                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1412  000CE6  0100               	movlb	0	; () banked
  1413  000CE8  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  1414  000CEA  D003               	goto	l359
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1418  000CEC  010F               	movlb	15	; () banked
  1419  000CEE  8D35               	bsf	53,6,b	;volatile
  1420  000CF0  D002               	goto	l360
  1421  000CF2                     l359:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;inc\CANlib.h: 378: else
  1425                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1426  000CF2  010F               	movlb	15	; () banked
  1427  000CF4  9D35               	bcf	53,6,b	;volatile
  1428  000CF6                     l360:
  1429                           
  1430                           ; BSR set to: 15
  1431                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1432  000CF6  0100               	movlb	0	; () banked
  1433  000CF8  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  1434  000CFA  D077               	goto	l361
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;inc\CANlib.h: 382: {
  1438                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1439  000CFC  0100               	movlb	0	; () banked
  1440  000CFE  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1441  000D00  0100               	movlb	0	; () banked
  1442  000D02  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1443  000D04  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1444  000D06  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1445  000D08  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1449  000D0A  C068  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1453  000D0E  0E00               	movlw	0
  1454  000D10  0100               	movlb	0	; () banked
  1455  000D12  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1456  000D14  0100               	movlb	0	; () banked
  1457  000D16  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1458  000D18  0EFF               	movlw	255
  1459  000D1A  0100               	movlb	0	; () banked
  1460  000D1C  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1461  000D1E  0100               	movlb	0	; () banked
  1462  000D20  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1463  000D22  0E00               	movlw	0
  1464  000D24  0100               	movlb	0	; () banked
  1465  000D26  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1466  000D28  0100               	movlb	0	; () banked
  1467  000D2A  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1468  000D2C  0E00               	movlw	0
  1469  000D2E  0100               	movlb	0	; () banked
  1470  000D30  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1471  000D32  0100               	movlb	0	; () banked
  1472  000D34  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1476  000D36  C068  F03C         	movff	CANsendMessage@tamp,??_CANsendMessage
  1477  000D3A  C069  F03D         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1478  000D3E  C06A  F03E         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1479  000D42  C06B  F03F         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1480  000D46  C03D  F03C         	movff	??_CANsendMessage+1,??_CANsendMessage
  1481  000D4A  C03E  F03D         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1482  000D4E  C03F  F03E         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1483  000D52  6A3F               	clrf	??_CANsendMessage+3,c
  1484  000D54  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1485  000D58  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1486  000D5C  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1487  000D60  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1491  000D64  C068  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1495  000D68  0E00               	movlw	0
  1496  000D6A  010F               	movlb	15	; () banked
  1497  000D6C  6F32               	movwf	50,b	;volatile
  1498                           
  1499                           ; BSR set to: 15
  1500                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1501  000D6E  010F               	movlb	15	; () banked
  1502  000D70  8732               	bsf	50,3,b	;volatile
  1503                           
  1504                           ; BSR set to: 15
  1505                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1506  000D72  0100               	movlb	0	; () banked
  1507  000D74  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1508  000D76  D002               	goto	l362
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1512  000D78  010F               	movlb	15	; () banked
  1513  000D7A  8132               	bsf	50,0,b	;volatile
  1514  000D7C                     l362:
  1515                           
  1516                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1517  000D7C  0100               	movlb	0	; () banked
  1518  000D7E  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1519  000D80  D002               	goto	l363
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1523  000D82  010F               	movlb	15	; () banked
  1524  000D84  8332               	bsf	50,1,b	;volatile
  1525  000D86                     l363:
  1526                           
  1527                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1528  000D86  0100               	movlb	0	; () banked
  1529  000D88  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1530  000D8A  D002               	goto	l364
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1534  000D8C  010F               	movlb	15	; () banked
  1535  000D8E  8B32               	bsf	50,5,b	;volatile
  1536  000D90                     l364:
  1537                           
  1538                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1539  000D90  0100               	movlb	0	; () banked
  1540  000D92  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1541  000D94  D002               	goto	l365
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1545  000D96  010F               	movlb	15	; () banked
  1546  000D98  8D32               	bsf	50,6,b	;volatile
  1547  000D9A                     l365:
  1548                           
  1549                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1550  000D9A  0100               	movlb	0	; () banked
  1551  000D9C  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1552  000D9E  D002               	goto	l4119
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1556  000DA0  010F               	movlb	15	; () banked
  1557  000DA2  8F32               	bsf	50,7,b	;volatile
  1558  000DA4                     l4119:
  1559                           
  1560                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1561  000DA4  C060  F03C         	movff	CANsendMessage@identifier,??_CANsendMessage
  1562  000DA8  C061  F03D         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1563  000DAC  C062  F03E         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1564  000DB0  C063  F03F         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1565  000DB4  0E16               	movlw	22
  1566  000DB6  D005               	goto	u5140
  1567  000DB8                     u5145:
  1568  000DB8  90D8               	bcf	status,0,c
  1569  000DBA  323F               	rrcf	??_CANsendMessage+3,f,c
  1570  000DBC  323E               	rrcf	??_CANsendMessage+2,f,c
  1571  000DBE  323D               	rrcf	??_CANsendMessage+1,f,c
  1572  000DC0  323C               	rrcf	??_CANsendMessage,f,c
  1573  000DC2                     u5140:
  1574  000DC2  2EE8               	decfsz	wreg,f,c
  1575  000DC4  D7F9               	goto	u5145
  1576  000DC6  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1577  000DCA  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1578  000DCE  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1579  000DD2  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1580                           
  1581                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1582  000DD6  0100               	movlb	0	; () banked
  1583  000DD8  5168               	movf	CANsendMessage@tamp& (0+255),w,b
  1584  000DDA  0100               	movlb	0	; () banked
  1585  000DDC  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1586  000DDE  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1587  000DE0  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1588  000DE2  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1592  000DE4  C068  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1593                           
  1594                           ;inc\CANlib.h: 407: }
  1595  000DE8  D057               	goto	l4139
  1596  000DEA                     l361:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;inc\CANlib.h: 409: else
  1600                           ;inc\CANlib.h: 411: {
  1601                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1602  000DEA  010F               	movlb	15	; () banked
  1603  000DEC  9732               	bcf	50,3,b	;volatile
  1604                           
  1605                           ; BSR set to: 15
  1606                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1607  000DEE  C060  F03C         	movff	CANsendMessage@identifier,??_CANsendMessage
  1608  000DF2  C061  F03D         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1609  000DF6  C062  F03E         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1610  000DFA  C063  F03F         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1611  000DFE  0E04               	movlw	4
  1612  000E00  D005               	goto	u5150
  1613  000E02                     u5155:
  1614  000E02  90D8               	bcf	status,0,c
  1615  000E04  323F               	rrcf	??_CANsendMessage+3,f,c
  1616  000E06  323E               	rrcf	??_CANsendMessage+2,f,c
  1617  000E08  323D               	rrcf	??_CANsendMessage+1,f,c
  1618  000E0A  323C               	rrcf	??_CANsendMessage,f,c
  1619  000E0C                     u5150:
  1620  000E0C  2EE8               	decfsz	wreg,f,c
  1621  000E0E  D7F9               	goto	u5155
  1622  000E10  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1623  000E14  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1624  000E18  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1625  000E1C  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1626                           
  1627                           ; BSR set to: 15
  1628                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1629  000E20  0100               	movlb	0	; () banked
  1630  000E22  5168               	movf	CANsendMessage@tamp& (0+255),w,b
  1631  000E24  0100               	movlb	0	; () banked
  1632  000E26  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1633  000E28  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1634  000E2A  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1635  000E2C  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1639  000E2E  C068  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1643  000E32  0E07               	movlw	7
  1644  000E34  0100               	movlb	0	; () banked
  1645  000E36  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1646  000E38  0100               	movlb	0	; () banked
  1647  000E3A  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1648  000E3C  0E00               	movlw	0
  1649  000E3E  0100               	movlb	0	; () banked
  1650  000E40  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1651  000E42  0100               	movlb	0	; () banked
  1652  000E44  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1653  000E46  0E00               	movlw	0
  1654  000E48  0100               	movlb	0	; () banked
  1655  000E4A  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1656  000E4C  0100               	movlb	0	; () banked
  1657  000E4E  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1658  000E50  0E00               	movlw	0
  1659  000E52  0100               	movlb	0	; () banked
  1660  000E54  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1661  000E56  0100               	movlb	0	; () banked
  1662  000E58  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1666  000E5A  C068  F03C         	movff	CANsendMessage@tamp,??_CANsendMessage
  1667  000E5E  C069  F03D         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1668  000E62  C06A  F03E         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1669  000E66  C06B  F03F         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1670  000E6A  0E05               	movlw	5
  1671  000E6C                     u5165:
  1672  000E6C  90D8               	bcf	status,0,c
  1673  000E6E  363C               	rlcf	??_CANsendMessage,f,c
  1674  000E70  363D               	rlcf	??_CANsendMessage+1,f,c
  1675  000E72  363E               	rlcf	??_CANsendMessage+2,f,c
  1676  000E74  363F               	rlcf	??_CANsendMessage+3,f,c
  1677  000E76  2EE8               	decfsz	wreg,f,c
  1678  000E78  D7F9               	goto	u5165
  1679  000E7A  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1680  000E7E  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1681  000E82  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1682  000E86  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1686  000E8A  010F               	movlb	15	; () banked
  1687  000E8C  5132               	movf	50,w,b	;volatile
  1688  000E8E  0B1F               	andlw	31
  1689  000E90  010F               	movlb	15	; () banked
  1690  000E92  6F32               	movwf	50,b	;volatile
  1691                           
  1692                           ; BSR set to: 15
  1693                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1694  000E94  C068  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1695  000E98                     l4139:
  1696                           
  1697                           ;inc\CANlib.h: 422: }
  1698                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1699  000E98  0100               	movlb	0	; () banked
  1700  000E9A  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  1701  000E9C  D003               	goto	l368
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1705  000E9E  010F               	movlb	15	; () banked
  1706  000EA0  8130               	bsf	48,0,b	;volatile
  1707  000EA2  D002               	goto	l369
  1708  000EA4                     l368:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;inc\CANlib.h: 426: else
  1712                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1713  000EA4  010F               	movlb	15	; () banked
  1714  000EA6  9130               	bcf	48,0,b	;volatile
  1715  000EA8                     l369:
  1716                           
  1717                           ; BSR set to: 15
  1718                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1719  000EA8  0100               	movlb	0	; () banked
  1720  000EAA  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  1721  000EAC  D003               	goto	l370
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1725  000EAE  010F               	movlb	15	; () banked
  1726  000EB0  8330               	bsf	48,1,b	;volatile
  1727  000EB2  D002               	goto	l4145
  1728  000EB4                     l370:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;inc\CANlib.h: 430: else
  1732                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1733  000EB4  010F               	movlb	15	; () banked
  1734  000EB6  9330               	bcf	48,1,b	;volatile
  1735  000EB8                     l4145:
  1736                           
  1737                           ; BSR set to: 15
  1738                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1739  000EB8  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  1740  000EBC  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1741  000EC0  50DF               	movf	indf2,w,c
  1742  000EC2  010F               	movlb	15	; () banked
  1743  000EC4  6F36               	movwf	54,b	;volatile
  1744                           
  1745                           ; BSR set to: 15
  1746                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1747  000EC6  0100               	movlb	0	; () banked
  1748  000EC8  EE20 F001          	lfsr	2,1
  1749  000ECC  5164               	movf	CANsendMessage@data& (0+255),w,b
  1750  000ECE  26D9               	addwf	fsr2l,f,c
  1751  000ED0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1752  000ED2  22DA               	addwfc	fsr2h,f,c
  1753  000ED4  50DF               	movf	indf2,w,c
  1754  000ED6  010F               	movlb	15	; () banked
  1755  000ED8  6F37               	movwf	55,b	;volatile
  1756                           
  1757                           ; BSR set to: 15
  1758                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1759  000EDA  0100               	movlb	0	; () banked
  1760  000EDC  EE20 F002          	lfsr	2,2
  1761  000EE0  5164               	movf	CANsendMessage@data& (0+255),w,b
  1762  000EE2  26D9               	addwf	fsr2l,f,c
  1763  000EE4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1764  000EE6  22DA               	addwfc	fsr2h,f,c
  1765  000EE8  50DF               	movf	indf2,w,c
  1766  000EEA  010F               	movlb	15	; () banked
  1767  000EEC  6F38               	movwf	56,b	;volatile
  1768                           
  1769                           ; BSR set to: 15
  1770                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1771  000EEE  0100               	movlb	0	; () banked
  1772  000EF0  EE20 F003          	lfsr	2,3
  1773  000EF4  5164               	movf	CANsendMessage@data& (0+255),w,b
  1774  000EF6  26D9               	addwf	fsr2l,f,c
  1775  000EF8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1776  000EFA  22DA               	addwfc	fsr2h,f,c
  1777  000EFC  50DF               	movf	indf2,w,c
  1778  000EFE  010F               	movlb	15	; () banked
  1779  000F00  6F39               	movwf	57,b	;volatile
  1780                           
  1781                           ; BSR set to: 15
  1782                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1783  000F02  0100               	movlb	0	; () banked
  1784  000F04  EE20 F004          	lfsr	2,4
  1785  000F08  5164               	movf	CANsendMessage@data& (0+255),w,b
  1786  000F0A  26D9               	addwf	fsr2l,f,c
  1787  000F0C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1788  000F0E  22DA               	addwfc	fsr2h,f,c
  1789  000F10  50DF               	movf	indf2,w,c
  1790  000F12  010F               	movlb	15	; () banked
  1791  000F14  6F3A               	movwf	58,b	;volatile
  1792                           
  1793                           ; BSR set to: 15
  1794                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1795  000F16  0100               	movlb	0	; () banked
  1796  000F18  EE20 F005          	lfsr	2,5
  1797  000F1C  5164               	movf	CANsendMessage@data& (0+255),w,b
  1798  000F1E  26D9               	addwf	fsr2l,f,c
  1799  000F20  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1800  000F22  22DA               	addwfc	fsr2h,f,c
  1801  000F24  50DF               	movf	indf2,w,c
  1802  000F26  010F               	movlb	15	; () banked
  1803  000F28  6F3B               	movwf	59,b	;volatile
  1804                           
  1805                           ; BSR set to: 15
  1806                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1807  000F2A  0100               	movlb	0	; () banked
  1808  000F2C  EE20 F006          	lfsr	2,6
  1809  000F30  5164               	movf	CANsendMessage@data& (0+255),w,b
  1810  000F32  26D9               	addwf	fsr2l,f,c
  1811  000F34  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1812  000F36  22DA               	addwfc	fsr2h,f,c
  1813  000F38  50DF               	movf	indf2,w,c
  1814  000F3A  010F               	movlb	15	; () banked
  1815  000F3C  6F3C               	movwf	60,b	;volatile
  1816                           
  1817                           ; BSR set to: 15
  1818                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1819  000F3E  0100               	movlb	0	; () banked
  1820  000F40  EE20 F007          	lfsr	2,7
  1821  000F44  5164               	movf	CANsendMessage@data& (0+255),w,b
  1822  000F46  26D9               	addwf	fsr2l,f,c
  1823  000F48  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1824  000F4A  22DA               	addwfc	fsr2h,f,c
  1825  000F4C  50DF               	movf	indf2,w,c
  1826  000F4E  010F               	movlb	15	; () banked
  1827  000F50  6F3D               	movwf	61,b	;volatile
  1828                           
  1829                           ; BSR set to: 15
  1830                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1831  000F52  010F               	movlb	15	; () banked
  1832  000F54  8730               	bsf	48,3,b	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;inc\CANlib.h: 444: return;
  1836  000F56  0012               	return	
  1837  000F58                     l358:
  1838                           
  1839                           ; BSR set to: 15
  1840                           ;inc\CANlib.h: 445: }
  1841                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1842  000F58  010F               	movlb	15	; () banked
  1843  000F5A  B720               	btfsc	32,3,b	;volatile
  1844  000F5C  0012               	return	
  1845                           
  1846                           ; BSR set to: 15
  1847                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1848  000F5E  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1849                           
  1850                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1851  000F62  0100               	movlb	0	; () banked
  1852  000F64  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  1853  000F66  D003               	goto	l373
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1857  000F68  010F               	movlb	15	; () banked
  1858  000F6A  8D25               	bsf	37,6,b	;volatile
  1859  000F6C  D002               	goto	l374
  1860  000F6E                     l373:
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;inc\CANlib.h: 454: else
  1864                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1865  000F6E  010F               	movlb	15	; () banked
  1866  000F70  9D25               	bcf	37,6,b	;volatile
  1867  000F72                     l374:
  1868                           
  1869                           ; BSR set to: 15
  1870                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1871  000F72  0100               	movlb	0	; () banked
  1872  000F74  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  1873  000F76  D077               	goto	l375
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;inc\CANlib.h: 458: {
  1877                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1878  000F78  0100               	movlb	0	; () banked
  1879  000F7A  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1880  000F7C  0100               	movlb	0	; () banked
  1881  000F7E  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1882  000F80  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1883  000F82  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1884  000F84  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  1888  000F86  C068  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  1892  000F8A  0E00               	movlw	0
  1893  000F8C  0100               	movlb	0	; () banked
  1894  000F8E  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1895  000F90  0100               	movlb	0	; () banked
  1896  000F92  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  1897  000F94  0EFF               	movlw	255
  1898  000F96  0100               	movlb	0	; () banked
  1899  000F98  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1900  000F9A  0100               	movlb	0	; () banked
  1901  000F9C  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1902  000F9E  0E00               	movlw	0
  1903  000FA0  0100               	movlb	0	; () banked
  1904  000FA2  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1905  000FA4  0100               	movlb	0	; () banked
  1906  000FA6  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1907  000FA8  0E00               	movlw	0
  1908  000FAA  0100               	movlb	0	; () banked
  1909  000FAC  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1910  000FAE  0100               	movlb	0	; () banked
  1911  000FB0  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  1915  000FB2  C068  F03C         	movff	CANsendMessage@tamp,??_CANsendMessage
  1916  000FB6  C069  F03D         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1917  000FBA  C06A  F03E         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1918  000FBE  C06B  F03F         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1919  000FC2  C03D  F03C         	movff	??_CANsendMessage+1,??_CANsendMessage
  1920  000FC6  C03E  F03D         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1921  000FCA  C03F  F03E         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1922  000FCE  6A3F               	clrf	??_CANsendMessage+3,c
  1923  000FD0  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  1924  000FD4  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1925  000FD8  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1926  000FDC  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  1930  000FE0  C068  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  1934  000FE4  0E00               	movlw	0
  1935  000FE6  010F               	movlb	15	; () banked
  1936  000FE8  6F22               	movwf	34,b	;volatile
  1937                           
  1938                           ; BSR set to: 15
  1939                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  1940  000FEA  010F               	movlb	15	; () banked
  1941  000FEC  8722               	bsf	34,3,b	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  1945  000FEE  0100               	movlb	0	; () banked
  1946  000FF0  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1947  000FF2  D002               	goto	l376
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  1951  000FF4  010F               	movlb	15	; () banked
  1952  000FF6  8122               	bsf	34,0,b	;volatile
  1953  000FF8                     l376:
  1954                           
  1955                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  1956  000FF8  0100               	movlb	0	; () banked
  1957  000FFA  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1958  000FFC  D002               	goto	l377
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  1962  000FFE  010F               	movlb	15	; () banked
  1963  001000  8322               	bsf	34,1,b	;volatile
  1964  001002                     l377:
  1965                           
  1966                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  1967  001002  0100               	movlb	0	; () banked
  1968  001004  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1969  001006  D002               	goto	l378
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  1973  001008  010F               	movlb	15	; () banked
  1974  00100A  8B22               	bsf	34,5,b	;volatile
  1975  00100C                     l378:
  1976                           
  1977                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  1978  00100C  0100               	movlb	0	; () banked
  1979  00100E  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1980  001010  D002               	goto	l379
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  1984  001012  010F               	movlb	15	; () banked
  1985  001014  8D22               	bsf	34,6,b	;volatile
  1986  001016                     l379:
  1987                           
  1988                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  1989  001016  0100               	movlb	0	; () banked
  1990  001018  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1991  00101A  D002               	goto	l4195
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  1995  00101C  010F               	movlb	15	; () banked
  1996  00101E  8F22               	bsf	34,7,b	;volatile
  1997  001020                     l4195:
  1998                           
  1999                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2000  001020  C060  F03C         	movff	CANsendMessage@identifier,??_CANsendMessage
  2001  001024  C061  F03D         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2002  001028  C062  F03E         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2003  00102C  C063  F03F         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2004  001030  0E16               	movlw	22
  2005  001032  D005               	goto	u5270
  2006  001034                     u5275:
  2007  001034  90D8               	bcf	status,0,c
  2008  001036  323F               	rrcf	??_CANsendMessage+3,f,c
  2009  001038  323E               	rrcf	??_CANsendMessage+2,f,c
  2010  00103A  323D               	rrcf	??_CANsendMessage+1,f,c
  2011  00103C  323C               	rrcf	??_CANsendMessage,f,c
  2012  00103E                     u5270:
  2013  00103E  2EE8               	decfsz	wreg,f,c
  2014  001040  D7F9               	goto	u5275
  2015  001042  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  2016  001046  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2017  00104A  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2018  00104E  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2019                           
  2020                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2021  001052  0100               	movlb	0	; () banked
  2022  001054  5168               	movf	CANsendMessage@tamp& (0+255),w,b
  2023  001056  0100               	movlb	0	; () banked
  2024  001058  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  2025  00105A  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2026  00105C  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2027  00105E  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2031  001060  C068  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2032                           
  2033                           ;inc\CANlib.h: 483: }
  2034  001064  D057               	goto	l4215
  2035  001066                     l375:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;inc\CANlib.h: 485: else
  2039                           ;inc\CANlib.h: 487: {
  2040                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2041  001066  010F               	movlb	15	; () banked
  2042  001068  9722               	bcf	34,3,b	;volatile
  2043                           
  2044                           ; BSR set to: 15
  2045                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2046  00106A  C060  F03C         	movff	CANsendMessage@identifier,??_CANsendMessage
  2047  00106E  C061  F03D         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2048  001072  C062  F03E         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2049  001076  C063  F03F         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2050  00107A  0E04               	movlw	4
  2051  00107C  D005               	goto	u5280
  2052  00107E                     u5285:
  2053  00107E  90D8               	bcf	status,0,c
  2054  001080  323F               	rrcf	??_CANsendMessage+3,f,c
  2055  001082  323E               	rrcf	??_CANsendMessage+2,f,c
  2056  001084  323D               	rrcf	??_CANsendMessage+1,f,c
  2057  001086  323C               	rrcf	??_CANsendMessage,f,c
  2058  001088                     u5280:
  2059  001088  2EE8               	decfsz	wreg,f,c
  2060  00108A  D7F9               	goto	u5285
  2061  00108C  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  2062  001090  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2063  001094  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2064  001098  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2065                           
  2066                           ; BSR set to: 15
  2067                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2068  00109C  0100               	movlb	0	; () banked
  2069  00109E  5168               	movf	CANsendMessage@tamp& (0+255),w,b
  2070  0010A0  0100               	movlb	0	; () banked
  2071  0010A2  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  2072  0010A4  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2073  0010A6  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2074  0010A8  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2078  0010AA  C068  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2082  0010AE  0E07               	movlw	7
  2083  0010B0  0100               	movlb	0	; () banked
  2084  0010B2  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  2085  0010B4  0100               	movlb	0	; () banked
  2086  0010B6  6F68               	movwf	CANsendMessage@tamp& (0+255),b
  2087  0010B8  0E00               	movlw	0
  2088  0010BA  0100               	movlb	0	; () banked
  2089  0010BC  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2090  0010BE  0100               	movlb	0	; () banked
  2091  0010C0  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2092  0010C2  0E00               	movlw	0
  2093  0010C4  0100               	movlb	0	; () banked
  2094  0010C6  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2095  0010C8  0100               	movlb	0	; () banked
  2096  0010CA  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2097  0010CC  0E00               	movlw	0
  2098  0010CE  0100               	movlb	0	; () banked
  2099  0010D0  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2100  0010D2  0100               	movlb	0	; () banked
  2101  0010D4  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2105  0010D6  C068  F03C         	movff	CANsendMessage@tamp,??_CANsendMessage
  2106  0010DA  C069  F03D         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2107  0010DE  C06A  F03E         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2108  0010E2  C06B  F03F         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2109  0010E6  0E05               	movlw	5
  2110  0010E8                     u5295:
  2111  0010E8  90D8               	bcf	status,0,c
  2112  0010EA  363C               	rlcf	??_CANsendMessage,f,c
  2113  0010EC  363D               	rlcf	??_CANsendMessage+1,f,c
  2114  0010EE  363E               	rlcf	??_CANsendMessage+2,f,c
  2115  0010F0  363F               	rlcf	??_CANsendMessage+3,f,c
  2116  0010F2  2EE8               	decfsz	wreg,f,c
  2117  0010F4  D7F9               	goto	u5295
  2118  0010F6  C03C  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
  2119  0010FA  C03D  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2120  0010FE  C03E  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2121  001102  C03F  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2125  001106  010F               	movlb	15	; () banked
  2126  001108  5122               	movf	34,w,b	;volatile
  2127  00110A  0B1F               	andlw	31
  2128  00110C  010F               	movlb	15	; () banked
  2129  00110E  6F22               	movwf	34,b	;volatile
  2130                           
  2131                           ; BSR set to: 15
  2132                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2133  001110  C068  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2134  001114                     l4215:
  2135                           
  2136                           ;inc\CANlib.h: 498: }
  2137                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2138  001114  0100               	movlb	0	; () banked
  2139  001116  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  2140  001118  D003               	goto	l382
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2144  00111A  010F               	movlb	15	; () banked
  2145  00111C  8120               	bsf	32,0,b	;volatile
  2146  00111E  D002               	goto	l383
  2147  001120                     l382:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;inc\CANlib.h: 502: else
  2151                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2152  001120  010F               	movlb	15	; () banked
  2153  001122  9120               	bcf	32,0,b	;volatile
  2154  001124                     l383:
  2155                           
  2156                           ; BSR set to: 15
  2157                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2158  001124  0100               	movlb	0	; () banked
  2159  001126  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  2160  001128  D003               	goto	l384
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2164  00112A  010F               	movlb	15	; () banked
  2165  00112C  8320               	bsf	32,1,b	;volatile
  2166  00112E  D002               	goto	l4221
  2167  001130                     l384:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;inc\CANlib.h: 506: else
  2171                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2172  001130  010F               	movlb	15	; () banked
  2173  001132  9320               	bcf	32,1,b	;volatile
  2174  001134                     l4221:
  2175                           
  2176                           ; BSR set to: 15
  2177                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2178  001134  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  2179  001138  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2180  00113C  50DF               	movf	indf2,w,c
  2181  00113E  010F               	movlb	15	; () banked
  2182  001140  6F26               	movwf	38,b	;volatile
  2183                           
  2184                           ; BSR set to: 15
  2185                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2186  001142  0100               	movlb	0	; () banked
  2187  001144  EE20 F001          	lfsr	2,1
  2188  001148  5164               	movf	CANsendMessage@data& (0+255),w,b
  2189  00114A  26D9               	addwf	fsr2l,f,c
  2190  00114C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2191  00114E  22DA               	addwfc	fsr2h,f,c
  2192  001150  50DF               	movf	indf2,w,c
  2193  001152  010F               	movlb	15	; () banked
  2194  001154  6F27               	movwf	39,b	;volatile
  2195                           
  2196                           ; BSR set to: 15
  2197                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2198  001156  0100               	movlb	0	; () banked
  2199  001158  EE20 F002          	lfsr	2,2
  2200  00115C  5164               	movf	CANsendMessage@data& (0+255),w,b
  2201  00115E  26D9               	addwf	fsr2l,f,c
  2202  001160  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2203  001162  22DA               	addwfc	fsr2h,f,c
  2204  001164  50DF               	movf	indf2,w,c
  2205  001166  010F               	movlb	15	; () banked
  2206  001168  6F28               	movwf	40,b	;volatile
  2207                           
  2208                           ; BSR set to: 15
  2209                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2210  00116A  0100               	movlb	0	; () banked
  2211  00116C  EE20 F003          	lfsr	2,3
  2212  001170  5164               	movf	CANsendMessage@data& (0+255),w,b
  2213  001172  26D9               	addwf	fsr2l,f,c
  2214  001174  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2215  001176  22DA               	addwfc	fsr2h,f,c
  2216  001178  50DF               	movf	indf2,w,c
  2217  00117A  010F               	movlb	15	; () banked
  2218  00117C  6F29               	movwf	41,b	;volatile
  2219                           
  2220                           ; BSR set to: 15
  2221                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2222  00117E  0100               	movlb	0	; () banked
  2223  001180  EE20 F004          	lfsr	2,4
  2224  001184  5164               	movf	CANsendMessage@data& (0+255),w,b
  2225  001186  26D9               	addwf	fsr2l,f,c
  2226  001188  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2227  00118A  22DA               	addwfc	fsr2h,f,c
  2228  00118C  50DF               	movf	indf2,w,c
  2229  00118E  010F               	movlb	15	; () banked
  2230  001190  6F2A               	movwf	42,b	;volatile
  2231                           
  2232                           ; BSR set to: 15
  2233                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2234  001192  0100               	movlb	0	; () banked
  2235  001194  EE20 F005          	lfsr	2,5
  2236  001198  5164               	movf	CANsendMessage@data& (0+255),w,b
  2237  00119A  26D9               	addwf	fsr2l,f,c
  2238  00119C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2239  00119E  22DA               	addwfc	fsr2h,f,c
  2240  0011A0  50DF               	movf	indf2,w,c
  2241  0011A2  010F               	movlb	15	; () banked
  2242  0011A4  6F2B               	movwf	43,b	;volatile
  2243                           
  2244                           ; BSR set to: 15
  2245                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2246  0011A6  0100               	movlb	0	; () banked
  2247  0011A8  EE20 F006          	lfsr	2,6
  2248  0011AC  5164               	movf	CANsendMessage@data& (0+255),w,b
  2249  0011AE  26D9               	addwf	fsr2l,f,c
  2250  0011B0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2251  0011B2  22DA               	addwfc	fsr2h,f,c
  2252  0011B4  50DF               	movf	indf2,w,c
  2253  0011B6  010F               	movlb	15	; () banked
  2254  0011B8  6F2C               	movwf	44,b	;volatile
  2255                           
  2256                           ; BSR set to: 15
  2257                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2258  0011BA  0100               	movlb	0	; () banked
  2259  0011BC  EE20 F007          	lfsr	2,7
  2260  0011C0  5164               	movf	CANsendMessage@data& (0+255),w,b
  2261  0011C2  26D9               	addwf	fsr2l,f,c
  2262  0011C4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2263  0011C6  22DA               	addwfc	fsr2h,f,c
  2264  0011C8  50DF               	movf	indf2,w,c
  2265  0011CA  010F               	movlb	15	; () banked
  2266  0011CC  6F2D               	movwf	45,b	;volatile
  2267                           
  2268                           ; BSR set to: 15
  2269                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2270  0011CE  010F               	movlb	15	; () banked
  2271  0011D0  8720               	bsf	32,3,b	;volatile
  2272                           
  2273                           ; BSR set to: 15
  2274                           ;inc\CANlib.h: 520: return;
  2275  0011D2  0012               	return	
  2276  0011D4                     __end_of_CANsendMessage:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodh	equ	0xFF4
  2283                           prodl	equ	0xFF3
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           indf2	equ	0xFDF
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _board_initialization *****************
  2292 ;; Defined at:
  2293 ;;		line 170 in file "Brake_System.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;		None               void
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2307 ;;      Params:         0       0       0       0
  2308 ;;      Locals:         0       0       0       0
  2309 ;;      Temps:          0       0       0       0
  2310 ;;      Totals:         0       0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    4
  2314 ;; This function calls:
  2315 ;;		_CANInitialize
  2316 ;;		_OpenEPWM1
  2317 ;;		_OpenTimer2
  2318 ;;		_SetDCEPWM1
  2319 ;;		_delay_ms
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text3
  2326  001E52                     __ptext3:
  2327                           	opt stack 0
  2328  001E52                     _board_initialization:
  2329                           	opt stack 26
  2330                           
  2331                           ;Brake_System.c: 172: LATA = 0x00;
  2332                           
  2333                           ; BSR set to: 15
  2334                           ;incstack = 0
  2335  001E52  0E00               	movlw	0
  2336  001E54  6E89               	movwf	3977,c	;volatile
  2337                           
  2338                           ;Brake_System.c: 173: TRISA = 0xFF;
  2339  001E56  6892               	setf	3986,c	;volatile
  2340                           
  2341                           ;Brake_System.c: 174: LATB = 0x00;
  2342  001E58  0E00               	movlw	0
  2343  001E5A  6E8A               	movwf	3978,c	;volatile
  2344                           
  2345                           ;Brake_System.c: 175: TRISB = 0b11110110;
  2346  001E5C  0EF6               	movlw	246
  2347  001E5E  6E93               	movwf	3987,c	;volatile
  2348                           
  2349                           ;Brake_System.c: 176: LATC = 0x00;
  2350  001E60  0E00               	movlw	0
  2351  001E62  6E8B               	movwf	3979,c	;volatile
  2352                           
  2353                           ;Brake_System.c: 177: TRISC = 0x00;
  2354  001E64  0E00               	movlw	0
  2355  001E66  6E94               	movwf	3988,c	;volatile
  2356                           
  2357                           ;Brake_System.c: 178: LATD = 0x00;
  2358  001E68  0E00               	movlw	0
  2359  001E6A  6E8C               	movwf	3980,c	;volatile
  2360                           
  2361                           ;Brake_System.c: 179: TRISD = 0xFF;
  2362  001E6C  6895               	setf	3989,c	;volatile
  2363                           
  2364                           ;Brake_System.c: 180: LATE = 0x00;
  2365  001E6E  0E00               	movlw	0
  2366  001E70  6E8D               	movwf	3981,c	;volatile
  2367                           
  2368                           ;Brake_System.c: 181: TRISE = 0xFF;
  2369  001E72  6896               	setf	3990,c	;volatile
  2370                           
  2371                           ;Brake_System.c: 183: ADCON1 = 0x11111110;
  2372  001E74  0E10               	movlw	16
  2373  001E76  6EC1               	movwf	4033,c	;volatile
  2374                           
  2375                           ;Brake_System.c: 186: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONF
      +                          IG_SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2376  001E78  0E06               	movlw	6
  2377  001E7A  0100               	movlb	0	; () banked
  2378  001E7C  6F69               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2379  001E7E  0E05               	movlw	5
  2380  001E80  0100               	movlb	0	; () banked
  2381  001E82  6F6A               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2382  001E84  0E01               	movlw	1
  2383  001E86  0100               	movlb	0	; () banked
  2384  001E88  6F6B               	movwf	CANInitialize@SJW& (0+255),b
  2385  001E8A  0E03               	movlw	3
  2386  001E8C  0100               	movlb	0	; () banked
  2387  001E8E  6F6C               	movwf	CANInitialize@BRP& (0+255),b
  2388  001E90  0E9D               	movlw	157
  2389  001E92  0100               	movlb	0	; () banked
  2390  001E94  6F6D               	movwf	CANInitialize@flags& (0+255),b
  2391  001E96  0E04               	movlw	4
  2392  001E98  EC1F  F00D         	call	_CANInitialize
  2393                           
  2394                           ;Brake_System.c: 187: RCONbits.IPEN = 0;
  2395  001E9C  9ED0               	bcf	4048,7,c	;volatile
  2396                           
  2397                           ;Brake_System.c: 188: PIR3bits.RXB1IF = 0;
  2398  001E9E  92A4               	bcf	4004,1,c	;volatile
  2399                           
  2400                           ;Brake_System.c: 189: PIR3bits.RXB0IF = 0;
  2401  001EA0  90A4               	bcf	4004,0,c	;volatile
  2402                           
  2403                           ;Brake_System.c: 190: PIE3bits.RXB1IE = 1;
  2404  001EA2  82A3               	bsf	4003,1,c	;volatile
  2405                           
  2406                           ;Brake_System.c: 191: PIE3bits.RXB0IE = 1;
  2407  001EA4  80A3               	bsf	4003,0,c	;volatile
  2408                           
  2409                           ;Brake_System.c: 192: INTCONbits.GIE = 1;
  2410  001EA6  8EF2               	bsf	intcon,7,c	;volatile
  2411                           
  2412                           ;Brake_System.c: 193: INTCONbits.PEIE = 1;
  2413  001EA8  8CF2               	bsf	intcon,6,c	;volatile
  2414                           
  2415                           ;Brake_System.c: 196: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
  2416  001EAA  0E04               	movlw	4
  2417  001EAC  EC69  F010         	call	_OpenTimer2
  2418                           
  2419                           ;Brake_System.c: 197: OpenEPWM1(period);
  2420  001EB0  5043               	movf	_period,w,c
  2421  001EB2  EC8B  F010         	call	_OpenEPWM1
  2422                           
  2423                           ;Brake_System.c: 198: SetDCEPWM1(127);
  2424  001EB6  0E00               	movlw	0
  2425  001EB8  6E3D               	movwf	SetDCEPWM1@dutycycle+1,c
  2426  001EBA  0E7F               	movlw	127
  2427  001EBC  6E3C               	movwf	SetDCEPWM1@dutycycle,c
  2428  001EBE  EC1E  F010         	call	_SetDCEPWM1	;wreg free
  2429                           
  2430                           ;Brake_System.c: 201: ADCON1 = 0b01110111;
  2431  001EC2  0E77               	movlw	119
  2432  001EC4  6EC1               	movwf	4033,c	;volatile
  2433                           
  2434                           ;Brake_System.c: 202: ADCON0bits.CHS2 = 0;
  2435  001EC6  98C2               	bcf	4034,4,c	;volatile
  2436                           
  2437                           ;Brake_System.c: 203: ADCON0bits.CHS1 = 0;
  2438  001EC8  96C2               	bcf	4034,3,c	;volatile
  2439                           
  2440                           ;Brake_System.c: 204: ADCON0bits.CHS0 = 0;
  2441  001ECA  94C2               	bcf	4034,2,c	;volatile
  2442                           
  2443                           ;Brake_System.c: 205: ADCON2bits.ACQT2 = 1;
  2444  001ECC  8AC0               	bsf	4032,5,c	;volatile
  2445                           
  2446                           ;Brake_System.c: 206: ADCON2bits.ACQT1 = 1;
  2447  001ECE  88C0               	bsf	4032,4,c	;volatile
  2448                           
  2449                           ;Brake_System.c: 207: ADCON2bits.ACQT0 = 0;
  2450  001ED0  96C0               	bcf	4032,3,c	;volatile
  2451                           
  2452                           ;Brake_System.c: 208: ADCON2bits.ADCS2 = 1;
  2453  001ED2  84C0               	bsf	4032,2,c	;volatile
  2454                           
  2455                           ;Brake_System.c: 209: ADCON2bits.ADCS1 = 0;
  2456  001ED4  92C0               	bcf	4032,1,c	;volatile
  2457                           
  2458                           ;Brake_System.c: 210: ADCON2bits.ADCS0 = 1;
  2459  001ED6  80C0               	bsf	4032,0,c	;volatile
  2460                           
  2461                           ;Brake_System.c: 211: ADCON2bits.ADFM = 0;
  2462  001ED8  9EC0               	bcf	4032,7,c	;volatile
  2463                           
  2464                           ;Brake_System.c: 212: ADCON0bits.ADON = 1;
  2465  001EDA  80C2               	bsf	4034,0,c	;volatile
  2466                           
  2467                           ;Brake_System.c: 214: delay_ms (2);
  2468  001EDC  0E00               	movlw	0
  2469  001EDE  0100               	movlb	0	; () banked
  2470  001EE0  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2471  001EE2  0E02               	movlw	2
  2472  001EE4  6F62               	movwf	delay_ms@value_ms& (0+255),b
  2473  001EE6  EC3B  F010         	call	_delay_ms	;wreg free
  2474  001EEA  0012               	return		;funcret
  2475  001EEC                     __end_of_board_initialization:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           intcon	equ	0xFF2
  2484                           postinc0	equ	0xFEE
  2485                           wreg	equ	0xFE8
  2486                           indf2	equ	0xFDF
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _delay_ms *****************
  2492 ;; Defined at:
  2493 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  value_ms        2    2[BANK0 ] unsigned int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2507 ;;      Params:         0       2       0       0
  2508 ;;      Locals:         0       0       0       0
  2509 ;;      Temps:          0       0       0       0
  2510 ;;      Totals:         0       2       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    3
  2514 ;; This function calls:
  2515 ;;		___wmul
  2516 ;; This function is called by:
  2517 ;;		_board_initialization
  2518 ;;		_delay_s
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text4
  2523  002076                     __ptext4:
  2524                           	opt stack 0
  2525  002076                     _delay_ms:
  2526                           	opt stack 26
  2527                           
  2528                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2529                           
  2530                           ;incstack = 0
  2531  002076  C041  F03C         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2532  00207A  6A3D               	clrf	___wmul@multiplier+1,c
  2533  00207C  C062  F03E         	movff	delay_ms@value_ms,___wmul@multiplicand
  2534  002080  C063  F03F         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2535  002084  EC54  F010         	call	___wmul	;wreg free
  2536  002088  C03C  F005         	movff	?___wmul,_clock_counter_reference	;volatile
  2537  00208C  C03D  F006         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2538                           
  2539                           ;src\delay.c: 75: while (clock_counter_reference) {
  2540  002090  D006               	goto	l549
  2541  002092                     l4243:
  2542                           
  2543                           ;src\delay.c: 85: _delay(240);
  2544  002092  0E50               	movlw	80
  2545  002094                     u5547:
  2546  002094  2EE8               	decfsz	wreg,f,c
  2547  002096  D7FE               	goto	u5547
  2548                           
  2549                           ;src\delay.c: 88: clock_counter_reference--;
  2550  002098  0605               	decf	_clock_counter_reference,f,c	;volatile
  2551  00209A  A0D8               	btfss	status,0,c
  2552  00209C  0606               	decf	_clock_counter_reference+1,f,c	;volatile
  2553  00209E                     l549:
  2554  00209E  5005               	movf	_clock_counter_reference,w,c	;volatile
  2555  0020A0  1006               	iorwf	_clock_counter_reference+1,w,c	;volatile
  2556  0020A2  B4D8               	btfsc	status,2,c
  2557  0020A4  0012               	return	
  2558  0020A6  D7F5               	goto	l4243
  2559  0020A8                     __end_of_delay_ms:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           indf2	equ	0xFDF
  2571                           fsr2h	equ	0xFDA
  2572                           fsr2l	equ	0xFD9
  2573                           status	equ	0xFD8
  2574                           
  2575 ;; *************** function ___wmul *****************
  2576 ;; Defined at:
  2577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  multiplier      2   26[COMRAM] unsigned int 
  2580 ;;  multiplicand    2   28[COMRAM] unsigned int 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  product         2    0[BANK0 ] unsigned int 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2   26[COMRAM] unsigned int 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, prodl, prodh
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2592 ;;      Params:         4       0       0       0
  2593 ;;      Locals:         0       2       0       0
  2594 ;;      Temps:          0       0       0       0
  2595 ;;      Totals:         4       2       0       0
  2596 ;;Total ram usage:        6 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    2
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_delay_ms
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text5
  2607  0020A8                     __ptext5:
  2608                           	opt stack 0
  2609  0020A8                     ___wmul:
  2610                           	opt stack 26
  2611                           
  2612                           ;incstack = 0
  2613  0020A8  503C               	movf	___wmul@multiplier,w,c
  2614  0020AA  023E               	mulwf	___wmul@multiplicand,c
  2615  0020AC  CFF3 F060          	movff	prodl,___wmul@product
  2616  0020B0  CFF4 F061          	movff	prodh,___wmul@product+1
  2617  0020B4  503C               	movf	___wmul@multiplier,w,c
  2618  0020B6  023F               	mulwf	___wmul@multiplicand+1,c
  2619  0020B8  50F3               	movf	prodl,w,c
  2620  0020BA  0100               	movlb	0	; () banked
  2621  0020BC  2761               	addwf	(___wmul@product+1)& (0+255),f,b
  2622  0020BE  503D               	movf	___wmul@multiplier+1,w,c
  2623  0020C0  023E               	mulwf	___wmul@multiplicand,c
  2624  0020C2  50F3               	movf	prodl,w,c
  2625  0020C4  0100               	movlb	0	; () banked
  2626  0020C6  2761               	addwf	(___wmul@product+1)& (0+255),f,b
  2627                           
  2628                           ; BSR set to: 0
  2629  0020C8  C060  F03C         	movff	___wmul@product,?___wmul
  2630  0020CC  C061  F03D         	movff	___wmul@product+1,?___wmul+1
  2631  0020D0  0012               	return	
  2632  0020D2                     __end_of___wmul:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           intcon	equ	0xFF2
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           indf2	equ	0xFDF
  2644                           fsr2h	equ	0xFDA
  2645                           fsr2l	equ	0xFD9
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _SetDCEPWM1 *****************
  2649 ;; Defined at:
  2650 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  dutycycle       2   26[COMRAM] unsigned int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  DCycle          2    0[BANK0 ] struct PWMDC
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2664 ;;      Params:         2       0       0       0
  2665 ;;      Locals:         0       2       0       0
  2666 ;;      Temps:          2       0       0       0
  2667 ;;      Totals:         4       2       0       0
  2668 ;;Total ram usage:        6 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    2
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;;		_board_initialization
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text6
  2680  00203C                     __ptext6:
  2681                           	opt stack 0
  2682  00203C                     _SetDCEPWM1:
  2683                           	opt stack 27
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;incstack = 0
  2687  00203C  C03C  F03E         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  2688  002040  C03D  F03F         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  2689  002044  0E06               	movlw	6
  2690  002046                     u5335:
  2691  002046  90D8               	bcf	status,0,c
  2692  002048  363E               	rlcf	??_SetDCEPWM1,f,c
  2693  00204A  363F               	rlcf	??_SetDCEPWM1+1,f,c
  2694  00204C  2EE8               	decfsz	wreg,f,c
  2695  00204E  D7FB               	goto	u5335
  2696  002050  C03E  F060         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  2697  002054  C03F  F061         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  2698  002058  C061  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  2699  00205C  C060  F03E         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  2700  002060  90D8               	bcf	status,0,c
  2701  002062  323E               	rrcf	??_SetDCEPWM1,f,c
  2702  002064  90D8               	bcf	status,0,c
  2703  002066  323E               	rrcf	??_SetDCEPWM1,f,c
  2704  002068  0E30               	movlw	48
  2705  00206A  163E               	andwf	??_SetDCEPWM1,f,c
  2706  00206C  50BA               	movf	4026,w,c	;volatile
  2707  00206E  0BCF               	andlw	207
  2708  002070  103E               	iorwf	??_SetDCEPWM1,w,c
  2709  002072  6EBA               	movwf	4026,c	;volatile
  2710  002074  0012               	return		;funcret
  2711  002076                     __end_of_SetDCEPWM1:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           prodh	equ	0xFF4
  2718                           prodl	equ	0xFF3
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           indf2	equ	0xFDF
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _OpenTimer2 *****************
  2728 ;; Defined at:
  2729 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  config          1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  config          1   26[COMRAM] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;		None               void
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2743 ;;      Params:         0       0       0       0
  2744 ;;      Locals:         1       0       0       0
  2745 ;;      Temps:          0       0       0       0
  2746 ;;      Totals:         1       0       0       0
  2747 ;;Total ram usage:        1 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    2
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_board_initialization
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text7
  2758  0020D2                     __ptext7:
  2759                           	opt stack 0
  2760  0020D2                     _OpenTimer2:
  2761                           	opt stack 27
  2762                           
  2763                           ;incstack = 0
  2764                           ;OpenTimer2@config stored from wreg
  2765  0020D2  6E3C               	movwf	OpenTimer2@config,c
  2766  0020D4  503C               	movf	OpenTimer2@config,w,c
  2767  0020D6  0BFB               	andlw	251
  2768  0020D8  6ECA               	movwf	4042,c	;volatile
  2769  0020DA  0E00               	movlw	0
  2770  0020DC  6ECC               	movwf	4044,c	;volatile
  2771  0020DE  929E               	bcf	3998,1,c	;volatile
  2772  0020E0  AE3C               	btfss	OpenTimer2@config,7,c
  2773  0020E2  D002               	goto	l667
  2774  0020E4  829D               	bsf	3997,1,c	;volatile
  2775  0020E6  D001               	goto	l668
  2776  0020E8                     l667:
  2777  0020E8  929D               	bcf	3997,1,c	;volatile
  2778  0020EA                     l668:
  2779  0020EA  84CA               	bsf	4042,2,c	;volatile
  2780  0020EC  0012               	return		;funcret
  2781  0020EE                     __end_of_OpenTimer2:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           intcon	equ	0xFF2
  2790                           postinc0	equ	0xFEE
  2791                           wreg	equ	0xFE8
  2792                           indf2	equ	0xFDF
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _OpenEPWM1 *****************
  2798 ;; Defined at:
  2799 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  period          1    wreg     unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  period          1   26[COMRAM] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;		None               void
  2806 ;; Registers used:
  2807 ;;		wreg, status,2
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2813 ;;      Params:         0       0       0       0
  2814 ;;      Locals:         1       0       0       0
  2815 ;;      Temps:          0       0       0       0
  2816 ;;      Totals:         1       0       0       0
  2817 ;;Total ram usage:        1 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    2
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_board_initialization
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text8
  2828  002116                     __ptext8:
  2829                           	opt stack 0
  2830  002116                     _OpenEPWM1:
  2831                           	opt stack 27
  2832                           
  2833                           ;incstack = 0
  2834                           ;OpenEPWM1@period stored from wreg
  2835  002116  6E3C               	movwf	OpenEPWM1@period,c
  2836  002118  0E0C               	movlw	12
  2837  00211A  6EBA               	movwf	4026,c	;volatile
  2838  00211C  94CA               	bcf	4042,2,c	;volatile
  2839  00211E  C03C  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  2840  002122  84CA               	bsf	4042,2,c	;volatile
  2841  002124  0012               	return		;funcret
  2842  002126                     __end_of_OpenEPWM1:
  2843                           	opt stack 0
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           intcon	equ	0xFF2
  2851                           postinc0	equ	0xFEE
  2852                           wreg	equ	0xFE8
  2853                           indf2	equ	0xFDF
  2854                           fsr2h	equ	0xFDA
  2855                           fsr2l	equ	0xFD9
  2856                           status	equ	0xFD8
  2857                           
  2858 ;; *************** function _CANInitialize *****************
  2859 ;; Defined at:
  2860 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  propSeg         1    wreg     unsigned char 
  2863 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  2864 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  2865 ;;  SJW             1   11[BANK0 ] unsigned char 
  2866 ;;  BRP             1   12[BANK0 ] unsigned char 
  2867 ;;  flags           1   13[BANK0 ] enum E16844
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  propSeg         1   18[BANK0 ] unsigned char 
  2870 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  2871 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;		None               void
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2881 ;;      Params:         0       5       0       0
  2882 ;;      Locals:         0       3       0       0
  2883 ;;      Temps:          0       4       0       0
  2884 ;;      Totals:         0      12       0       0
  2885 ;;Total ram usage:       12 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    3
  2888 ;; This function calls:
  2889 ;;		_CANOperationMode
  2890 ;;		_CANSetFilter
  2891 ;;		_CANSetMask
  2892 ;; This function is called by:
  2893 ;;		_board_initialization
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text9
  2898  001A3E                     __ptext9:
  2899                           	opt stack 0
  2900  001A3E                     _CANInitialize:
  2901                           	opt stack 26
  2902                           
  2903                           ;incstack = 0
  2904                           ;CANInitialize@propSeg stored from wreg
  2905  001A3E  0100               	movlb	0	; () banked
  2906  001A40  6F72               	movwf	CANInitialize@propSeg& (0+255),b
  2907                           
  2908                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2909                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2910                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2911  001A42  0E80               	movlw	128
  2912  001A44  EC82  F010         	call	_CANOperationMode
  2913                           
  2914                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2915  001A48  0E00               	movlw	0
  2916  001A4A  6E70               	movwf	3952,c	;volatile
  2917                           
  2918                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2919  001A4C  0E00               	movlw	0
  2920  001A4E  6E71               	movwf	3953,c	;volatile
  2921                           
  2922                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2923  001A50  0E00               	movlw	0
  2924  001A52  6E72               	movwf	3954,c	;volatile
  2925                           
  2926                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2927  001A54  0100               	movlb	0	; () banked
  2928  001A56  416B               	rrncf	CANInitialize@SJW& (0+255),w,b
  2929  001A58  42E8               	rrncf	wreg,f,c
  2930  001A5A  0BC0               	andlw	192
  2931  001A5C  0100               	movlb	0	; () banked
  2932  001A5E  6F6B               	movwf	CANInitialize@SJW& (0+255),b
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2936  001A60  0100               	movlb	0	; () banked
  2937  001A62  516B               	movf	CANInitialize@SJW& (0+255),w,b
  2938  001A64  1270               	iorwf	3952,f,c	;volatile
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2942  001A66  0100               	movlb	0	; () banked
  2943  001A68  516C               	movf	CANInitialize@BRP& (0+255),w,b
  2944  001A6A  1270               	iorwf	3952,f,c	;volatile
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2948  001A6C  0100               	movlb	0	; () banked
  2949  001A6E  5172               	movf	CANInitialize@propSeg& (0+255),w,b
  2950  001A70  1271               	iorwf	3953,f,c	;volatile
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2954  001A72  0100               	movlb	0	; () banked
  2955  001A74  3969               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2956  001A76  42E8               	rrncf	wreg,f,c
  2957  001A78  0BF8               	andlw	248
  2958  001A7A  0100               	movlb	0	; () banked
  2959  001A7C  6F69               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2963  001A7E  0100               	movlb	0	; () banked
  2964  001A80  5169               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2965  001A82  1271               	iorwf	3953,f,c	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2969  001A84  0100               	movlb	0	; () banked
  2970  001A86  A56D               	btfss	CANInitialize@flags& (0+255),2,b
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2974  001A88  8C71               	bsf	3953,6,c	;volatile
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2978  001A8A  0100               	movlb	0	; () banked
  2979  001A8C  B16D               	btfsc	CANInitialize@flags& (0+255),0,b
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2983  001A8E  8E71               	bsf	3953,7,c	;volatile
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2987                           
  2988                           ; BSR set to: 0
  2989  001A90  0100               	movlb	0	; () banked
  2990  001A92  516A               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2991  001A94  1272               	iorwf	3954,f,c	;volatile
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2995  001A96  0100               	movlb	0	; () banked
  2996  001A98  B36D               	btfsc	CANInitialize@flags& (0+255),1,b
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3000  001A9A  8C72               	bsf	3954,6,c	;volatile
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3004                           
  3005                           ; BSR set to: 0
  3006  001A9C  0100               	movlb	0	; () banked
  3007  001A9E  516D               	movf	CANInitialize@flags& (0+255),w,b
  3008  001AA0  0B60               	andlw	96
  3009  001AA2  6E60               	movwf	3936,c	;volatile
  3010                           
  3011                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3012  001AA4  0100               	movlb	0	; () banked
  3013  001AA6  516D               	movf	CANInitialize@flags& (0+255),w,b
  3014  001AA8  0B10               	andlw	16
  3015  001AAA  0AFF               	xorlw	255
  3016  001AAC  B4D8               	btfsc	status,2,c
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3020  001AAE  8460               	bsf	3936,2,c	;volatile
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3024  001AB0  CF60 FF50          	movff	3936,3920	;volatile
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3028  001AB4  0E00               	movlw	0
  3029  001AB6  6E3C               	movwf	CANSetMask@mask,c
  3030  001AB8  0E00               	movlw	0
  3031  001ABA  6E3D               	movwf	CANSetMask@mask+1,c
  3032  001ABC  0E00               	movlw	0
  3033  001ABE  6E3E               	movwf	CANSetMask@mask+2,c
  3034  001AC0  0E00               	movlw	0
  3035  001AC2  6E3F               	movwf	CANSetMask@mask+3,c
  3036  001AC4  0EF7               	movlw	247
  3037  001AC6  6E40               	movwf	CANSetMask@type,c
  3038  001AC8  0E01               	movlw	1
  3039  001ACA  EC70  F00B         	call	_CANSetMask
  3040                           
  3041                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3042  001ACE  0E00               	movlw	0
  3043  001AD0  6E3C               	movwf	CANSetMask@mask,c
  3044  001AD2  0E00               	movlw	0
  3045  001AD4  6E3D               	movwf	CANSetMask@mask+1,c
  3046  001AD6  0E00               	movlw	0
  3047  001AD8  6E3E               	movwf	CANSetMask@mask+2,c
  3048  001ADA  0E00               	movlw	0
  3049  001ADC  6E3F               	movwf	CANSetMask@mask+3,c
  3050  001ADE  0EF7               	movlw	247
  3051  001AE0  6E40               	movwf	CANSetMask@type,c
  3052  001AE2  0E02               	movlw	2
  3053  001AE4  EC70  F00B         	call	_CANSetMask
  3054                           
  3055                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3056  001AE8  D00F               	goto	l4003
  3057  001AEA                     l3997:
  3058                           
  3059                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3060  001AEA  0EF7               	movlw	247
  3061  001AEC  0100               	movlb	0	; () banked
  3062  001AEE  6F73               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3063  001AF0  D007               	goto	l3999
  3064  001AF2                     l338:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3068  001AF2  0100               	movlb	0	; () banked
  3069  001AF4  6973               	setf	CANInitialize@FilterConfig1& (0+255),b
  3070                           
  3071                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3072  001AF6  0100               	movlb	0	; () banked
  3073  001AF8  6974               	setf	CANInitialize@FilterConfig2& (0+255),b
  3074                           
  3075                           ;inc\CANlib.h: 273: break;
  3076  001AFA  D028               	goto	l4005
  3077  001AFC                     l339:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3081  001AFC  0100               	movlb	0	; () banked
  3082  001AFE  6973               	setf	CANInitialize@FilterConfig1& (0+255),b
  3083  001B00                     l3999:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3087  001B00  0EF7               	movlw	247
  3088  001B02  0100               	movlb	0	; () banked
  3089  001B04  6F74               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;inc\CANlib.h: 278: }
  3093                           
  3094                           ;inc\CANlib.h: 277: break;
  3095  001B06  D022               	goto	l4005
  3096  001B08                     l4003:
  3097  001B08  0E9F               	movlw	159
  3098  001B0A  0100               	movlb	0	; () banked
  3099  001B0C  6F6E               	movwf	??_CANInitialize& (0+255),b
  3100  001B0E  0EFF               	movlw	255
  3101  001B10  0100               	movlb	0	; () banked
  3102  001B12  6F6F               	movwf	(??_CANInitialize+1)& (0+255),b
  3103  001B14  0100               	movlb	0	; () banked
  3104  001B16  516D               	movf	CANInitialize@flags& (0+255),w,b
  3105  001B18  0B60               	andlw	96
  3106  001B1A  0100               	movlb	0	; () banked
  3107  001B1C  6F70               	movwf	(??_CANInitialize+2)& (0+255),b
  3108  001B1E  6B71               	clrf	(??_CANInitialize+3)& (0+255),b
  3109  001B20  0100               	movlb	0	; () banked
  3110  001B22  516E               	movf	??_CANInitialize& (0+255),w,b
  3111  001B24  0100               	movlb	0	; () banked
  3112  001B26  1370               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3113  001B28  0100               	movlb	0	; () banked
  3114  001B2A  516F               	movf	(??_CANInitialize+1)& (0+255),w,b
  3115  001B2C  0100               	movlb	0	; () banked
  3116  001B2E  1371               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3117                           
  3118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3119                           ; Switch size 1, requested type "space"
  3120                           ; Number of cases is 1, Range of values is 0 to 0
  3121                           ; switch strategies available:
  3122                           ; Name         Instructions Cycles
  3123                           ; simple_byte            4     3 (average)
  3124                           ;	Chosen strategy is simple_byte
  3125  001B30  0100               	movlb	0	; () banked
  3126  001B32  5171               	movf	(??_CANInitialize+3)& (0+255),w,b
  3127  001B34  0A00               	xorlw	0	; case 0
  3128  001B36  A4D8               	btfss	status,2,c
  3129  001B38  D7E1               	goto	l339
  3130                           
  3131                           ; BSR set to: 0
  3132                           ; Switch size 1, requested type "space"
  3133                           ; Number of cases is 2, Range of values is 191 to 223
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte            7     4 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138  001B3A  0100               	movlb	0	; () banked
  3139  001B3C  5170               	movf	(??_CANInitialize+2)& (0+255),w,b
  3140  001B3E  0ABF               	xorlw	191	; case 191
  3141  001B40  B4D8               	btfsc	status,2,c
  3142  001B42  D7D7               	goto	l338
  3143  001B44  0A60               	xorlw	96	; case 223
  3144  001B46  B4D8               	btfsc	status,2,c
  3145  001B48  D7D0               	goto	l3997
  3146  001B4A  D7D8               	goto	l339
  3147  001B4C                     l4005:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3151  001B4C  0E00               	movlw	0
  3152  001B4E  6E3C               	movwf	CANSetFilter@filter,c
  3153  001B50  0E00               	movlw	0
  3154  001B52  6E3D               	movwf	CANSetFilter@filter+1,c
  3155  001B54  0E00               	movlw	0
  3156  001B56  6E3E               	movwf	CANSetFilter@filter+2,c
  3157  001B58  0E00               	movlw	0
  3158  001B5A  6E3F               	movwf	CANSetFilter@filter+3,c
  3159  001B5C  C073  F040         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3160  001B60  0E00               	movlw	0
  3161  001B62  EC0D  F000         	call	_CANSetFilter
  3162                           
  3163                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3164  001B66  0E00               	movlw	0
  3165  001B68  6E3C               	movwf	CANSetFilter@filter,c
  3166  001B6A  0E00               	movlw	0
  3167  001B6C  6E3D               	movwf	CANSetFilter@filter+1,c
  3168  001B6E  0E00               	movlw	0
  3169  001B70  6E3E               	movwf	CANSetFilter@filter+2,c
  3170  001B72  0E00               	movlw	0
  3171  001B74  6E3F               	movwf	CANSetFilter@filter+3,c
  3172  001B76  C073  F040         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3173  001B7A  0E01               	movlw	1
  3174  001B7C  EC0D  F000         	call	_CANSetFilter
  3175                           
  3176                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3177  001B80  0E00               	movlw	0
  3178  001B82  6E3C               	movwf	CANSetFilter@filter,c
  3179  001B84  0E00               	movlw	0
  3180  001B86  6E3D               	movwf	CANSetFilter@filter+1,c
  3181  001B88  0E00               	movlw	0
  3182  001B8A  6E3E               	movwf	CANSetFilter@filter+2,c
  3183  001B8C  0E00               	movlw	0
  3184  001B8E  6E3F               	movwf	CANSetFilter@filter+3,c
  3185  001B90  C074  F040         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3186  001B94  0E02               	movlw	2
  3187  001B96  EC0D  F000         	call	_CANSetFilter
  3188                           
  3189                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3190  001B9A  0E00               	movlw	0
  3191  001B9C  6E3C               	movwf	CANSetFilter@filter,c
  3192  001B9E  0E00               	movlw	0
  3193  001BA0  6E3D               	movwf	CANSetFilter@filter+1,c
  3194  001BA2  0E00               	movlw	0
  3195  001BA4  6E3E               	movwf	CANSetFilter@filter+2,c
  3196  001BA6  0E00               	movlw	0
  3197  001BA8  6E3F               	movwf	CANSetFilter@filter+3,c
  3198  001BAA  C074  F040         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3199  001BAE  0E03               	movlw	3
  3200  001BB0  EC0D  F000         	call	_CANSetFilter
  3201                           
  3202                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3203  001BB4  0E00               	movlw	0
  3204  001BB6  6E3C               	movwf	CANSetFilter@filter,c
  3205  001BB8  0E00               	movlw	0
  3206  001BBA  6E3D               	movwf	CANSetFilter@filter+1,c
  3207  001BBC  0E00               	movlw	0
  3208  001BBE  6E3E               	movwf	CANSetFilter@filter+2,c
  3209  001BC0  0E00               	movlw	0
  3210  001BC2  6E3F               	movwf	CANSetFilter@filter+3,c
  3211  001BC4  C074  F040         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3212  001BC8  0E04               	movlw	4
  3213  001BCA  EC0D  F000         	call	_CANSetFilter
  3214                           
  3215                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3216  001BCE  0E00               	movlw	0
  3217  001BD0  6E3C               	movwf	CANSetFilter@filter,c
  3218  001BD2  0E00               	movlw	0
  3219  001BD4  6E3D               	movwf	CANSetFilter@filter+1,c
  3220  001BD6  0E00               	movlw	0
  3221  001BD8  6E3E               	movwf	CANSetFilter@filter+2,c
  3222  001BDA  0E00               	movlw	0
  3223  001BDC  6E3F               	movwf	CANSetFilter@filter+3,c
  3224  001BDE  C074  F040         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3225  001BE2  0E05               	movlw	5
  3226  001BE4  EC0D  F000         	call	_CANSetFilter
  3227                           
  3228                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3229  001BE8  0E00               	movlw	0
  3230  001BEA  EC82  F010         	call	_CANOperationMode
  3231  001BEE  0012               	return		;funcret
  3232  001BF0                     __end_of_CANInitialize:
  3233                           	opt stack 0
  3234                           tblptru	equ	0xFF8
  3235                           tblptrh	equ	0xFF7
  3236                           tblptrl	equ	0xFF6
  3237                           tablat	equ	0xFF5
  3238                           prodh	equ	0xFF4
  3239                           prodl	equ	0xFF3
  3240                           intcon	equ	0xFF2
  3241                           postinc0	equ	0xFEE
  3242                           wreg	equ	0xFE8
  3243                           indf2	equ	0xFDF
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _CANSetMask *****************
  3249 ;; Defined at:
  3250 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  numBuffer       1    wreg     enum E16878
  3253 ;;  mask            4   26[COMRAM] unsigned long 
  3254 ;;  type            1   30[COMRAM] enum E16844
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  numBuffer       1    4[BANK0 ] enum E16878
  3257 ;;  tamp            4    5[BANK0 ] unsigned long 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3267 ;;      Params:         5       0       0       0
  3268 ;;      Locals:         0       5       0       0
  3269 ;;      Temps:          0       4       0       0
  3270 ;;      Totals:         5       9       0       0
  3271 ;;Total ram usage:       14 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_CANInitialize
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text10
  3282  0016E0                     __ptext10:
  3283                           	opt stack 0
  3284  0016E0                     _CANSetMask:
  3285                           	opt stack 26
  3286                           
  3287                           ;incstack = 0
  3288                           ;CANSetMask@numBuffer stored from wreg
  3289  0016E0  0100               	movlb	0	; () banked
  3290  0016E2  6F64               	movwf	CANSetMask@numBuffer& (0+255),b
  3291                           
  3292                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3293  0016E4  0100               	movlb	0	; () banked
  3294  0016E6  0564               	decf	CANSetMask@numBuffer& (0+255),w,b
  3295  0016E8  A4D8               	btfss	status,2,c
  3296  0016EA  D051               	goto	l3561
  3297                           
  3298                           ; BSR set to: 0
  3299  0016EC  2840               	incf	CANSetMask@type,w,c
  3300  0016EE  A4D8               	btfss	status,2,c
  3301  0016F0  D04E               	goto	l3561
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;inc\CANlib.h: 644: {
  3305                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3306  0016F2  C03C  F060         	movff	CANSetMask@mask,??_CANSetMask
  3307  0016F6  C03D  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3308  0016FA  C03E  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3309  0016FE  C03F  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3310  001702  0E04               	movlw	4
  3311  001704  D006               	goto	u3950
  3312  001706                     u3955:
  3313  001706  0100               	movlb	0	; () banked
  3314  001708  90D8               	bcf	status,0,c
  3315  00170A  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3316  00170C  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3317  00170E  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3318  001710  3360               	rrcf	??_CANSetMask& (0+255),f,b
  3319  001712                     u3950:
  3320  001712  2EE8               	decfsz	wreg,f,c
  3321  001714  D7F8               	goto	u3955
  3322  001716  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3323  00171A  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3324  00171E  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3325  001722  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3329  001726  0100               	movlb	0	; () banked
  3330  001728  5165               	movf	CANSetMask@tamp& (0+255),w,b
  3331  00172A  0100               	movlb	0	; () banked
  3332  00172C  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3333  00172E  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3334  001730  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3335  001732  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3339  001734  C065  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3343  001738  0E07               	movlw	7
  3344  00173A  143C               	andwf	CANSetMask@mask,w,c
  3345  00173C  0100               	movlb	0	; () banked
  3346  00173E  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3347  001740  0E00               	movlw	0
  3348  001742  143D               	andwf	CANSetMask@mask+1,w,c
  3349  001744  0100               	movlb	0	; () banked
  3350  001746  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3351  001748  0E00               	movlw	0
  3352  00174A  143E               	andwf	CANSetMask@mask+2,w,c
  3353  00174C  0100               	movlb	0	; () banked
  3354  00174E  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3355  001750  0E00               	movlw	0
  3356  001752  143F               	andwf	CANSetMask@mask+3,w,c
  3357  001754  0100               	movlb	0	; () banked
  3358  001756  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3362  001758  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  3363  00175C  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3364  001760  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3365  001764  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3366  001768  0E05               	movlw	5
  3367  00176A                     u3965:
  3368  00176A  90D8               	bcf	status,0,c
  3369  00176C  0100               	movlb	0	; () banked
  3370  00176E  3760               	rlcf	??_CANSetMask& (0+255),f,b
  3371  001770  3761               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3372  001772  3762               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3373  001774  3763               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3374  001776  2EE8               	decfsz	wreg,f,c
  3375  001778  D7F8               	goto	u3965
  3376  00177A  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3377  00177E  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3378  001782  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3379  001786  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3383  00178A  C065  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3384  00178E                     l3561:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;inc\CANlib.h: 652: }
  3388                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3389  00178E  0E02               	movlw	2
  3390  001790  0100               	movlb	0	; () banked
  3391  001792  1964               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3392  001794  A4D8               	btfss	status,2,c
  3393  001796  D051               	goto	l3577
  3394                           
  3395                           ; BSR set to: 0
  3396  001798  2840               	incf	CANSetMask@type,w,c
  3397  00179A  A4D8               	btfss	status,2,c
  3398  00179C  D04E               	goto	l3577
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;inc\CANlib.h: 655: {
  3402                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3403  00179E  C03C  F060         	movff	CANSetMask@mask,??_CANSetMask
  3404  0017A2  C03D  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3405  0017A6  C03E  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3406  0017AA  C03F  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3407  0017AE  0E04               	movlw	4
  3408  0017B0  D006               	goto	u3990
  3409  0017B2                     u3995:
  3410  0017B2  0100               	movlb	0	; () banked
  3411  0017B4  90D8               	bcf	status,0,c
  3412  0017B6  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3413  0017B8  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3414  0017BA  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3415  0017BC  3360               	rrcf	??_CANSetMask& (0+255),f,b
  3416  0017BE                     u3990:
  3417  0017BE  2EE8               	decfsz	wreg,f,c
  3418  0017C0  D7F8               	goto	u3995
  3419  0017C2  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3420  0017C6  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3421  0017CA  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3422  0017CE  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3426  0017D2  0100               	movlb	0	; () banked
  3427  0017D4  5165               	movf	CANSetMask@tamp& (0+255),w,b
  3428  0017D6  0100               	movlb	0	; () banked
  3429  0017D8  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3430  0017DA  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3431  0017DC  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3432  0017DE  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3436  0017E0  C065  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3440  0017E4  0E07               	movlw	7
  3441  0017E6  143C               	andwf	CANSetMask@mask,w,c
  3442  0017E8  0100               	movlb	0	; () banked
  3443  0017EA  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3444  0017EC  0E00               	movlw	0
  3445  0017EE  143D               	andwf	CANSetMask@mask+1,w,c
  3446  0017F0  0100               	movlb	0	; () banked
  3447  0017F2  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3448  0017F4  0E00               	movlw	0
  3449  0017F6  143E               	andwf	CANSetMask@mask+2,w,c
  3450  0017F8  0100               	movlb	0	; () banked
  3451  0017FA  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3452  0017FC  0E00               	movlw	0
  3453  0017FE  143F               	andwf	CANSetMask@mask+3,w,c
  3454  001800  0100               	movlb	0	; () banked
  3455  001802  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3459  001804  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  3460  001808  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3461  00180C  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3462  001810  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3463  001814  0E05               	movlw	5
  3464  001816                     u4005:
  3465  001816  90D8               	bcf	status,0,c
  3466  001818  0100               	movlb	0	; () banked
  3467  00181A  3760               	rlcf	??_CANSetMask& (0+255),f,b
  3468  00181C  3761               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3469  00181E  3762               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3470  001820  3763               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3471  001822  2EE8               	decfsz	wreg,f,c
  3472  001824  D7F8               	goto	u4005
  3473  001826  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3474  00182A  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3475  00182E  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3476  001832  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3480  001836  C065  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3481  00183A                     l3577:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 663: }
  3485                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3486  00183A  0100               	movlb	0	; () banked
  3487  00183C  0564               	decf	CANSetMask@numBuffer& (0+255),w,b
  3488  00183E  A4D8               	btfss	status,2,c
  3489  001840  D07C               	goto	l3609
  3490                           
  3491                           ; BSR set to: 0
  3492  001842  0EF7               	movlw	247
  3493  001844  1840               	xorwf	CANSetMask@type,w,c
  3494  001846  A4D8               	btfss	status,2,c
  3495  001848  D078               	goto	l3609
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;inc\CANlib.h: 666: {
  3499                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3500  00184A  503C               	movf	CANSetMask@mask,w,c
  3501  00184C  0100               	movlb	0	; () banked
  3502  00184E  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3503  001850  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3504  001852  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3505  001854  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3509  001856  C065  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3513  00185A  0E00               	movlw	0
  3514  00185C  143C               	andwf	CANSetMask@mask,w,c
  3515  00185E  0100               	movlb	0	; () banked
  3516  001860  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3517  001862  0EFF               	movlw	255
  3518  001864  143D               	andwf	CANSetMask@mask+1,w,c
  3519  001866  0100               	movlb	0	; () banked
  3520  001868  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3521  00186A  0E00               	movlw	0
  3522  00186C  143E               	andwf	CANSetMask@mask+2,w,c
  3523  00186E  0100               	movlb	0	; () banked
  3524  001870  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3525  001872  0E00               	movlw	0
  3526  001874  143F               	andwf	CANSetMask@mask+3,w,c
  3527  001876  0100               	movlb	0	; () banked
  3528  001878  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3532  00187A  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  3533  00187E  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3534  001882  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3535  001886  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3536  00188A  C061  F060         	movff	??_CANSetMask+1,??_CANSetMask
  3537  00188E  C062  F061         	movff	??_CANSetMask+2,??_CANSetMask+1
  3538  001892  C063  F062         	movff	??_CANSetMask+3,??_CANSetMask+2
  3539  001896  0100               	movlb	0	; () banked
  3540  001898  6B63               	clrf	(??_CANSetMask+3)& (0+255),b
  3541  00189A  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3542  00189E  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3543  0018A2  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3544  0018A6  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3548  0018AA  C065  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3552  0018AE  A03E               	btfss	CANSetMask@mask+2,0,c
  3553  0018B0  D003               	goto	l412
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3557  0018B2  010F               	movlb	15	; () banked
  3558  0018B4  8119               	bsf	25,0,b	;volatile
  3559  0018B6  D002               	goto	l413
  3560  0018B8                     l412:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;inc\CANlib.h: 676: else
  3564                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3565  0018B8  010F               	movlb	15	; () banked
  3566  0018BA  9119               	bcf	25,0,b	;volatile
  3567  0018BC                     l413:
  3568                           
  3569                           ; BSR set to: 15
  3570                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3571  0018BC  A23E               	btfss	CANSetMask@mask+2,1,c
  3572  0018BE  D003               	goto	l414
  3573                           
  3574                           ; BSR set to: 15
  3575                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3576  0018C0  010F               	movlb	15	; () banked
  3577  0018C2  8319               	bsf	25,1,b	;volatile
  3578  0018C4  D002               	goto	l415
  3579  0018C6                     l414:
  3580                           
  3581                           ; BSR set to: 15
  3582                           ;inc\CANlib.h: 681: else
  3583                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3584  0018C6  010F               	movlb	15	; () banked
  3585  0018C8  9319               	bcf	25,1,b	;volatile
  3586  0018CA                     l415:
  3587                           
  3588                           ; BSR set to: 15
  3589                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3590  0018CA  A43E               	btfss	CANSetMask@mask+2,2,c
  3591  0018CC  D003               	goto	l416
  3592                           
  3593                           ; BSR set to: 15
  3594                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3595  0018CE  010F               	movlb	15	; () banked
  3596  0018D0  8B19               	bsf	25,5,b	;volatile
  3597  0018D2  D002               	goto	l417
  3598  0018D4                     l416:
  3599                           
  3600                           ; BSR set to: 15
  3601                           ;inc\CANlib.h: 686: else
  3602                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3603  0018D4  010F               	movlb	15	; () banked
  3604  0018D6  9B19               	bcf	25,5,b	;volatile
  3605  0018D8                     l417:
  3606                           
  3607                           ; BSR set to: 15
  3608                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3609  0018D8  A63E               	btfss	CANSetMask@mask+2,3,c
  3610  0018DA  D003               	goto	l418
  3611                           
  3612                           ; BSR set to: 15
  3613                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3614  0018DC  010F               	movlb	15	; () banked
  3615  0018DE  8D19               	bsf	25,6,b	;volatile
  3616  0018E0  D002               	goto	l419
  3617  0018E2                     l418:
  3618                           
  3619                           ; BSR set to: 15
  3620                           ;inc\CANlib.h: 691: else
  3621                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3622  0018E2  010F               	movlb	15	; () banked
  3623  0018E4  9D19               	bcf	25,6,b	;volatile
  3624  0018E6                     l419:
  3625                           
  3626                           ; BSR set to: 15
  3627                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3628  0018E6  A83E               	btfss	CANSetMask@mask+2,4,c
  3629  0018E8  D003               	goto	l420
  3630                           
  3631                           ; BSR set to: 15
  3632                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3633  0018EA  010F               	movlb	15	; () banked
  3634  0018EC  8F19               	bsf	25,7,b	;volatile
  3635  0018EE  D002               	goto	l3603
  3636  0018F0                     l420:
  3637                           
  3638                           ; BSR set to: 15
  3639                           ;inc\CANlib.h: 696: else
  3640                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3641  0018F0  010F               	movlb	15	; () banked
  3642  0018F2  9F19               	bcf	25,7,b	;volatile
  3643  0018F4                     l3603:
  3644                           
  3645                           ; BSR set to: 15
  3646                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3647  0018F4  C03C  F060         	movff	CANSetMask@mask,??_CANSetMask
  3648  0018F8  C03D  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3649  0018FC  C03E  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3650  001900  C03F  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3651  001904  0E16               	movlw	22
  3652  001906  D006               	goto	u4080
  3653  001908                     u4085:
  3654  001908  0100               	movlb	0	; () banked
  3655  00190A  90D8               	bcf	status,0,c
  3656  00190C  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3657  00190E  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3658  001910  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3659  001912  3360               	rrcf	??_CANSetMask& (0+255),f,b
  3660  001914                     u4080:
  3661  001914  2EE8               	decfsz	wreg,f,c
  3662  001916  D7F8               	goto	u4085
  3663  001918  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3664  00191C  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3665  001920  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3666  001924  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3670  001928  0100               	movlb	0	; () banked
  3671  00192A  5165               	movf	CANSetMask@tamp& (0+255),w,b
  3672  00192C  0100               	movlb	0	; () banked
  3673  00192E  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3674  001930  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3675  001932  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3676  001934  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3680  001936  C065  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3681  00193A                     l3609:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;inc\CANlib.h: 702: }
  3685                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3686  00193A  0E02               	movlw	2
  3687  00193C  0100               	movlb	0	; () banked
  3688  00193E  1964               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3689  001940  A4D8               	btfss	status,2,c
  3690  001942  0012               	return	
  3691                           
  3692                           ; BSR set to: 0
  3693  001944  0EF7               	movlw	247
  3694  001946  1840               	xorwf	CANSetMask@type,w,c
  3695  001948  A4D8               	btfss	status,2,c
  3696  00194A  0012               	return	
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;inc\CANlib.h: 705: {
  3700                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3701  00194C  503C               	movf	CANSetMask@mask,w,c
  3702  00194E  0100               	movlb	0	; () banked
  3703  001950  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3704  001952  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3705  001954  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3706  001956  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3710  001958  C065  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3714  00195C  0E00               	movlw	0
  3715  00195E  143C               	andwf	CANSetMask@mask,w,c
  3716  001960  0100               	movlb	0	; () banked
  3717  001962  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3718  001964  0EFF               	movlw	255
  3719  001966  143D               	andwf	CANSetMask@mask+1,w,c
  3720  001968  0100               	movlb	0	; () banked
  3721  00196A  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3722  00196C  0E00               	movlw	0
  3723  00196E  143E               	andwf	CANSetMask@mask+2,w,c
  3724  001970  0100               	movlb	0	; () banked
  3725  001972  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3726  001974  0E00               	movlw	0
  3727  001976  143F               	andwf	CANSetMask@mask+3,w,c
  3728  001978  0100               	movlb	0	; () banked
  3729  00197A  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3733  00197C  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  3734  001980  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3735  001984  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3736  001988  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3737  00198C  C061  F060         	movff	??_CANSetMask+1,??_CANSetMask
  3738  001990  C062  F061         	movff	??_CANSetMask+2,??_CANSetMask+1
  3739  001994  C063  F062         	movff	??_CANSetMask+3,??_CANSetMask+2
  3740  001998  0100               	movlb	0	; () banked
  3741  00199A  6B63               	clrf	(??_CANSetMask+3)& (0+255),b
  3742  00199C  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3743  0019A0  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3744  0019A4  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3745  0019A8  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3749  0019AC  C065  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3753  0019B0  A03E               	btfss	CANSetMask@mask+2,0,c
  3754  0019B2  D003               	goto	l423
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3758  0019B4  010F               	movlb	15	; () banked
  3759  0019B6  811D               	bsf	29,0,b	;volatile
  3760  0019B8  D002               	goto	l424
  3761  0019BA                     l423:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;inc\CANlib.h: 715: else
  3765                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3766  0019BA  010F               	movlb	15	; () banked
  3767  0019BC  911D               	bcf	29,0,b	;volatile
  3768  0019BE                     l424:
  3769                           
  3770                           ; BSR set to: 15
  3771                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3772  0019BE  A23E               	btfss	CANSetMask@mask+2,1,c
  3773  0019C0  D003               	goto	l425
  3774                           
  3775                           ; BSR set to: 15
  3776                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3777  0019C2  010F               	movlb	15	; () banked
  3778  0019C4  831D               	bsf	29,1,b	;volatile
  3779  0019C6  D002               	goto	l426
  3780  0019C8                     l425:
  3781                           
  3782                           ; BSR set to: 15
  3783                           ;inc\CANlib.h: 720: else
  3784                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3785  0019C8  010F               	movlb	15	; () banked
  3786  0019CA  931D               	bcf	29,1,b	;volatile
  3787  0019CC                     l426:
  3788                           
  3789                           ; BSR set to: 15
  3790                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3791  0019CC  A43E               	btfss	CANSetMask@mask+2,2,c
  3792  0019CE  D003               	goto	l427
  3793                           
  3794                           ; BSR set to: 15
  3795                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3796  0019D0  010F               	movlb	15	; () banked
  3797  0019D2  8B1D               	bsf	29,5,b	;volatile
  3798  0019D4  D002               	goto	l428
  3799  0019D6                     l427:
  3800                           
  3801                           ; BSR set to: 15
  3802                           ;inc\CANlib.h: 725: else
  3803                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3804  0019D6  010F               	movlb	15	; () banked
  3805  0019D8  9B1D               	bcf	29,5,b	;volatile
  3806  0019DA                     l428:
  3807                           
  3808                           ; BSR set to: 15
  3809                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3810  0019DA  A63E               	btfss	CANSetMask@mask+2,3,c
  3811  0019DC  D003               	goto	l429
  3812                           
  3813                           ; BSR set to: 15
  3814                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3815  0019DE  010F               	movlb	15	; () banked
  3816  0019E0  8D1D               	bsf	29,6,b	;volatile
  3817  0019E2  D002               	goto	l430
  3818  0019E4                     l429:
  3819                           
  3820                           ; BSR set to: 15
  3821                           ;inc\CANlib.h: 730: else
  3822                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3823  0019E4  010F               	movlb	15	; () banked
  3824  0019E6  9D1D               	bcf	29,6,b	;volatile
  3825  0019E8                     l430:
  3826                           
  3827                           ; BSR set to: 15
  3828                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3829  0019E8  A83E               	btfss	CANSetMask@mask+2,4,c
  3830  0019EA  D003               	goto	l431
  3831                           
  3832                           ; BSR set to: 15
  3833                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3834  0019EC  010F               	movlb	15	; () banked
  3835  0019EE  8F1D               	bsf	29,7,b	;volatile
  3836  0019F0  D002               	goto	l3635
  3837  0019F2                     l431:
  3838                           
  3839                           ; BSR set to: 15
  3840                           ;inc\CANlib.h: 735: else
  3841                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3842  0019F2  010F               	movlb	15	; () banked
  3843  0019F4  9F1D               	bcf	29,7,b	;volatile
  3844  0019F6                     l3635:
  3845                           
  3846                           ; BSR set to: 15
  3847                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3848  0019F6  C03C  F060         	movff	CANSetMask@mask,??_CANSetMask
  3849  0019FA  C03D  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3850  0019FE  C03E  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3851  001A02  C03F  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3852  001A06  0E16               	movlw	22
  3853  001A08  D006               	goto	u4160
  3854  001A0A                     u4165:
  3855  001A0A  0100               	movlb	0	; () banked
  3856  001A0C  90D8               	bcf	status,0,c
  3857  001A0E  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3858  001A10  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3859  001A12  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3860  001A14  3360               	rrcf	??_CANSetMask& (0+255),f,b
  3861  001A16                     u4160:
  3862  001A16  2EE8               	decfsz	wreg,f,c
  3863  001A18  D7F8               	goto	u4165
  3864  001A1A  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  3865  001A1E  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3866  001A22  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3867  001A26  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3871  001A2A  0100               	movlb	0	; () banked
  3872  001A2C  5165               	movf	CANSetMask@tamp& (0+255),w,b
  3873  001A2E  0100               	movlb	0	; () banked
  3874  001A30  6F65               	movwf	CANSetMask@tamp& (0+255),b
  3875  001A32  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3876  001A34  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3877  001A36  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3881  001A38  C065  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3882  001A3C  0012               	return	
  3883  001A3E                     __end_of_CANSetMask:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           indf2	equ	0xFDF
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function _CANSetFilter *****************
  3900 ;; Defined at:
  3901 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  numBuffer       1    wreg     enum E16881
  3904 ;;  filter          4   26[COMRAM] unsigned long 
  3905 ;;  type            1   30[COMRAM] enum E16844
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  numBuffer       1    4[BANK0 ] enum E16881
  3908 ;;  tamp            4    5[BANK0 ] unsigned long 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;		None               void
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3918 ;;      Params:         5       0       0       0
  3919 ;;      Locals:         0       5       0       0
  3920 ;;      Temps:          0       4       0       0
  3921 ;;      Totals:         5       9       0       0
  3922 ;;Total ram usage:       14 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    2
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_CANInitialize
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text11
  3933  00001A                     __ptext11:
  3934                           	opt stack 0
  3935  00001A                     _CANSetFilter:
  3936                           	opt stack 26
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;incstack = 0
  3940                           ;CANSetFilter@numBuffer stored from wreg
  3941  00001A  0100               	movlb	0	; () banked
  3942  00001C  6F64               	movwf	CANSetFilter@numBuffer& (0+255),b
  3943                           
  3944                           ;inc\CANlib.h: 750: unsigned long tamp;
  3945                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3946  00001E  0100               	movlb	0	; () banked
  3947  000020  5164               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3948  000022  0100               	movlb	0	; () banked
  3949  000024  A4D8               	btfss	status,2,c
  3950  000026  D053               	goto	l3659
  3951                           
  3952                           ; BSR set to: 0
  3953  000028  2840               	incf	CANSetFilter@type,w,c
  3954  00002A  A4D8               	btfss	status,2,c
  3955  00002C  D050               	goto	l3659
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 753: {
  3959                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3960  00002E  010F               	movlb	15	; () banked
  3961  000030  9701               	bcf	1,3,b	;volatile
  3962                           
  3963                           ; BSR set to: 15
  3964                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3965  000032  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  3966  000036  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3967  00003A  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3968  00003E  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3969  000042  0E04               	movlw	4
  3970  000044  D006               	goto	u4190
  3971  000046                     u4195:
  3972  000046  0100               	movlb	0	; () banked
  3973  000048  90D8               	bcf	status,0,c
  3974  00004A  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3975  00004C  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3976  00004E  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3977  000050  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  3978  000052                     u4190:
  3979  000052  2EE8               	decfsz	wreg,f,c
  3980  000054  D7F8               	goto	u4195
  3981  000056  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  3982  00005A  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3983  00005E  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3984  000062  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3988  000066  0100               	movlb	0	; () banked
  3989  000068  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  3990  00006A  0100               	movlb	0	; () banked
  3991  00006C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  3992  00006E  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3993  000070  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3994  000072  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3998  000074  C065  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4002  000078  0E07               	movlw	7
  4003  00007A  143C               	andwf	CANSetFilter@filter,w,c
  4004  00007C  0100               	movlb	0	; () banked
  4005  00007E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4006  000080  0E00               	movlw	0
  4007  000082  143D               	andwf	CANSetFilter@filter+1,w,c
  4008  000084  0100               	movlb	0	; () banked
  4009  000086  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4010  000088  0E00               	movlw	0
  4011  00008A  143E               	andwf	CANSetFilter@filter+2,w,c
  4012  00008C  0100               	movlb	0	; () banked
  4013  00008E  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4014  000090  0E00               	movlw	0
  4015  000092  143F               	andwf	CANSetFilter@filter+3,w,c
  4016  000094  0100               	movlb	0	; () banked
  4017  000096  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4021  000098  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4022  00009C  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4023  0000A0  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4024  0000A4  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4025  0000A8  0E05               	movlw	5
  4026  0000AA                     u4205:
  4027  0000AA  90D8               	bcf	status,0,c
  4028  0000AC  0100               	movlb	0	; () banked
  4029  0000AE  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  4030  0000B0  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4031  0000B2  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4032  0000B4  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4033  0000B6  2EE8               	decfsz	wreg,f,c
  4034  0000B8  D7F8               	goto	u4205
  4035  0000BA  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4036  0000BE  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4037  0000C2  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4038  0000C6  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4042  0000CA  C065  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4043  0000CE                     l3659:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 763: }
  4047                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4048  0000CE  0100               	movlb	0	; () banked
  4049  0000D0  0564               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4050  0000D2  A4D8               	btfss	status,2,c
  4051  0000D4  D053               	goto	l3677
  4052                           
  4053                           ; BSR set to: 0
  4054  0000D6  2840               	incf	CANSetFilter@type,w,c
  4055  0000D8  A4D8               	btfss	status,2,c
  4056  0000DA  D050               	goto	l3677
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;inc\CANlib.h: 766: {
  4060                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4061  0000DC  010F               	movlb	15	; () banked
  4062  0000DE  9705               	bcf	5,3,b	;volatile
  4063                           
  4064                           ; BSR set to: 15
  4065                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4066  0000E0  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4067  0000E4  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4068  0000E8  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4069  0000EC  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4070  0000F0  0E04               	movlw	4
  4071  0000F2  D006               	goto	u4230
  4072  0000F4                     u4235:
  4073  0000F4  0100               	movlb	0	; () banked
  4074  0000F6  90D8               	bcf	status,0,c
  4075  0000F8  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4076  0000FA  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4077  0000FC  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4078  0000FE  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4079  000100                     u4230:
  4080  000100  2EE8               	decfsz	wreg,f,c
  4081  000102  D7F8               	goto	u4235
  4082  000104  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4083  000108  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4084  00010C  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4085  000110  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4089  000114  0100               	movlb	0	; () banked
  4090  000116  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4091  000118  0100               	movlb	0	; () banked
  4092  00011A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4093  00011C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4094  00011E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4095  000120  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4099  000122  C065  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4103  000126  0E07               	movlw	7
  4104  000128  143C               	andwf	CANSetFilter@filter,w,c
  4105  00012A  0100               	movlb	0	; () banked
  4106  00012C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4107  00012E  0E00               	movlw	0
  4108  000130  143D               	andwf	CANSetFilter@filter+1,w,c
  4109  000132  0100               	movlb	0	; () banked
  4110  000134  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4111  000136  0E00               	movlw	0
  4112  000138  143E               	andwf	CANSetFilter@filter+2,w,c
  4113  00013A  0100               	movlb	0	; () banked
  4114  00013C  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4115  00013E  0E00               	movlw	0
  4116  000140  143F               	andwf	CANSetFilter@filter+3,w,c
  4117  000142  0100               	movlb	0	; () banked
  4118  000144  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4122  000146  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4123  00014A  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4124  00014E  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4125  000152  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4126  000156  0E05               	movlw	5
  4127  000158                     u4245:
  4128  000158  90D8               	bcf	status,0,c
  4129  00015A  0100               	movlb	0	; () banked
  4130  00015C  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  4131  00015E  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4132  000160  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4133  000162  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4134  000164  2EE8               	decfsz	wreg,f,c
  4135  000166  D7F8               	goto	u4245
  4136  000168  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4137  00016C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4138  000170  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4139  000174  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4143  000178  C065  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4144  00017C                     l3677:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 776: }
  4148                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4149  00017C  0E02               	movlw	2
  4150  00017E  0100               	movlb	0	; () banked
  4151  000180  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4152  000182  A4D8               	btfss	status,2,c
  4153  000184  D053               	goto	l3695
  4154                           
  4155                           ; BSR set to: 0
  4156  000186  2840               	incf	CANSetFilter@type,w,c
  4157  000188  A4D8               	btfss	status,2,c
  4158  00018A  D050               	goto	l3695
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;inc\CANlib.h: 779: {
  4162                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4163  00018C  010F               	movlb	15	; () banked
  4164  00018E  9709               	bcf	9,3,b	;volatile
  4165                           
  4166                           ; BSR set to: 15
  4167                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4168  000190  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4169  000194  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4170  000198  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4171  00019C  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4172  0001A0  0E04               	movlw	4
  4173  0001A2  D006               	goto	u4270
  4174  0001A4                     u4275:
  4175  0001A4  0100               	movlb	0	; () banked
  4176  0001A6  90D8               	bcf	status,0,c
  4177  0001A8  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4178  0001AA  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4179  0001AC  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4180  0001AE  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4181  0001B0                     u4270:
  4182  0001B0  2EE8               	decfsz	wreg,f,c
  4183  0001B2  D7F8               	goto	u4275
  4184  0001B4  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4185  0001B8  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4186  0001BC  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4187  0001C0  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4191  0001C4  0100               	movlb	0	; () banked
  4192  0001C6  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4193  0001C8  0100               	movlb	0	; () banked
  4194  0001CA  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4195  0001CC  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4196  0001CE  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4197  0001D0  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4201  0001D2  C065  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4205  0001D6  0E07               	movlw	7
  4206  0001D8  143C               	andwf	CANSetFilter@filter,w,c
  4207  0001DA  0100               	movlb	0	; () banked
  4208  0001DC  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4209  0001DE  0E00               	movlw	0
  4210  0001E0  143D               	andwf	CANSetFilter@filter+1,w,c
  4211  0001E2  0100               	movlb	0	; () banked
  4212  0001E4  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4213  0001E6  0E00               	movlw	0
  4214  0001E8  143E               	andwf	CANSetFilter@filter+2,w,c
  4215  0001EA  0100               	movlb	0	; () banked
  4216  0001EC  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4217  0001EE  0E00               	movlw	0
  4218  0001F0  143F               	andwf	CANSetFilter@filter+3,w,c
  4219  0001F2  0100               	movlb	0	; () banked
  4220  0001F4  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4224  0001F6  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4225  0001FA  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4226  0001FE  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4227  000202  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4228  000206  0E05               	movlw	5
  4229  000208                     u4285:
  4230  000208  90D8               	bcf	status,0,c
  4231  00020A  0100               	movlb	0	; () banked
  4232  00020C  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  4233  00020E  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4234  000210  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4235  000212  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4236  000214  2EE8               	decfsz	wreg,f,c
  4237  000216  D7F8               	goto	u4285
  4238  000218  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4239  00021C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4240  000220  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4241  000224  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4245  000228  C065  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4246  00022C                     l3695:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;inc\CANlib.h: 789: }
  4250                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4251  00022C  0E03               	movlw	3
  4252  00022E  0100               	movlb	0	; () banked
  4253  000230  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4254  000232  A4D8               	btfss	status,2,c
  4255  000234  D053               	goto	l3713
  4256                           
  4257                           ; BSR set to: 0
  4258  000236  2840               	incf	CANSetFilter@type,w,c
  4259  000238  A4D8               	btfss	status,2,c
  4260  00023A  D050               	goto	l3713
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 792: {
  4264                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4265  00023C  010F               	movlb	15	; () banked
  4266  00023E  970D               	bcf	13,3,b	;volatile
  4267                           
  4268                           ; BSR set to: 15
  4269                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4270  000240  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4271  000244  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4272  000248  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4273  00024C  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4274  000250  0E04               	movlw	4
  4275  000252  D006               	goto	u4310
  4276  000254                     u4315:
  4277  000254  0100               	movlb	0	; () banked
  4278  000256  90D8               	bcf	status,0,c
  4279  000258  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4280  00025A  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4281  00025C  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4282  00025E  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4283  000260                     u4310:
  4284  000260  2EE8               	decfsz	wreg,f,c
  4285  000262  D7F8               	goto	u4315
  4286  000264  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4287  000268  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4288  00026C  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4289  000270  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4293  000274  0100               	movlb	0	; () banked
  4294  000276  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4295  000278  0100               	movlb	0	; () banked
  4296  00027A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4297  00027C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4298  00027E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4299  000280  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4303  000282  C065  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4307  000286  0E07               	movlw	7
  4308  000288  143C               	andwf	CANSetFilter@filter,w,c
  4309  00028A  0100               	movlb	0	; () banked
  4310  00028C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4311  00028E  0E00               	movlw	0
  4312  000290  143D               	andwf	CANSetFilter@filter+1,w,c
  4313  000292  0100               	movlb	0	; () banked
  4314  000294  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4315  000296  0E00               	movlw	0
  4316  000298  143E               	andwf	CANSetFilter@filter+2,w,c
  4317  00029A  0100               	movlb	0	; () banked
  4318  00029C  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4319  00029E  0E00               	movlw	0
  4320  0002A0  143F               	andwf	CANSetFilter@filter+3,w,c
  4321  0002A2  0100               	movlb	0	; () banked
  4322  0002A4  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4326  0002A6  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4327  0002AA  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4328  0002AE  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4329  0002B2  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4330  0002B6  0E05               	movlw	5
  4331  0002B8                     u4325:
  4332  0002B8  90D8               	bcf	status,0,c
  4333  0002BA  0100               	movlb	0	; () banked
  4334  0002BC  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  4335  0002BE  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4336  0002C0  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4337  0002C2  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4338  0002C4  2EE8               	decfsz	wreg,f,c
  4339  0002C6  D7F8               	goto	u4325
  4340  0002C8  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4341  0002CC  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4342  0002D0  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4343  0002D4  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4347  0002D8  C065  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4348  0002DC                     l3713:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;inc\CANlib.h: 802: }
  4352                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4353  0002DC  0E04               	movlw	4
  4354  0002DE  0100               	movlb	0	; () banked
  4355  0002E0  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4356  0002E2  A4D8               	btfss	status,2,c
  4357  0002E4  D053               	goto	l3731
  4358                           
  4359                           ; BSR set to: 0
  4360  0002E6  2840               	incf	CANSetFilter@type,w,c
  4361  0002E8  A4D8               	btfss	status,2,c
  4362  0002EA  D050               	goto	l3731
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;inc\CANlib.h: 805: {
  4366                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4367  0002EC  010F               	movlb	15	; () banked
  4368  0002EE  9711               	bcf	17,3,b	;volatile
  4369                           
  4370                           ; BSR set to: 15
  4371                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4372  0002F0  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4373  0002F4  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4374  0002F8  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4375  0002FC  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4376  000300  0E04               	movlw	4
  4377  000302  D006               	goto	u4350
  4378  000304                     u4355:
  4379  000304  0100               	movlb	0	; () banked
  4380  000306  90D8               	bcf	status,0,c
  4381  000308  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4382  00030A  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4383  00030C  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4384  00030E  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4385  000310                     u4350:
  4386  000310  2EE8               	decfsz	wreg,f,c
  4387  000312  D7F8               	goto	u4355
  4388  000314  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4389  000318  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4390  00031C  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4391  000320  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4395  000324  0100               	movlb	0	; () banked
  4396  000326  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4397  000328  0100               	movlb	0	; () banked
  4398  00032A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4399  00032C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4400  00032E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4401  000330  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4405  000332  C065  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4409  000336  0E07               	movlw	7
  4410  000338  143C               	andwf	CANSetFilter@filter,w,c
  4411  00033A  0100               	movlb	0	; () banked
  4412  00033C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4413  00033E  0E00               	movlw	0
  4414  000340  143D               	andwf	CANSetFilter@filter+1,w,c
  4415  000342  0100               	movlb	0	; () banked
  4416  000344  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4417  000346  0E00               	movlw	0
  4418  000348  143E               	andwf	CANSetFilter@filter+2,w,c
  4419  00034A  0100               	movlb	0	; () banked
  4420  00034C  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4421  00034E  0E00               	movlw	0
  4422  000350  143F               	andwf	CANSetFilter@filter+3,w,c
  4423  000352  0100               	movlb	0	; () banked
  4424  000354  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4428  000356  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4429  00035A  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4430  00035E  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4431  000362  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4432  000366  0E05               	movlw	5
  4433  000368                     u4365:
  4434  000368  90D8               	bcf	status,0,c
  4435  00036A  0100               	movlb	0	; () banked
  4436  00036C  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  4437  00036E  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4438  000370  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4439  000372  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4440  000374  2EE8               	decfsz	wreg,f,c
  4441  000376  D7F8               	goto	u4365
  4442  000378  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4443  00037C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4444  000380  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4445  000384  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4449  000388  C065  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4450  00038C                     l3731:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 815: }
  4454                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4455  00038C  0E05               	movlw	5
  4456  00038E  0100               	movlb	0	; () banked
  4457  000390  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4458  000392  A4D8               	btfss	status,2,c
  4459  000394  D053               	goto	l3749
  4460                           
  4461                           ; BSR set to: 0
  4462  000396  2840               	incf	CANSetFilter@type,w,c
  4463  000398  A4D8               	btfss	status,2,c
  4464  00039A  D050               	goto	l3749
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;inc\CANlib.h: 818: {
  4468                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4469  00039C  010F               	movlb	15	; () banked
  4470  00039E  9715               	bcf	21,3,b	;volatile
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4474  0003A0  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4475  0003A4  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4476  0003A8  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4477  0003AC  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4478  0003B0  0E04               	movlw	4
  4479  0003B2  D006               	goto	u4390
  4480  0003B4                     u4395:
  4481  0003B4  0100               	movlb	0	; () banked
  4482  0003B6  90D8               	bcf	status,0,c
  4483  0003B8  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4484  0003BA  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4485  0003BC  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4486  0003BE  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4487  0003C0                     u4390:
  4488  0003C0  2EE8               	decfsz	wreg,f,c
  4489  0003C2  D7F8               	goto	u4395
  4490  0003C4  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4491  0003C8  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4492  0003CC  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4493  0003D0  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4497  0003D4  0100               	movlb	0	; () banked
  4498  0003D6  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4499  0003D8  0100               	movlb	0	; () banked
  4500  0003DA  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4501  0003DC  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4502  0003DE  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4503  0003E0  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4507  0003E2  C065  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4511  0003E6  0E07               	movlw	7
  4512  0003E8  143C               	andwf	CANSetFilter@filter,w,c
  4513  0003EA  0100               	movlb	0	; () banked
  4514  0003EC  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4515  0003EE  0E00               	movlw	0
  4516  0003F0  143D               	andwf	CANSetFilter@filter+1,w,c
  4517  0003F2  0100               	movlb	0	; () banked
  4518  0003F4  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4519  0003F6  0E00               	movlw	0
  4520  0003F8  143E               	andwf	CANSetFilter@filter+2,w,c
  4521  0003FA  0100               	movlb	0	; () banked
  4522  0003FC  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4523  0003FE  0E00               	movlw	0
  4524  000400  143F               	andwf	CANSetFilter@filter+3,w,c
  4525  000402  0100               	movlb	0	; () banked
  4526  000404  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4530  000406  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4531  00040A  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4532  00040E  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4533  000412  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4534  000416  0E05               	movlw	5
  4535  000418                     u4405:
  4536  000418  90D8               	bcf	status,0,c
  4537  00041A  0100               	movlb	0	; () banked
  4538  00041C  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  4539  00041E  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4540  000420  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4541  000422  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4542  000424  2EE8               	decfsz	wreg,f,c
  4543  000426  D7F8               	goto	u4405
  4544  000428  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4545  00042C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4546  000430  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4547  000434  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4551  000438  C065  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4552  00043C                     l3749:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;inc\CANlib.h: 828: }
  4556                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4557  00043C  0100               	movlb	0	; () banked
  4558  00043E  5164               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4559  000440  0100               	movlb	0	; () banked
  4560  000442  A4D8               	btfss	status,2,c
  4561  000444  D07E               	goto	l3783
  4562                           
  4563                           ; BSR set to: 0
  4564  000446  0EF7               	movlw	247
  4565  000448  1840               	xorwf	CANSetFilter@type,w,c
  4566  00044A  A4D8               	btfss	status,2,c
  4567  00044C  D07A               	goto	l3783
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;inc\CANlib.h: 832: {
  4571                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4572  00044E  010F               	movlb	15	; () banked
  4573  000450  8701               	bsf	1,3,b	;volatile
  4574                           
  4575                           ; BSR set to: 15
  4576                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4577  000452  503C               	movf	CANSetFilter@filter,w,c
  4578  000454  0100               	movlb	0	; () banked
  4579  000456  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4580  000458  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4581  00045A  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4582  00045C  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4586  00045E  C065  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4590  000462  0E00               	movlw	0
  4591  000464  143C               	andwf	CANSetFilter@filter,w,c
  4592  000466  0100               	movlb	0	; () banked
  4593  000468  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4594  00046A  0EFF               	movlw	255
  4595  00046C  143D               	andwf	CANSetFilter@filter+1,w,c
  4596  00046E  0100               	movlb	0	; () banked
  4597  000470  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4598  000472  0E00               	movlw	0
  4599  000474  143E               	andwf	CANSetFilter@filter+2,w,c
  4600  000476  0100               	movlb	0	; () banked
  4601  000478  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4602  00047A  0E00               	movlw	0
  4603  00047C  143F               	andwf	CANSetFilter@filter+3,w,c
  4604  00047E  0100               	movlb	0	; () banked
  4605  000480  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4609  000482  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4610  000486  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4611  00048A  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4612  00048E  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4613  000492  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  4614  000496  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4615  00049A  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4616  00049E  0100               	movlb	0	; () banked
  4617  0004A0  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  4618  0004A2  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4619  0004A6  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4620  0004AA  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4621  0004AE  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4625  0004B2  C065  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4629  0004B6  A03E               	btfss	CANSetFilter@filter+2,0,c
  4630  0004B8  D003               	goto	l443
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4634  0004BA  010F               	movlb	15	; () banked
  4635  0004BC  8101               	bsf	1,0,b	;volatile
  4636  0004BE  D002               	goto	l444
  4637  0004C0                     l443:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 844: else
  4641                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4642  0004C0  010F               	movlb	15	; () banked
  4643  0004C2  9101               	bcf	1,0,b	;volatile
  4644  0004C4                     l444:
  4645                           
  4646                           ; BSR set to: 15
  4647                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4648  0004C4  A23E               	btfss	CANSetFilter@filter+2,1,c
  4649  0004C6  D003               	goto	l445
  4650                           
  4651                           ; BSR set to: 15
  4652                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4653  0004C8  010F               	movlb	15	; () banked
  4654  0004CA  8301               	bsf	1,1,b	;volatile
  4655  0004CC  D002               	goto	l446
  4656  0004CE                     l445:
  4657                           
  4658                           ; BSR set to: 15
  4659                           ;inc\CANlib.h: 849: else
  4660                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4661  0004CE  010F               	movlb	15	; () banked
  4662  0004D0  9301               	bcf	1,1,b	;volatile
  4663  0004D2                     l446:
  4664                           
  4665                           ; BSR set to: 15
  4666                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4667  0004D2  A43E               	btfss	CANSetFilter@filter+2,2,c
  4668  0004D4  D003               	goto	l447
  4669                           
  4670                           ; BSR set to: 15
  4671                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4672  0004D6  010F               	movlb	15	; () banked
  4673  0004D8  8B01               	bsf	1,5,b	;volatile
  4674  0004DA  D002               	goto	l448
  4675  0004DC                     l447:
  4676                           
  4677                           ; BSR set to: 15
  4678                           ;inc\CANlib.h: 854: else
  4679                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4680  0004DC  010F               	movlb	15	; () banked
  4681  0004DE  9B01               	bcf	1,5,b	;volatile
  4682  0004E0                     l448:
  4683                           
  4684                           ; BSR set to: 15
  4685                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4686  0004E0  A63E               	btfss	CANSetFilter@filter+2,3,c
  4687  0004E2  D003               	goto	l449
  4688                           
  4689                           ; BSR set to: 15
  4690                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4691  0004E4  010F               	movlb	15	; () banked
  4692  0004E6  8D01               	bsf	1,6,b	;volatile
  4693  0004E8  D002               	goto	l450
  4694  0004EA                     l449:
  4695                           
  4696                           ; BSR set to: 15
  4697                           ;inc\CANlib.h: 859: else
  4698                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4699  0004EA  010F               	movlb	15	; () banked
  4700  0004EC  9D01               	bcf	1,6,b	;volatile
  4701  0004EE                     l450:
  4702                           
  4703                           ; BSR set to: 15
  4704                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4705  0004EE  A83E               	btfss	CANSetFilter@filter+2,4,c
  4706  0004F0  D003               	goto	l451
  4707                           
  4708                           ; BSR set to: 15
  4709                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4710  0004F2  010F               	movlb	15	; () banked
  4711  0004F4  8F01               	bsf	1,7,b	;volatile
  4712  0004F6  D002               	goto	l3777
  4713  0004F8                     l451:
  4714                           
  4715                           ; BSR set to: 15
  4716                           ;inc\CANlib.h: 864: else
  4717                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4718  0004F8  010F               	movlb	15	; () banked
  4719  0004FA  9F01               	bcf	1,7,b	;volatile
  4720  0004FC                     l3777:
  4721                           
  4722                           ; BSR set to: 15
  4723                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4724  0004FC  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4725  000500  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4726  000504  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4727  000508  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4728  00050C  0E16               	movlw	22
  4729  00050E  D006               	goto	u4480
  4730  000510                     u4485:
  4731  000510  0100               	movlb	0	; () banked
  4732  000512  90D8               	bcf	status,0,c
  4733  000514  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4734  000516  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4735  000518  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4736  00051A  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4737  00051C                     u4480:
  4738  00051C  2EE8               	decfsz	wreg,f,c
  4739  00051E  D7F8               	goto	u4485
  4740  000520  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4741  000524  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4742  000528  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4743  00052C  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4747  000530  0100               	movlb	0	; () banked
  4748  000532  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4749  000534  0100               	movlb	0	; () banked
  4750  000536  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4751  000538  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4752  00053A  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4753  00053C  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4757  00053E  C065  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4758  000542                     l3783:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 870: }
  4762                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4763  000542  0100               	movlb	0	; () banked
  4764  000544  0564               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4765  000546  A4D8               	btfss	status,2,c
  4766  000548  D07E               	goto	l3817
  4767                           
  4768                           ; BSR set to: 0
  4769  00054A  0EF7               	movlw	247
  4770  00054C  1840               	xorwf	CANSetFilter@type,w,c
  4771  00054E  A4D8               	btfss	status,2,c
  4772  000550  D07A               	goto	l3817
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;inc\CANlib.h: 873: {
  4776                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4777  000552  010F               	movlb	15	; () banked
  4778  000554  8705               	bsf	5,3,b	;volatile
  4779                           
  4780                           ; BSR set to: 15
  4781                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4782  000556  503C               	movf	CANSetFilter@filter,w,c
  4783  000558  0100               	movlb	0	; () banked
  4784  00055A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4785  00055C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4786  00055E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4787  000560  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4791  000562  C065  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4795  000566  0E00               	movlw	0
  4796  000568  143C               	andwf	CANSetFilter@filter,w,c
  4797  00056A  0100               	movlb	0	; () banked
  4798  00056C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4799  00056E  0EFF               	movlw	255
  4800  000570  143D               	andwf	CANSetFilter@filter+1,w,c
  4801  000572  0100               	movlb	0	; () banked
  4802  000574  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4803  000576  0E00               	movlw	0
  4804  000578  143E               	andwf	CANSetFilter@filter+2,w,c
  4805  00057A  0100               	movlb	0	; () banked
  4806  00057C  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4807  00057E  0E00               	movlw	0
  4808  000580  143F               	andwf	CANSetFilter@filter+3,w,c
  4809  000582  0100               	movlb	0	; () banked
  4810  000584  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4814  000586  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  4815  00058A  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4816  00058E  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4817  000592  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4818  000596  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  4819  00059A  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4820  00059E  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4821  0005A2  0100               	movlb	0	; () banked
  4822  0005A4  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  4823  0005A6  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4824  0005AA  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4825  0005AE  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4826  0005B2  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4830  0005B6  C065  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4834  0005BA  A03E               	btfss	CANSetFilter@filter+2,0,c
  4835  0005BC  D003               	goto	l454
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4839  0005BE  010F               	movlb	15	; () banked
  4840  0005C0  8105               	bsf	5,0,b	;volatile
  4841  0005C2  D002               	goto	l455
  4842  0005C4                     l454:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;inc\CANlib.h: 885: else
  4846                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4847  0005C4  010F               	movlb	15	; () banked
  4848  0005C6  9105               	bcf	5,0,b	;volatile
  4849  0005C8                     l455:
  4850                           
  4851                           ; BSR set to: 15
  4852                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4853  0005C8  A23E               	btfss	CANSetFilter@filter+2,1,c
  4854  0005CA  D003               	goto	l456
  4855                           
  4856                           ; BSR set to: 15
  4857                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4858  0005CC  010F               	movlb	15	; () banked
  4859  0005CE  8305               	bsf	5,1,b	;volatile
  4860  0005D0  D002               	goto	l457
  4861  0005D2                     l456:
  4862                           
  4863                           ; BSR set to: 15
  4864                           ;inc\CANlib.h: 890: else
  4865                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4866  0005D2  010F               	movlb	15	; () banked
  4867  0005D4  9305               	bcf	5,1,b	;volatile
  4868  0005D6                     l457:
  4869                           
  4870                           ; BSR set to: 15
  4871                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4872  0005D6  A43E               	btfss	CANSetFilter@filter+2,2,c
  4873  0005D8  D003               	goto	l458
  4874                           
  4875                           ; BSR set to: 15
  4876                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4877  0005DA  010F               	movlb	15	; () banked
  4878  0005DC  8B05               	bsf	5,5,b	;volatile
  4879  0005DE  D002               	goto	l459
  4880  0005E0                     l458:
  4881                           
  4882                           ; BSR set to: 15
  4883                           ;inc\CANlib.h: 895: else
  4884                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4885  0005E0  010F               	movlb	15	; () banked
  4886  0005E2  9B05               	bcf	5,5,b	;volatile
  4887  0005E4                     l459:
  4888                           
  4889                           ; BSR set to: 15
  4890                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4891  0005E4  A63E               	btfss	CANSetFilter@filter+2,3,c
  4892  0005E6  D003               	goto	l460
  4893                           
  4894                           ; BSR set to: 15
  4895                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4896  0005E8  010F               	movlb	15	; () banked
  4897  0005EA  8D05               	bsf	5,6,b	;volatile
  4898  0005EC  D002               	goto	l461
  4899  0005EE                     l460:
  4900                           
  4901                           ; BSR set to: 15
  4902                           ;inc\CANlib.h: 900: else
  4903                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4904  0005EE  010F               	movlb	15	; () banked
  4905  0005F0  9D05               	bcf	5,6,b	;volatile
  4906  0005F2                     l461:
  4907                           
  4908                           ; BSR set to: 15
  4909                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4910  0005F2  A83E               	btfss	CANSetFilter@filter+2,4,c
  4911  0005F4  D003               	goto	l462
  4912                           
  4913                           ; BSR set to: 15
  4914                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4915  0005F6  010F               	movlb	15	; () banked
  4916  0005F8  8F05               	bsf	5,7,b	;volatile
  4917  0005FA  D002               	goto	l3811
  4918  0005FC                     l462:
  4919                           
  4920                           ; BSR set to: 15
  4921                           ;inc\CANlib.h: 905: else
  4922                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4923  0005FC  010F               	movlb	15	; () banked
  4924  0005FE  9F05               	bcf	5,7,b	;volatile
  4925  000600                     l3811:
  4926                           
  4927                           ; BSR set to: 15
  4928                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4929  000600  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  4930  000604  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4931  000608  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4932  00060C  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4933  000610  0E16               	movlw	22
  4934  000612  D006               	goto	u4560
  4935  000614                     u4565:
  4936  000614  0100               	movlb	0	; () banked
  4937  000616  90D8               	bcf	status,0,c
  4938  000618  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4939  00061A  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4940  00061C  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4941  00061E  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  4942  000620                     u4560:
  4943  000620  2EE8               	decfsz	wreg,f,c
  4944  000622  D7F8               	goto	u4565
  4945  000624  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  4946  000628  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4947  00062C  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4948  000630  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4952  000634  0100               	movlb	0	; () banked
  4953  000636  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  4954  000638  0100               	movlb	0	; () banked
  4955  00063A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4956  00063C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4957  00063E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4958  000640  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4962  000642  C065  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4963  000646                     l3817:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 911: }
  4967                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4968  000646  0E02               	movlw	2
  4969  000648  0100               	movlb	0	; () banked
  4970  00064A  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4971  00064C  A4D8               	btfss	status,2,c
  4972  00064E  D07E               	goto	l3851
  4973                           
  4974                           ; BSR set to: 0
  4975  000650  0EF7               	movlw	247
  4976  000652  1840               	xorwf	CANSetFilter@type,w,c
  4977  000654  A4D8               	btfss	status,2,c
  4978  000656  D07A               	goto	l3851
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;inc\CANlib.h: 915: {
  4982                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4983  000658  010F               	movlb	15	; () banked
  4984  00065A  8709               	bsf	9,3,b	;volatile
  4985                           
  4986                           ; BSR set to: 15
  4987                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4988  00065C  503C               	movf	CANSetFilter@filter,w,c
  4989  00065E  0100               	movlb	0	; () banked
  4990  000660  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  4991  000662  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4992  000664  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4993  000666  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4997  000668  C065  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5001  00066C  0E00               	movlw	0
  5002  00066E  143C               	andwf	CANSetFilter@filter,w,c
  5003  000670  0100               	movlb	0	; () banked
  5004  000672  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5005  000674  0EFF               	movlw	255
  5006  000676  143D               	andwf	CANSetFilter@filter+1,w,c
  5007  000678  0100               	movlb	0	; () banked
  5008  00067A  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5009  00067C  0E00               	movlw	0
  5010  00067E  143E               	andwf	CANSetFilter@filter+2,w,c
  5011  000680  0100               	movlb	0	; () banked
  5012  000682  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5013  000684  0E00               	movlw	0
  5014  000686  143F               	andwf	CANSetFilter@filter+3,w,c
  5015  000688  0100               	movlb	0	; () banked
  5016  00068A  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5020  00068C  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  5021  000690  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5022  000694  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5023  000698  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5024  00069C  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  5025  0006A0  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5026  0006A4  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5027  0006A8  0100               	movlb	0	; () banked
  5028  0006AA  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  5029  0006AC  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5030  0006B0  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5031  0006B4  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5032  0006B8  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5036  0006BC  C065  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5040  0006C0  A03E               	btfss	CANSetFilter@filter+2,0,c
  5041  0006C2  D003               	goto	l465
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5045  0006C4  010F               	movlb	15	; () banked
  5046  0006C6  8109               	bsf	9,0,b	;volatile
  5047  0006C8  D002               	goto	l466
  5048  0006CA                     l465:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;inc\CANlib.h: 927: else
  5052                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5053  0006CA  010F               	movlb	15	; () banked
  5054  0006CC  9109               	bcf	9,0,b	;volatile
  5055  0006CE                     l466:
  5056                           
  5057                           ; BSR set to: 15
  5058                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5059  0006CE  A23E               	btfss	CANSetFilter@filter+2,1,c
  5060  0006D0  D003               	goto	l467
  5061                           
  5062                           ; BSR set to: 15
  5063                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5064  0006D2  010F               	movlb	15	; () banked
  5065  0006D4  8309               	bsf	9,1,b	;volatile
  5066  0006D6  D002               	goto	l468
  5067  0006D8                     l467:
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;inc\CANlib.h: 932: else
  5071                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5072  0006D8  010F               	movlb	15	; () banked
  5073  0006DA  9309               	bcf	9,1,b	;volatile
  5074  0006DC                     l468:
  5075                           
  5076                           ; BSR set to: 15
  5077                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5078  0006DC  A43E               	btfss	CANSetFilter@filter+2,2,c
  5079  0006DE  D003               	goto	l469
  5080                           
  5081                           ; BSR set to: 15
  5082                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5083  0006E0  010F               	movlb	15	; () banked
  5084  0006E2  8B09               	bsf	9,5,b	;volatile
  5085  0006E4  D002               	goto	l470
  5086  0006E6                     l469:
  5087                           
  5088                           ; BSR set to: 15
  5089                           ;inc\CANlib.h: 937: else
  5090                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5091  0006E6  010F               	movlb	15	; () banked
  5092  0006E8  9B09               	bcf	9,5,b	;volatile
  5093  0006EA                     l470:
  5094                           
  5095                           ; BSR set to: 15
  5096                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5097  0006EA  A63E               	btfss	CANSetFilter@filter+2,3,c
  5098  0006EC  D003               	goto	l471
  5099                           
  5100                           ; BSR set to: 15
  5101                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5102  0006EE  010F               	movlb	15	; () banked
  5103  0006F0  8D09               	bsf	9,6,b	;volatile
  5104  0006F2  D002               	goto	l472
  5105  0006F4                     l471:
  5106                           
  5107                           ; BSR set to: 15
  5108                           ;inc\CANlib.h: 942: else
  5109                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5110  0006F4  010F               	movlb	15	; () banked
  5111  0006F6  9D09               	bcf	9,6,b	;volatile
  5112  0006F8                     l472:
  5113                           
  5114                           ; BSR set to: 15
  5115                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5116  0006F8  A83E               	btfss	CANSetFilter@filter+2,4,c
  5117  0006FA  D003               	goto	l473
  5118                           
  5119                           ; BSR set to: 15
  5120                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5121  0006FC  010F               	movlb	15	; () banked
  5122  0006FE  8F09               	bsf	9,7,b	;volatile
  5123  000700  D002               	goto	l3845
  5124  000702                     l473:
  5125                           
  5126                           ; BSR set to: 15
  5127                           ;inc\CANlib.h: 947: else
  5128                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5129  000702  010F               	movlb	15	; () banked
  5130  000704  9F09               	bcf	9,7,b	;volatile
  5131  000706                     l3845:
  5132                           
  5133                           ; BSR set to: 15
  5134                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5135  000706  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  5136  00070A  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5137  00070E  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5138  000712  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5139  000716  0E16               	movlw	22
  5140  000718  D006               	goto	u4640
  5141  00071A                     u4645:
  5142  00071A  0100               	movlb	0	; () banked
  5143  00071C  90D8               	bcf	status,0,c
  5144  00071E  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5145  000720  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5146  000722  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5147  000724  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  5148  000726                     u4640:
  5149  000726  2EE8               	decfsz	wreg,f,c
  5150  000728  D7F8               	goto	u4645
  5151  00072A  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5152  00072E  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5153  000732  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5154  000736  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5158  00073A  0100               	movlb	0	; () banked
  5159  00073C  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  5160  00073E  0100               	movlb	0	; () banked
  5161  000740  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5162  000742  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5163  000744  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5164  000746  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5168  000748  C065  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5169  00074C                     l3851:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;inc\CANlib.h: 953: }
  5173                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5174  00074C  0E03               	movlw	3
  5175  00074E  0100               	movlb	0	; () banked
  5176  000750  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5177  000752  A4D8               	btfss	status,2,c
  5178  000754  D07E               	goto	l3885
  5179                           
  5180                           ; BSR set to: 0
  5181  000756  0EF7               	movlw	247
  5182  000758  1840               	xorwf	CANSetFilter@type,w,c
  5183  00075A  A4D8               	btfss	status,2,c
  5184  00075C  D07A               	goto	l3885
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;inc\CANlib.h: 956: {
  5188                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5189  00075E  010F               	movlb	15	; () banked
  5190  000760  870D               	bsf	13,3,b	;volatile
  5191                           
  5192                           ; BSR set to: 15
  5193                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5194  000762  503C               	movf	CANSetFilter@filter,w,c
  5195  000764  0100               	movlb	0	; () banked
  5196  000766  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5197  000768  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5198  00076A  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5199  00076C  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5203  00076E  C065  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5207  000772  0E00               	movlw	0
  5208  000774  143C               	andwf	CANSetFilter@filter,w,c
  5209  000776  0100               	movlb	0	; () banked
  5210  000778  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5211  00077A  0EFF               	movlw	255
  5212  00077C  143D               	andwf	CANSetFilter@filter+1,w,c
  5213  00077E  0100               	movlb	0	; () banked
  5214  000780  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5215  000782  0E00               	movlw	0
  5216  000784  143E               	andwf	CANSetFilter@filter+2,w,c
  5217  000786  0100               	movlb	0	; () banked
  5218  000788  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5219  00078A  0E00               	movlw	0
  5220  00078C  143F               	andwf	CANSetFilter@filter+3,w,c
  5221  00078E  0100               	movlb	0	; () banked
  5222  000790  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5226  000792  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  5227  000796  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5228  00079A  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5229  00079E  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5230  0007A2  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  5231  0007A6  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5232  0007AA  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5233  0007AE  0100               	movlb	0	; () banked
  5234  0007B0  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  5235  0007B2  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5236  0007B6  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5237  0007BA  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5238  0007BE  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5242  0007C2  C065  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5246  0007C6  A03E               	btfss	CANSetFilter@filter+2,0,c
  5247  0007C8  D003               	goto	l476
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5251  0007CA  010F               	movlb	15	; () banked
  5252  0007CC  810D               	bsf	13,0,b	;volatile
  5253  0007CE  D002               	goto	l477
  5254  0007D0                     l476:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;inc\CANlib.h: 968: else
  5258                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5259  0007D0  010F               	movlb	15	; () banked
  5260  0007D2  910D               	bcf	13,0,b	;volatile
  5261  0007D4                     l477:
  5262                           
  5263                           ; BSR set to: 15
  5264                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5265  0007D4  A23E               	btfss	CANSetFilter@filter+2,1,c
  5266  0007D6  D003               	goto	l478
  5267                           
  5268                           ; BSR set to: 15
  5269                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5270  0007D8  010F               	movlb	15	; () banked
  5271  0007DA  830D               	bsf	13,1,b	;volatile
  5272  0007DC  D002               	goto	l479
  5273  0007DE                     l478:
  5274                           
  5275                           ; BSR set to: 15
  5276                           ;inc\CANlib.h: 973: else
  5277                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5278  0007DE  010F               	movlb	15	; () banked
  5279  0007E0  930D               	bcf	13,1,b	;volatile
  5280  0007E2                     l479:
  5281                           
  5282                           ; BSR set to: 15
  5283                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5284  0007E2  A43E               	btfss	CANSetFilter@filter+2,2,c
  5285  0007E4  D003               	goto	l480
  5286                           
  5287                           ; BSR set to: 15
  5288                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5289  0007E6  010F               	movlb	15	; () banked
  5290  0007E8  8B0D               	bsf	13,5,b	;volatile
  5291  0007EA  D002               	goto	l481
  5292  0007EC                     l480:
  5293                           
  5294                           ; BSR set to: 15
  5295                           ;inc\CANlib.h: 978: else
  5296                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5297  0007EC  010F               	movlb	15	; () banked
  5298  0007EE  9B0D               	bcf	13,5,b	;volatile
  5299  0007F0                     l481:
  5300                           
  5301                           ; BSR set to: 15
  5302                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5303  0007F0  A63E               	btfss	CANSetFilter@filter+2,3,c
  5304  0007F2  D003               	goto	l482
  5305                           
  5306                           ; BSR set to: 15
  5307                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5308  0007F4  010F               	movlb	15	; () banked
  5309  0007F6  8D0D               	bsf	13,6,b	;volatile
  5310  0007F8  D002               	goto	l483
  5311  0007FA                     l482:
  5312                           
  5313                           ; BSR set to: 15
  5314                           ;inc\CANlib.h: 983: else
  5315                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5316  0007FA  010F               	movlb	15	; () banked
  5317  0007FC  9D0D               	bcf	13,6,b	;volatile
  5318  0007FE                     l483:
  5319                           
  5320                           ; BSR set to: 15
  5321                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5322  0007FE  A83E               	btfss	CANSetFilter@filter+2,4,c
  5323  000800  D003               	goto	l484
  5324                           
  5325                           ; BSR set to: 15
  5326                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5327  000802  010F               	movlb	15	; () banked
  5328  000804  8F0D               	bsf	13,7,b	;volatile
  5329  000806  D002               	goto	l3879
  5330  000808                     l484:
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;inc\CANlib.h: 988: else
  5334                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5335  000808  010F               	movlb	15	; () banked
  5336  00080A  9F0D               	bcf	13,7,b	;volatile
  5337  00080C                     l3879:
  5338                           
  5339                           ; BSR set to: 15
  5340                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5341  00080C  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  5342  000810  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5343  000814  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5344  000818  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5345  00081C  0E16               	movlw	22
  5346  00081E  D006               	goto	u4720
  5347  000820                     u4725:
  5348  000820  0100               	movlb	0	; () banked
  5349  000822  90D8               	bcf	status,0,c
  5350  000824  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5351  000826  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5352  000828  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5353  00082A  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  5354  00082C                     u4720:
  5355  00082C  2EE8               	decfsz	wreg,f,c
  5356  00082E  D7F8               	goto	u4725
  5357  000830  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5358  000834  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5359  000838  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5360  00083C  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5364  000840  0100               	movlb	0	; () banked
  5365  000842  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  5366  000844  0100               	movlb	0	; () banked
  5367  000846  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5368  000848  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5369  00084A  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5370  00084C  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5374  00084E  C065  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5375  000852                     l3885:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;inc\CANlib.h: 994: }
  5379                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5380  000852  0E04               	movlw	4
  5381  000854  0100               	movlb	0	; () banked
  5382  000856  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5383  000858  A4D8               	btfss	status,2,c
  5384  00085A  D07E               	goto	l3919
  5385                           
  5386                           ; BSR set to: 0
  5387  00085C  0EF7               	movlw	247
  5388  00085E  1840               	xorwf	CANSetFilter@type,w,c
  5389  000860  A4D8               	btfss	status,2,c
  5390  000862  D07A               	goto	l3919
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 997: {
  5394                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5395  000864  010F               	movlb	15	; () banked
  5396  000866  8711               	bsf	17,3,b	;volatile
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5400  000868  503C               	movf	CANSetFilter@filter,w,c
  5401  00086A  0100               	movlb	0	; () banked
  5402  00086C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5403  00086E  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5404  000870  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5405  000872  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5409  000874  C065  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5413  000878  0E00               	movlw	0
  5414  00087A  143C               	andwf	CANSetFilter@filter,w,c
  5415  00087C  0100               	movlb	0	; () banked
  5416  00087E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5417  000880  0EFF               	movlw	255
  5418  000882  143D               	andwf	CANSetFilter@filter+1,w,c
  5419  000884  0100               	movlb	0	; () banked
  5420  000886  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5421  000888  0E00               	movlw	0
  5422  00088A  143E               	andwf	CANSetFilter@filter+2,w,c
  5423  00088C  0100               	movlb	0	; () banked
  5424  00088E  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5425  000890  0E00               	movlw	0
  5426  000892  143F               	andwf	CANSetFilter@filter+3,w,c
  5427  000894  0100               	movlb	0	; () banked
  5428  000896  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5432  000898  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  5433  00089C  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5434  0008A0  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5435  0008A4  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5436  0008A8  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  5437  0008AC  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5438  0008B0  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5439  0008B4  0100               	movlb	0	; () banked
  5440  0008B6  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  5441  0008B8  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5442  0008BC  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5443  0008C0  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5444  0008C4  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5448  0008C8  C065  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5452  0008CC  A03E               	btfss	CANSetFilter@filter+2,0,c
  5453  0008CE  D003               	goto	l487
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5457  0008D0  010F               	movlb	15	; () banked
  5458  0008D2  8111               	bsf	17,0,b	;volatile
  5459  0008D4  D002               	goto	l488
  5460  0008D6                     l487:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;inc\CANlib.h: 1009: else
  5464                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5465  0008D6  010F               	movlb	15	; () banked
  5466  0008D8  9111               	bcf	17,0,b	;volatile
  5467  0008DA                     l488:
  5468                           
  5469                           ; BSR set to: 15
  5470                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5471  0008DA  A23E               	btfss	CANSetFilter@filter+2,1,c
  5472  0008DC  D003               	goto	l489
  5473                           
  5474                           ; BSR set to: 15
  5475                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5476  0008DE  010F               	movlb	15	; () banked
  5477  0008E0  8311               	bsf	17,1,b	;volatile
  5478  0008E2  D002               	goto	l490
  5479  0008E4                     l489:
  5480                           
  5481                           ; BSR set to: 15
  5482                           ;inc\CANlib.h: 1014: else
  5483                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5484  0008E4  010F               	movlb	15	; () banked
  5485  0008E6  9311               	bcf	17,1,b	;volatile
  5486  0008E8                     l490:
  5487                           
  5488                           ; BSR set to: 15
  5489                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5490  0008E8  A43E               	btfss	CANSetFilter@filter+2,2,c
  5491  0008EA  D003               	goto	l491
  5492                           
  5493                           ; BSR set to: 15
  5494                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5495  0008EC  010F               	movlb	15	; () banked
  5496  0008EE  8B11               	bsf	17,5,b	;volatile
  5497  0008F0  D002               	goto	l492
  5498  0008F2                     l491:
  5499                           
  5500                           ; BSR set to: 15
  5501                           ;inc\CANlib.h: 1019: else
  5502                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5503  0008F2  010F               	movlb	15	; () banked
  5504  0008F4  9B11               	bcf	17,5,b	;volatile
  5505  0008F6                     l492:
  5506                           
  5507                           ; BSR set to: 15
  5508                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5509  0008F6  A63E               	btfss	CANSetFilter@filter+2,3,c
  5510  0008F8  D003               	goto	l493
  5511                           
  5512                           ; BSR set to: 15
  5513                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5514  0008FA  010F               	movlb	15	; () banked
  5515  0008FC  8D11               	bsf	17,6,b	;volatile
  5516  0008FE  D002               	goto	l494
  5517  000900                     l493:
  5518                           
  5519                           ; BSR set to: 15
  5520                           ;inc\CANlib.h: 1024: else
  5521                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5522  000900  010F               	movlb	15	; () banked
  5523  000902  9D11               	bcf	17,6,b	;volatile
  5524  000904                     l494:
  5525                           
  5526                           ; BSR set to: 15
  5527                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5528  000904  A83E               	btfss	CANSetFilter@filter+2,4,c
  5529  000906  D003               	goto	l495
  5530                           
  5531                           ; BSR set to: 15
  5532                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5533  000908  010F               	movlb	15	; () banked
  5534  00090A  8F11               	bsf	17,7,b	;volatile
  5535  00090C  D002               	goto	l3913
  5536  00090E                     l495:
  5537                           
  5538                           ; BSR set to: 15
  5539                           ;inc\CANlib.h: 1029: else
  5540                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5541  00090E  010F               	movlb	15	; () banked
  5542  000910  9F11               	bcf	17,7,b	;volatile
  5543  000912                     l3913:
  5544                           
  5545                           ; BSR set to: 15
  5546                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5547  000912  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  5548  000916  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5549  00091A  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5550  00091E  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5551  000922  0E16               	movlw	22
  5552  000924  D006               	goto	u4800
  5553  000926                     u4805:
  5554  000926  0100               	movlb	0	; () banked
  5555  000928  90D8               	bcf	status,0,c
  5556  00092A  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5557  00092C  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5558  00092E  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5559  000930  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  5560  000932                     u4800:
  5561  000932  2EE8               	decfsz	wreg,f,c
  5562  000934  D7F8               	goto	u4805
  5563  000936  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5564  00093A  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5565  00093E  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5566  000942  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5570  000946  0100               	movlb	0	; () banked
  5571  000948  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  5572  00094A  0100               	movlb	0	; () banked
  5573  00094C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5574  00094E  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5575  000950  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5576  000952  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5580  000954  C065  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5581  000958                     l3919:
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;inc\CANlib.h: 1035: }
  5585                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5586  000958  0E05               	movlw	5
  5587  00095A  0100               	movlb	0	; () banked
  5588  00095C  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5589  00095E  A4D8               	btfss	status,2,c
  5590  000960  0012               	return	
  5591                           
  5592                           ; BSR set to: 0
  5593  000962  0EF7               	movlw	247
  5594  000964  1840               	xorwf	CANSetFilter@type,w,c
  5595  000966  A4D8               	btfss	status,2,c
  5596  000968  0012               	return	
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;inc\CANlib.h: 1038: {
  5600                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5601  00096A  010F               	movlb	15	; () banked
  5602  00096C  8715               	bsf	21,3,b	;volatile
  5603                           
  5604                           ; BSR set to: 15
  5605                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5606  00096E  503C               	movf	CANSetFilter@filter,w,c
  5607  000970  0100               	movlb	0	; () banked
  5608  000972  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5609  000974  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5610  000976  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5611  000978  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5615  00097A  C065  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5619  00097E  0E00               	movlw	0
  5620  000980  143C               	andwf	CANSetFilter@filter,w,c
  5621  000982  0100               	movlb	0	; () banked
  5622  000984  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5623  000986  0EFF               	movlw	255
  5624  000988  143D               	andwf	CANSetFilter@filter+1,w,c
  5625  00098A  0100               	movlb	0	; () banked
  5626  00098C  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5627  00098E  0E00               	movlw	0
  5628  000990  143E               	andwf	CANSetFilter@filter+2,w,c
  5629  000992  0100               	movlb	0	; () banked
  5630  000994  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5631  000996  0E00               	movlw	0
  5632  000998  143F               	andwf	CANSetFilter@filter+3,w,c
  5633  00099A  0100               	movlb	0	; () banked
  5634  00099C  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5638  00099E  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  5639  0009A2  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5640  0009A6  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5641  0009AA  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5642  0009AE  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  5643  0009B2  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5644  0009B6  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5645  0009BA  0100               	movlb	0	; () banked
  5646  0009BC  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  5647  0009BE  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5648  0009C2  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5649  0009C6  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5650  0009CA  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5654  0009CE  C065  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5658  0009D2  A03E               	btfss	CANSetFilter@filter+2,0,c
  5659  0009D4  D003               	goto	l498
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5663  0009D6  010F               	movlb	15	; () banked
  5664  0009D8  8115               	bsf	21,0,b	;volatile
  5665  0009DA  D002               	goto	l499
  5666  0009DC                     l498:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 1050: else
  5670                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5671  0009DC  010F               	movlb	15	; () banked
  5672  0009DE  9115               	bcf	21,0,b	;volatile
  5673  0009E0                     l499:
  5674                           
  5675                           ; BSR set to: 15
  5676                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5677  0009E0  A23E               	btfss	CANSetFilter@filter+2,1,c
  5678  0009E2  D003               	goto	l500
  5679                           
  5680                           ; BSR set to: 15
  5681                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5682  0009E4  010F               	movlb	15	; () banked
  5683  0009E6  8315               	bsf	21,1,b	;volatile
  5684  0009E8  D002               	goto	l501
  5685  0009EA                     l500:
  5686                           
  5687                           ; BSR set to: 15
  5688                           ;inc\CANlib.h: 1055: else
  5689                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5690  0009EA  010F               	movlb	15	; () banked
  5691  0009EC  9315               	bcf	21,1,b	;volatile
  5692  0009EE                     l501:
  5693                           
  5694                           ; BSR set to: 15
  5695                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5696  0009EE  A43E               	btfss	CANSetFilter@filter+2,2,c
  5697  0009F0  D003               	goto	l502
  5698                           
  5699                           ; BSR set to: 15
  5700                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5701  0009F2  010F               	movlb	15	; () banked
  5702  0009F4  8B15               	bsf	21,5,b	;volatile
  5703  0009F6  D002               	goto	l503
  5704  0009F8                     l502:
  5705                           
  5706                           ; BSR set to: 15
  5707                           ;inc\CANlib.h: 1060: else
  5708                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5709  0009F8  010F               	movlb	15	; () banked
  5710  0009FA  9B15               	bcf	21,5,b	;volatile
  5711  0009FC                     l503:
  5712                           
  5713                           ; BSR set to: 15
  5714                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5715  0009FC  A63E               	btfss	CANSetFilter@filter+2,3,c
  5716  0009FE  D003               	goto	l504
  5717                           
  5718                           ; BSR set to: 15
  5719                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5720  000A00  010F               	movlb	15	; () banked
  5721  000A02  8D15               	bsf	21,6,b	;volatile
  5722  000A04  D002               	goto	l505
  5723  000A06                     l504:
  5724                           
  5725                           ; BSR set to: 15
  5726                           ;inc\CANlib.h: 1065: else
  5727                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5728  000A06  010F               	movlb	15	; () banked
  5729  000A08  9D15               	bcf	21,6,b	;volatile
  5730  000A0A                     l505:
  5731                           
  5732                           ; BSR set to: 15
  5733                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5734  000A0A  A83E               	btfss	CANSetFilter@filter+2,4,c
  5735  000A0C  D003               	goto	l506
  5736                           
  5737                           ; BSR set to: 15
  5738                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5739  000A0E  010F               	movlb	15	; () banked
  5740  000A10  8F15               	bsf	21,7,b	;volatile
  5741  000A12  D002               	goto	l3947
  5742  000A14                     l506:
  5743                           
  5744                           ; BSR set to: 15
  5745                           ;inc\CANlib.h: 1070: else
  5746                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5747  000A14  010F               	movlb	15	; () banked
  5748  000A16  9F15               	bcf	21,7,b	;volatile
  5749  000A18                     l3947:
  5750                           
  5751                           ; BSR set to: 15
  5752                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5753  000A18  C03C  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  5754  000A1C  C03D  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5755  000A20  C03E  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5756  000A24  C03F  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5757  000A28  0E16               	movlw	22
  5758  000A2A  D006               	goto	u4880
  5759  000A2C                     u4885:
  5760  000A2C  0100               	movlb	0	; () banked
  5761  000A2E  90D8               	bcf	status,0,c
  5762  000A30  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5763  000A32  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5764  000A34  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5765  000A36  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  5766  000A38                     u4880:
  5767  000A38  2EE8               	decfsz	wreg,f,c
  5768  000A3A  D7F8               	goto	u4885
  5769  000A3C  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  5770  000A40  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5771  000A44  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5772  000A48  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5776  000A4C  0100               	movlb	0	; () banked
  5777  000A4E  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  5778  000A50  0100               	movlb	0	; () banked
  5779  000A52  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  5780  000A54  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5781  000A56  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5782  000A58  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5786  000A5A  C065  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5787  000A5E  0012               	return	
  5788  000A60                     __end_of_CANSetFilter:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           postinc0	equ	0xFEE
  5798                           wreg	equ	0xFE8
  5799                           indf2	equ	0xFDF
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function _CANOperationMode *****************
  5805 ;; Defined at:
  5806 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  mode            1    wreg     enum E16838
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  mode            1   26[COMRAM] enum E16838
  5811 ;; Return value:  Size  Location     Type
  5812 ;;		None               void
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5820 ;;      Params:         0       0       0       0
  5821 ;;      Locals:         1       0       0       0
  5822 ;;      Temps:          0       0       0       0
  5823 ;;      Totals:         1       0       0       0
  5824 ;;Total ram usage:        1 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    2
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_CANInitialize
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text12
  5835  002104                     __ptext12:
  5836                           	opt stack 0
  5837  002104                     _CANOperationMode:
  5838                           	opt stack 26
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;incstack = 0
  5842                           ;CANOperationMode@mode stored from wreg
  5843  002104  6E3C               	movwf	CANOperationMode@mode,c
  5844                           
  5845                           ;inc\CANlib.h: 208: CANCON = mode;
  5846  002106  C03C  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5847  00210A                     l3543:
  5848  00210A  506E               	movf	3950,w,c	;volatile
  5849  00210C  0BE0               	andlw	224
  5850  00210E  183C               	xorwf	CANOperationMode@mode,w,c
  5851  002110  B4D8               	btfsc	status,2,c
  5852  002112  0012               	return	
  5853  002114  D7FA               	goto	l3543
  5854  002116                     __end_of_CANOperationMode:
  5855                           	opt stack 0
  5856                           tblptru	equ	0xFF8
  5857                           tblptrh	equ	0xFF7
  5858                           tblptrl	equ	0xFF6
  5859                           tablat	equ	0xFF5
  5860                           prodh	equ	0xFF4
  5861                           prodl	equ	0xFF3
  5862                           intcon	equ	0xFF2
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           indf2	equ	0xFDF
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function ___awdiv *****************
  5871 ;; Defined at:
  5872 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  dividend        2   26[COMRAM] int 
  5875 ;;  divisor         2   28[COMRAM] int 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  quotient        2    2[BANK0 ] int 
  5878 ;;  sign            1    1[BANK0 ] unsigned char 
  5879 ;;  counter         1    0[BANK0 ] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  2   26[COMRAM] int 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5889 ;;      Params:         4       0       0       0
  5890 ;;      Locals:         0       4       0       0
  5891 ;;      Temps:          0       0       0       0
  5892 ;;      Totals:         4       4       0       0
  5893 ;;Total ram usage:        8 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    2
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text13
  5904  001DB6                     __ptext13:
  5905                           	opt stack 0
  5906  001DB6                     ___awdiv:
  5907                           	opt stack 28
  5908                           
  5909                           ;incstack = 0
  5910  001DB6  0E00               	movlw	0
  5911  001DB8  0100               	movlb	0	; () banked
  5912  001DBA  6F61               	movwf	___awdiv@sign& (0+255),b
  5913                           
  5914                           ; BSR set to: 0
  5915  001DBC  AE3F               	btfss	___awdiv@divisor+1,7,c
  5916  001DBE  D007               	goto	l4355
  5917                           
  5918                           ; BSR set to: 0
  5919  001DC0  6C3E               	negf	___awdiv@divisor,c
  5920  001DC2  1E3F               	comf	___awdiv@divisor+1,f,c
  5921  001DC4  B0D8               	btfsc	status,0,c
  5922  001DC6  2A3F               	incf	___awdiv@divisor+1,f,c
  5923                           
  5924                           ; BSR set to: 0
  5925  001DC8  0E01               	movlw	1
  5926  001DCA  0100               	movlb	0	; () banked
  5927  001DCC  6F61               	movwf	___awdiv@sign& (0+255),b
  5928  001DCE                     l4355:
  5929                           
  5930                           ; BSR set to: 0
  5931  001DCE  AE3D               	btfss	___awdiv@dividend+1,7,c
  5932  001DD0  D007               	goto	l4361
  5933                           
  5934                           ; BSR set to: 0
  5935  001DD2  6C3C               	negf	___awdiv@dividend,c
  5936  001DD4  1E3D               	comf	___awdiv@dividend+1,f,c
  5937  001DD6  B0D8               	btfsc	status,0,c
  5938  001DD8  2A3D               	incf	___awdiv@dividend+1,f,c
  5939                           
  5940                           ; BSR set to: 0
  5941  001DDA  0E01               	movlw	1
  5942  001DDC  0100               	movlb	0	; () banked
  5943  001DDE  1B61               	xorwf	___awdiv@sign& (0+255),f,b
  5944  001DE0                     l4361:
  5945                           
  5946                           ; BSR set to: 0
  5947  001DE0  0E00               	movlw	0
  5948  001DE2  0100               	movlb	0	; () banked
  5949  001DE4  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
  5950  001DE6  0E00               	movlw	0
  5951  001DE8  6F62               	movwf	___awdiv@quotient& (0+255),b
  5952                           
  5953                           ; BSR set to: 0
  5954  001DEA  503E               	movf	___awdiv@divisor,w,c
  5955  001DEC  103F               	iorwf	___awdiv@divisor+1,w,c
  5956  001DEE  B4D8               	btfsc	status,2,c
  5957  001DF0  D021               	goto	l4383
  5958                           
  5959                           ; BSR set to: 0
  5960  001DF2  0E01               	movlw	1
  5961  001DF4  0100               	movlb	0	; () banked
  5962  001DF6  6F60               	movwf	___awdiv@counter& (0+255),b
  5963  001DF8  D005               	goto	l4369
  5964  001DFA                     l4367:
  5965                           
  5966                           ; BSR set to: 0
  5967  001DFA  90D8               	bcf	status,0,c
  5968  001DFC  363E               	rlcf	___awdiv@divisor,f,c
  5969  001DFE  363F               	rlcf	___awdiv@divisor+1,f,c
  5970  001E00  0100               	movlb	0	; () banked
  5971  001E02  2B60               	incf	___awdiv@counter& (0+255),f,b
  5972  001E04                     l4369:
  5973                           
  5974                           ; BSR set to: 0
  5975  001E04  AE3F               	btfss	___awdiv@divisor+1,7,c
  5976  001E06  D7F9               	goto	l4367
  5977  001E08                     l4371:
  5978                           
  5979                           ; BSR set to: 0
  5980  001E08  0100               	movlb	0	; () banked
  5981  001E0A  90D8               	bcf	status,0,c
  5982  001E0C  3762               	rlcf	___awdiv@quotient& (0+255),f,b
  5983  001E0E  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5984                           
  5985                           ; BSR set to: 0
  5986  001E10  503E               	movf	___awdiv@divisor,w,c
  5987  001E12  5C3C               	subwf	___awdiv@dividend,w,c
  5988  001E14  503F               	movf	___awdiv@divisor+1,w,c
  5989  001E16  583D               	subwfb	___awdiv@dividend+1,w,c
  5990  001E18  A0D8               	btfss	status,0,c
  5991  001E1A  D006               	goto	l4379
  5992                           
  5993                           ; BSR set to: 0
  5994  001E1C  503E               	movf	___awdiv@divisor,w,c
  5995  001E1E  5E3C               	subwf	___awdiv@dividend,f,c
  5996  001E20  503F               	movf	___awdiv@divisor+1,w,c
  5997  001E22  5A3D               	subwfb	___awdiv@dividend+1,f,c
  5998                           
  5999                           ; BSR set to: 0
  6000  001E24  0100               	movlb	0	; () banked
  6001  001E26  8162               	bsf	___awdiv@quotient& (0+255),0,b
  6002  001E28                     l4379:
  6003                           
  6004                           ; BSR set to: 0
  6005  001E28  90D8               	bcf	status,0,c
  6006  001E2A  323F               	rrcf	___awdiv@divisor+1,f,c
  6007  001E2C  323E               	rrcf	___awdiv@divisor,f,c
  6008                           
  6009                           ; BSR set to: 0
  6010  001E2E  0100               	movlb	0	; () banked
  6011  001E30  2F60               	decfsz	___awdiv@counter& (0+255),f,b
  6012  001E32  D7EA               	goto	l4371
  6013  001E34                     l4383:
  6014                           
  6015                           ; BSR set to: 0
  6016  001E34  0100               	movlb	0	; () banked
  6017  001E36  5161               	movf	___awdiv@sign& (0+255),w,b
  6018  001E38  0100               	movlb	0	; () banked
  6019  001E3A  B4D8               	btfsc	status,2,c
  6020  001E3C  D005               	goto	l4387
  6021                           
  6022                           ; BSR set to: 0
  6023  001E3E  0100               	movlb	0	; () banked
  6024  001E40  6D62               	negf	___awdiv@quotient& (0+255),b
  6025  001E42  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6026  001E44  B0D8               	btfsc	status,0,c
  6027  001E46  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6028  001E48                     l4387:
  6029                           
  6030                           ; BSR set to: 0
  6031  001E48  C062  F03C         	movff	___awdiv@quotient,?___awdiv
  6032  001E4C  C063  F03D         	movff	___awdiv@quotient+1,?___awdiv+1
  6033  001E50  0012               	return	
  6034  001E52                     __end_of___awdiv:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           postinc0	equ	0xFEE
  6044                           wreg	equ	0xFE8
  6045                           indf2	equ	0xFDF
  6046                           fsr2h	equ	0xFDA
  6047                           fsr2l	equ	0xFD9
  6048                           status	equ	0xFD8
  6049                           
  6050 ;; *************** function _CANisTXwarningON *****************
  6051 ;; Defined at:
  6052 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6066 ;;      Params:         0       0       0       0
  6067 ;;      Locals:         0       0       0       0
  6068 ;;      Temps:          0       0       0       0
  6069 ;;      Totals:         0       0       0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    2
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text14
  6081  002126                     __ptext14:
  6082                           	opt stack 0
  6083  002126                     _CANisTXwarningON:
  6084                           	opt stack 28
  6085                           
  6086                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;incstack = 0
  6090  002126  A474               	btfss	3956,2,c	;volatile
  6091  002128  D002               	goto	u1710
  6092  00212A  0E01               	movlw	1
  6093  00212C  0012               	return	
  6094  00212E                     u1710:
  6095  00212E  0E00               	movlw	0
  6096  002130  0012               	return	
  6097  002132                     __end_of_CANisTXwarningON:
  6098                           	opt stack 0
  6099                           tblptru	equ	0xFF8
  6100                           tblptrh	equ	0xFF7
  6101                           tblptrl	equ	0xFF6
  6102                           tablat	equ	0xFF5
  6103                           prodh	equ	0xFF4
  6104                           prodl	equ	0xFF3
  6105                           intcon	equ	0xFF2
  6106                           postinc0	equ	0xFEE
  6107                           wreg	equ	0xFE8
  6108                           indf2	equ	0xFDF
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function _CANisRXwarningON *****************
  6114 ;; Defined at:
  6115 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      unsigned char 
  6122 ;; Registers used:
  6123 ;;		wreg
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6129 ;;      Params:         0       0       0       0
  6130 ;;      Locals:         0       0       0       0
  6131 ;;      Temps:          0       0       0       0
  6132 ;;      Totals:         0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    2
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text15
  6144  002132                     __ptext15:
  6145                           	opt stack 0
  6146  002132                     _CANisRXwarningON:
  6147                           	opt stack 28
  6148                           
  6149                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6150                           
  6151                           ;incstack = 0
  6152  002132  A274               	btfss	3956,1,c	;volatile
  6153  002134  D002               	goto	u1720
  6154  002136  0E01               	movlw	1
  6155  002138  0012               	return	
  6156  00213A                     u1720:
  6157  00213A  0E00               	movlw	0
  6158  00213C  0012               	return	
  6159  00213E                     __end_of_CANisRXwarningON:
  6160                           	opt stack 0
  6161                           tblptru	equ	0xFF8
  6162                           tblptrh	equ	0xFF7
  6163                           tblptrl	equ	0xFF6
  6164                           tablat	equ	0xFF5
  6165                           prodh	equ	0xFF4
  6166                           prodl	equ	0xFF3
  6167                           intcon	equ	0xFF2
  6168                           postinc0	equ	0xFEE
  6169                           wreg	equ	0xFE8
  6170                           indf2	equ	0xFDF
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _ADC_Read *****************
  6176 ;; Defined at:
  6177 ;;		line 159 in file "Brake_System.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;		None               void
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6191 ;;      Params:         0       0       0       0
  6192 ;;      Locals:         0       0       0       0
  6193 ;;      Temps:          0       2       0       0
  6194 ;;      Totals:         0       2       0       0
  6195 ;;Total ram usage:        2 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    3
  6198 ;; This function calls:
  6199 ;;		___lwdiv
  6200 ;; This function is called by:
  6201 ;;		_main
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text16
  6206  001EEC                     __ptext16:
  6207                           	opt stack 0
  6208  001EEC                     _ADC_Read:
  6209                           	opt stack 27
  6210                           
  6211                           ;Brake_System.c: 160: for (i = 0; i<number_of_measures; i++){
  6212                           
  6213                           ;incstack = 0
  6214  001EEC  0E00               	movlw	0
  6215  001EEE  6E11               	movwf	_i,c
  6216  001EF0  D00C               	goto	l4335
  6217  001EF2                     l630:
  6218                           
  6219                           ;Brake_System.c: 161: ADCON0bits.GO = 1;
  6220  001EF2  82C2               	bsf	4034,1,c	;volatile
  6221  001EF4                     l631:
  6222  001EF4  B2C2               	btfsc	4034,1,c	;volatile
  6223  001EF6  D7FE               	goto	l631
  6224                           
  6225                           ;Brake_System.c: 163: read = ADRESH;
  6226  001EF8  CFC4 F012          	movff	4036,_read	;volatile
  6227                           
  6228                           ;Brake_System.c: 164: partial_sum = partial_sum + read;
  6229  001EFC  5012               	movf	_read,w,c
  6230  001EFE  2409               	addwf	_partial_sum,w,c
  6231  001F00  6E09               	movwf	_partial_sum,c
  6232  001F02  0E00               	movlw	0
  6233  001F04  200A               	addwfc	_partial_sum+1,w,c
  6234  001F06  6E0A               	movwf	_partial_sum+1,c
  6235  001F08  2A11               	incf	_i,f,c
  6236  001F0A                     l4335:
  6237  001F0A  5042               	movf	_number_of_measures,w,c
  6238  001F0C  5C11               	subwf	_i,w,c
  6239  001F0E  A0D8               	btfss	status,0,c
  6240  001F10  D7F0               	goto	l630
  6241                           
  6242                           ;Brake_System.c: 165: }
  6243                           ;Brake_System.c: 166: correction_factor = (partial_sum/number_of_measures)-127;
  6244  001F12  C009  F03C         	movff	_partial_sum,___lwdiv@dividend
  6245  001F16  C00A  F03D         	movff	_partial_sum+1,___lwdiv@dividend+1
  6246  001F1A  C042  F03E         	movff	_number_of_measures,___lwdiv@divisor
  6247  001F1E  6A3F               	clrf	___lwdiv@divisor+1,c
  6248  001F20  ECA9  F00F         	call	___lwdiv	;wreg free
  6249  001F24  0E81               	movlw	129
  6250  001F26  243C               	addwf	?___lwdiv,w,c
  6251  001F28  6E07               	movwf	_correction_factor,c
  6252  001F2A  0EFF               	movlw	255
  6253  001F2C  203D               	addwfc	?___lwdiv+1,w,c
  6254  001F2E  6E08               	movwf	_correction_factor+1,c
  6255                           
  6256                           ;Brake_System.c: 167: home_position = correction_factor / 4 + 127;
  6257  001F30  C007  F063         	movff	_correction_factor,??_ADC_Read
  6258  001F34  C008  F064         	movff	_correction_factor+1,??_ADC_Read+1
  6259  001F38  0100               	movlb	0	; () banked
  6260  001F3A  90D8               	bcf	status,0,c
  6261  001F3C  3364               	rrcf	(??_ADC_Read+1)& (0+255),f,b
  6262  001F3E  3363               	rrcf	??_ADC_Read& (0+255),f,b
  6263  001F40  0100               	movlb	0	; () banked
  6264  001F42  90D8               	bcf	status,0,c
  6265  001F44  3364               	rrcf	(??_ADC_Read+1)& (0+255),f,b
  6266  001F46  3363               	rrcf	??_ADC_Read& (0+255),f,b
  6267  001F48  0100               	movlb	0	; () banked
  6268  001F4A  5163               	movf	??_ADC_Read& (0+255),w,b
  6269  001F4C  0F7F               	addlw	127
  6270  001F4E  6E10               	movwf	_home_position,c
  6271                           
  6272                           ; BSR set to: 0
  6273  001F50  0012               	return		;funcret
  6274  001F52                     __end_of_ADC_Read:
  6275                           	opt stack 0
  6276                           tblptru	equ	0xFF8
  6277                           tblptrh	equ	0xFF7
  6278                           tblptrl	equ	0xFF6
  6279                           tablat	equ	0xFF5
  6280                           prodh	equ	0xFF4
  6281                           prodl	equ	0xFF3
  6282                           intcon	equ	0xFF2
  6283                           postinc0	equ	0xFEE
  6284                           wreg	equ	0xFE8
  6285                           indf2	equ	0xFDF
  6286                           fsr2h	equ	0xFDA
  6287                           fsr2l	equ	0xFD9
  6288                           status	equ	0xFD8
  6289                           
  6290 ;; *************** function ___lwdiv *****************
  6291 ;; Defined at:
  6292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  dividend        2   26[COMRAM] unsigned int 
  6295 ;;  divisor         2   28[COMRAM] unsigned int 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  quotient        2    1[BANK0 ] unsigned int 
  6298 ;;  counter         1    0[BANK0 ] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  2   26[COMRAM] unsigned int 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6308 ;;      Params:         4       0       0       0
  6309 ;;      Locals:         0       3       0       0
  6310 ;;      Temps:          0       0       0       0
  6311 ;;      Totals:         4       3       0       0
  6312 ;;Total ram usage:        7 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    2
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_ADC_Read
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text17
  6323  001F52                     __ptext17:
  6324                           	opt stack 0
  6325  001F52                     ___lwdiv:
  6326                           	opt stack 27
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;incstack = 0
  6330  001F52  0E00               	movlw	0
  6331  001F54  0100               	movlb	0	; () banked
  6332  001F56  6F62               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6333  001F58  0E00               	movlw	0
  6334  001F5A  6F61               	movwf	___lwdiv@quotient& (0+255),b
  6335                           
  6336                           ; BSR set to: 0
  6337  001F5C  503E               	movf	___lwdiv@divisor,w,c
  6338  001F5E  103F               	iorwf	___lwdiv@divisor+1,w,c
  6339  001F60  B4D8               	btfsc	status,2,c
  6340  001F62  D021               	goto	l1072
  6341                           
  6342                           ; BSR set to: 0
  6343  001F64  0E01               	movlw	1
  6344  001F66  0100               	movlb	0	; () banked
  6345  001F68  6F60               	movwf	___lwdiv@counter& (0+255),b
  6346  001F6A  D005               	goto	l4259
  6347  001F6C                     l4257:
  6348                           
  6349                           ; BSR set to: 0
  6350  001F6C  90D8               	bcf	status,0,c
  6351  001F6E  363E               	rlcf	___lwdiv@divisor,f,c
  6352  001F70  363F               	rlcf	___lwdiv@divisor+1,f,c
  6353  001F72  0100               	movlb	0	; () banked
  6354  001F74  2B60               	incf	___lwdiv@counter& (0+255),f,b
  6355  001F76                     l4259:
  6356                           
  6357                           ; BSR set to: 0
  6358  001F76  AE3F               	btfss	___lwdiv@divisor+1,7,c
  6359  001F78  D7F9               	goto	l4257
  6360  001F7A                     l4261:
  6361                           
  6362                           ; BSR set to: 0
  6363  001F7A  0100               	movlb	0	; () banked
  6364  001F7C  90D8               	bcf	status,0,c
  6365  001F7E  3761               	rlcf	___lwdiv@quotient& (0+255),f,b
  6366  001F80  3762               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6367                           
  6368                           ; BSR set to: 0
  6369  001F82  503E               	movf	___lwdiv@divisor,w,c
  6370  001F84  5C3C               	subwf	___lwdiv@dividend,w,c
  6371  001F86  503F               	movf	___lwdiv@divisor+1,w,c
  6372  001F88  583D               	subwfb	___lwdiv@dividend+1,w,c
  6373  001F8A  A0D8               	btfss	status,0,c
  6374  001F8C  D006               	goto	l4269
  6375                           
  6376                           ; BSR set to: 0
  6377  001F8E  503E               	movf	___lwdiv@divisor,w,c
  6378  001F90  5E3C               	subwf	___lwdiv@dividend,f,c
  6379  001F92  503F               	movf	___lwdiv@divisor+1,w,c
  6380  001F94  5A3D               	subwfb	___lwdiv@dividend+1,f,c
  6381                           
  6382                           ; BSR set to: 0
  6383  001F96  0100               	movlb	0	; () banked
  6384  001F98  8161               	bsf	___lwdiv@quotient& (0+255),0,b
  6385  001F9A                     l4269:
  6386                           
  6387                           ; BSR set to: 0
  6388  001F9A  90D8               	bcf	status,0,c
  6389  001F9C  323F               	rrcf	___lwdiv@divisor+1,f,c
  6390  001F9E  323E               	rrcf	___lwdiv@divisor,f,c
  6391                           
  6392                           ; BSR set to: 0
  6393  001FA0  0100               	movlb	0	; () banked
  6394  001FA2  2F60               	decfsz	___lwdiv@counter& (0+255),f,b
  6395  001FA4  D7EA               	goto	l4261
  6396  001FA6                     l1072:
  6397                           
  6398                           ; BSR set to: 0
  6399  001FA6  C061  F03C         	movff	___lwdiv@quotient,?___lwdiv
  6400  001FAA  C062  F03D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6401                           
  6402                           ; BSR set to: 0
  6403  001FAE  0012               	return		;funcret
  6404  001FB0                     __end_of___lwdiv:
  6405                           	opt stack 0
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           prodh	equ	0xFF4
  6411                           prodl	equ	0xFF3
  6412                           intcon	equ	0xFF2
  6413                           postinc0	equ	0xFEE
  6414                           wreg	equ	0xFE8
  6415                           indf2	equ	0xFDF
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function _ISR_Alta *****************
  6421 ;; Defined at:
  6422 ;;		line 79 in file "Brake_System.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;		None               void
  6429 ;; Registers used:
  6430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6436 ;;      Params:         0       0       0       0
  6437 ;;      Locals:         0       0       0       0
  6438 ;;      Temps:         14       0       0       0
  6439 ;;      Totals:        14       0       0       0
  6440 ;;Total ram usage:       14 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    1
  6443 ;; This function calls:
  6444 ;;		_CANisRxReady
  6445 ;;		_CANreceiveMessage
  6446 ;; This function is called by:
  6447 ;;		Interrupt level 2
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	intcode
  6452  000008                     __pintcode:
  6453                           	opt stack 0
  6454  000008                     _ISR_Alta:
  6455                           	opt stack 26
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;incstack = 0
  6459  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6460  00000A  CFFA F02E          	movff	pclath,??_ISR_Alta
  6461  00000E  CFFB F02F          	movff	pclatu,??_ISR_Alta+1
  6462  000012  ED7F  F00E         	call	int_func,f	;refresh shadow registers
  6463                           pclatu	equ	0xFFB
  6464                           pclath	equ	0xFFA
  6465                           tblptru	equ	0xFF8
  6466                           tblptrh	equ	0xFF7
  6467                           tblptrl	equ	0xFF6
  6468                           tablat	equ	0xFF5
  6469                           prodh	equ	0xFF4
  6470                           prodl	equ	0xFF3
  6471                           intcon	equ	0xFF2
  6472                           postinc0	equ	0xFEE
  6473                           wreg	equ	0xFE8
  6474                           indf2	equ	0xFDF
  6475                           fsr2h	equ	0xFDA
  6476                           fsr2l	equ	0xFD9
  6477                           status	equ	0xFD8
  6478                           
  6479                           	psect	intcode_body
  6480  001CFE                     __pintcode_body:
  6481                           	opt stack 26
  6482  001CFE                     int_func:
  6483                           	opt stack 26
  6484  001CFE  0006               	pop		; remove dummy address from shadow register refresh
  6485  001D00  CFE9 F030          	movff	fsr0l,??_ISR_Alta+2
  6486  001D04  CFEA F031          	movff	fsr0h,??_ISR_Alta+3
  6487  001D08  CFE1 F032          	movff	fsr1l,??_ISR_Alta+4
  6488  001D0C  CFE2 F033          	movff	fsr1h,??_ISR_Alta+5
  6489  001D10  CFD9 F034          	movff	fsr2l,??_ISR_Alta+6
  6490  001D14  CFDA F035          	movff	fsr2h,??_ISR_Alta+7
  6491  001D18  CFF3 F036          	movff	prodl,??_ISR_Alta+8
  6492  001D1C  CFF4 F037          	movff	prodh,??_ISR_Alta+9
  6493  001D20  CFF6 F038          	movff	tblptrl,??_ISR_Alta+10
  6494  001D24  CFF7 F039          	movff	tblptrh,??_ISR_Alta+11
  6495  001D28  CFF8 F03A          	movff	tblptru,??_ISR_Alta+12
  6496  001D2C  CFF5 F03B          	movff	tablat,??_ISR_Alta+13
  6497                           
  6498                           ;Brake_System.c: 80: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6499  001D30  A0A4               	btfss	4004,0,c	;volatile
  6500  001D32  B2A4               	btfsc	4004,1,c	;volatile
  6501  001D34  D001               	goto	i2l3447
  6502  001D36  D01F               	goto	i2l598
  6503  001D38                     i2l3447:
  6504                           
  6505                           ;Brake_System.c: 81: if (CANisRxReady()) {
  6506  001D38  EC77  F010         	call	_CANisRxReady	;wreg free
  6507  001D3C  0900               	iorlw	0
  6508  001D3E  B4D8               	btfsc	status,2,c
  6509  001D40  D01A               	goto	i2l598
  6510                           
  6511                           ;Brake_System.c: 82: CANreceiveMessage(&msg);
  6512  001D42  0E13               	movlw	low _msg
  6513  001D44  6E22               	movwf	CANreceiveMessage@msg,c
  6514  001D46  0E00               	movlw	high _msg
  6515  001D48  6E23               	movwf	CANreceiveMessage@msg+1,c
  6516  001D4A  ECEA  F008         	call	_CANreceiveMessage	;wreg free
  6517                           
  6518                           ;Brake_System.c: 83: if (msg.RTR == 1) {
  6519  001D4E  0421               	decf	_msg+14,w,c
  6520  001D50  A4D8               	btfss	status,2,c
  6521  001D52  D009               	goto	i2l3455
  6522                           
  6523                           ;Brake_System.c: 84: id = msg.identifier;
  6524  001D54  C013  F001         	movff	_msg,_id
  6525  001D58  C014  F002         	movff	_msg+1,_id+1
  6526  001D5C  C015  F003         	movff	_msg+2,_id+2
  6527  001D60  C016  F004         	movff	_msg+3,_id+3
  6528                           
  6529                           ;Brake_System.c: 85: remote_frame = 1;
  6530  001D64  8244               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6531  001D66                     i2l3455:
  6532                           
  6533                           ;Brake_System.c: 86: }
  6534                           ;Brake_System.c: 87: if (msg.identifier == 0b00000000000000000000000000110) {
  6535  001D66  0E06               	movlw	6
  6536  001D68  1813               	xorwf	_msg,w,c
  6537  001D6A  1014               	iorwf	_msg+1,w,c
  6538  001D6C  1015               	iorwf	_msg+2,w,c
  6539  001D6E  1016               	iorwf	_msg+3,w,c
  6540  001D70  B4D8               	btfsc	status,2,c
  6541                           
  6542                           ;Brake_System.c: 88: brake_signal_CAN = msg.data[0];
  6543  001D72  C017  F00D         	movff	_msg+4,_brake_signal_CAN
  6544  001D76                     i2l598:
  6545                           
  6546                           ;Brake_System.c: 89: }
  6547                           ;Brake_System.c: 90: }
  6548                           ;Brake_System.c: 91: }
  6549                           ;Brake_System.c: 92: PIR3bits.RXB0IF = 0;
  6550  001D76  90A4               	bcf	4004,0,c	;volatile
  6551                           
  6552                           ;Brake_System.c: 93: PIR3bits.RXB1IF = 0;
  6553  001D78  92A4               	bcf	4004,1,c	;volatile
  6554  001D7A  C03B  FFF5         	movff	??_ISR_Alta+13,tablat
  6555  001D7E  C03A  FFF8         	movff	??_ISR_Alta+12,tblptru
  6556  001D82  C039  FFF7         	movff	??_ISR_Alta+11,tblptrh
  6557  001D86  C038  FFF6         	movff	??_ISR_Alta+10,tblptrl
  6558  001D8A  C037  FFF4         	movff	??_ISR_Alta+9,prodh
  6559  001D8E  C036  FFF3         	movff	??_ISR_Alta+8,prodl
  6560  001D92  C035  FFDA         	movff	??_ISR_Alta+7,fsr2h
  6561  001D96  C034  FFD9         	movff	??_ISR_Alta+6,fsr2l
  6562  001D9A  C033  FFE2         	movff	??_ISR_Alta+5,fsr1h
  6563  001D9E  C032  FFE1         	movff	??_ISR_Alta+4,fsr1l
  6564  001DA2  C031  FFEA         	movff	??_ISR_Alta+3,fsr0h
  6565  001DA6  C030  FFE9         	movff	??_ISR_Alta+2,fsr0l
  6566  001DAA  C02F  FFFB         	movff	??_ISR_Alta+1,pclatu
  6567  001DAE  C02E  FFFA         	movff	??_ISR_Alta,pclath
  6568  001DB2  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6569  001DB4  0011               	retfie		f
  6570  001DB6                     __end_of_ISR_Alta:
  6571                           	opt stack 0
  6572                           pclatu	equ	0xFFB
  6573                           pclath	equ	0xFFA
  6574                           tblptru	equ	0xFF8
  6575                           tblptrh	equ	0xFF7
  6576                           tblptrl	equ	0xFF6
  6577                           tablat	equ	0xFF5
  6578                           prodh	equ	0xFF4
  6579                           prodl	equ	0xFF3
  6580                           intcon	equ	0xFF2
  6581                           postinc0	equ	0xFEE
  6582                           fsr0h	equ	0xFEA
  6583                           fsr0l	equ	0xFE9
  6584                           wreg	equ	0xFE8
  6585                           fsr1h	equ	0xFE2
  6586                           fsr1l	equ	0xFE1
  6587                           indf2	equ	0xFDF
  6588                           fsr2h	equ	0xFDA
  6589                           fsr2l	equ	0xFD9
  6590                           status	equ	0xFD8
  6591                           
  6592 ;; *************** function _CANreceiveMessage *****************
  6593 ;; Defined at:
  6594 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  msg             2    0[COMRAM] PTR struct .
  6597 ;;		 -> msg(15), 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  tamp            1   11[COMRAM] unsigned char 
  6600 ;;  error           1   10[COMRAM] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      unsigned char 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6610 ;;      Params:         2       0       0       0
  6611 ;;      Locals:         2       0       0       0
  6612 ;;      Temps:          8       0       0       0
  6613 ;;      Totals:        12       0       0       0
  6614 ;;Total ram usage:       12 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_ISR_Alta
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text19
  6624  0011D4                     __ptext19:
  6625                           	opt stack 0
  6626  0011D4                     _CANreceiveMessage:
  6627                           	opt stack 26
  6628                           
  6629                           ;inc\CANlib.h: 530: BYTE tamp;
  6630                           ;inc\CANlib.h: 531: BYTE error = 0;
  6631                           
  6632                           ;incstack = 0
  6633  0011D4  0E00               	movlw	0
  6634  0011D6  6E2C               	movwf	CANreceiveMessage@error,c
  6635                           
  6636                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  6637  0011D8  BE74               	btfsc	3956,7,c	;volatile
  6638                           
  6639                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  6640  0011DA  802C               	bsf	CANreceiveMessage@error,0,c
  6641                           
  6642                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  6643  0011DC  BC74               	btfsc	3956,6,c	;volatile
  6644                           
  6645                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  6646  0011DE  822C               	bsf	CANreceiveMessage@error,1,c
  6647                           
  6648                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  6649  0011E0  010F               	movlb	15	; () banked
  6650  0011E2  AF50               	btfss	80,7,b	;volatile
  6651  0011E4  D143               	goto	i2l390
  6652                           
  6653                           ; BSR set to: 15
  6654                           ;inc\CANlib.h: 541: {
  6655                           ;inc\CANlib.h: 542: msg->identifier = 0;
  6656  0011E6  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6657  0011EA  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6658  0011EE  6ADE               	clrf	postinc2,c
  6659  0011F0  6ADE               	clrf	postinc2,c
  6660  0011F2  6ADE               	clrf	postinc2,c
  6661  0011F4  6ADD               	clrf	postdec2,c
  6662                           
  6663                           ; BSR set to: 15
  6664                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  6665  0011F6  EE20 F004          	lfsr	2,4
  6666  0011FA  5022               	movf	CANreceiveMessage@msg,w,c
  6667  0011FC  26D9               	addwf	fsr2l,f,c
  6668  0011FE  5023               	movf	CANreceiveMessage@msg+1,w,c
  6669  001200  22DA               	addwfc	fsr2h,f,c
  6670  001202  CF56 FFDF          	movff	3926,indf2	;volatile
  6671                           
  6672                           ; BSR set to: 15
  6673                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  6674  001206  EE20 F005          	lfsr	2,5
  6675  00120A  5022               	movf	CANreceiveMessage@msg,w,c
  6676  00120C  26D9               	addwf	fsr2l,f,c
  6677  00120E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6678  001210  22DA               	addwfc	fsr2h,f,c
  6679  001212  CF57 FFDF          	movff	3927,indf2	;volatile
  6680                           
  6681                           ; BSR set to: 15
  6682                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  6683  001216  EE20 F006          	lfsr	2,6
  6684  00121A  5022               	movf	CANreceiveMessage@msg,w,c
  6685  00121C  26D9               	addwf	fsr2l,f,c
  6686  00121E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6687  001220  22DA               	addwfc	fsr2h,f,c
  6688  001222  CF58 FFDF          	movff	3928,indf2	;volatile
  6689                           
  6690                           ; BSR set to: 15
  6691                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  6692  001226  EE20 F007          	lfsr	2,7
  6693  00122A  5022               	movf	CANreceiveMessage@msg,w,c
  6694  00122C  26D9               	addwf	fsr2l,f,c
  6695  00122E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6696  001230  22DA               	addwfc	fsr2h,f,c
  6697  001232  CF59 FFDF          	movff	3929,indf2	;volatile
  6698                           
  6699                           ; BSR set to: 15
  6700                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  6701  001236  EE20 F008          	lfsr	2,8
  6702  00123A  5022               	movf	CANreceiveMessage@msg,w,c
  6703  00123C  26D9               	addwf	fsr2l,f,c
  6704  00123E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6705  001240  22DA               	addwfc	fsr2h,f,c
  6706  001242  CF5A FFDF          	movff	3930,indf2	;volatile
  6707                           
  6708                           ; BSR set to: 15
  6709                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  6710  001246  EE20 F009          	lfsr	2,9
  6711  00124A  5022               	movf	CANreceiveMessage@msg,w,c
  6712  00124C  26D9               	addwf	fsr2l,f,c
  6713  00124E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6714  001250  22DA               	addwfc	fsr2h,f,c
  6715  001252  CF5B FFDF          	movff	3931,indf2	;volatile
  6716                           
  6717                           ; BSR set to: 15
  6718                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  6719  001256  EE20 F00A          	lfsr	2,10
  6720  00125A  5022               	movf	CANreceiveMessage@msg,w,c
  6721  00125C  26D9               	addwf	fsr2l,f,c
  6722  00125E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6723  001260  22DA               	addwfc	fsr2h,f,c
  6724  001262  CF5C FFDF          	movff	3932,indf2	;volatile
  6725                           
  6726                           ; BSR set to: 15
  6727                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  6728  001266  EE20 F00B          	lfsr	2,11
  6729  00126A  5022               	movf	CANreceiveMessage@msg,w,c
  6730  00126C  26D9               	addwf	fsr2l,f,c
  6731  00126E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6732  001270  22DA               	addwfc	fsr2h,f,c
  6733  001272  CF5D FFDF          	movff	3933,indf2	;volatile
  6734                           
  6735                           ; BSR set to: 15
  6736                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  6737  001276  EE20 F00E          	lfsr	2,14
  6738  00127A  5022               	movf	CANreceiveMessage@msg,w,c
  6739  00127C  26D9               	addwf	fsr2l,f,c
  6740  00127E  5023               	movf	CANreceiveMessage@msg+1,w,c
  6741  001280  22DA               	addwfc	fsr2h,f,c
  6742  001282  010F               	movlb	15	; () banked
  6743  001284  AD55               	btfss	85,6,b	;volatile
  6744  001286  D002               	goto	i2u347_40
  6745  001288  0E01               	movlw	1
  6746  00128A  D001               	goto	i2u347_46
  6747  00128C                     i2u347_40:
  6748  00128C  0E00               	movlw	0
  6749  00128E                     i2u347_46:
  6750  00128E  6EDF               	movwf	indf2,c
  6751                           
  6752                           ; BSR set to: 15
  6753                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  6754  001290  EE20 F00D          	lfsr	2,13
  6755  001294  5022               	movf	CANreceiveMessage@msg,w,c
  6756  001296  26D9               	addwf	fsr2l,f,c
  6757  001298  5023               	movf	CANreceiveMessage@msg+1,w,c
  6758  00129A  22DA               	addwfc	fsr2h,f,c
  6759  00129C  010F               	movlb	15	; () banked
  6760  00129E  5155               	movf	85,w,b	;volatile
  6761  0012A0  0B0F               	andlw	15
  6762  0012A2  6EDF               	movwf	indf2,c
  6763                           
  6764                           ; BSR set to: 15
  6765                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  6766  0012A4  EE20 F00C          	lfsr	2,12
  6767  0012A8  5022               	movf	CANreceiveMessage@msg,w,c
  6768  0012AA  26D9               	addwf	fsr2l,f,c
  6769  0012AC  5023               	movf	CANreceiveMessage@msg+1,w,c
  6770  0012AE  22DA               	addwfc	fsr2h,f,c
  6771  0012B0  010F               	movlb	15	; () banked
  6772  0012B2  A752               	btfss	82,3,b	;volatile
  6773  0012B4  D002               	goto	i2u348_40
  6774  0012B6  0E01               	movlw	1
  6775  0012B8  D001               	goto	i2u348_46
  6776  0012BA                     i2u348_40:
  6777  0012BA  0E00               	movlw	0
  6778  0012BC                     i2u348_46:
  6779  0012BC  6EDF               	movwf	indf2,c
  6780                           
  6781                           ; BSR set to: 15
  6782                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  6783  0012BE  010F               	movlb	15	; () banked
  6784  0012C0  B752               	btfsc	82,3,b	;volatile
  6785  0012C2  D044               	goto	i2l3215
  6786                           
  6787                           ; BSR set to: 15
  6788                           ;inc\CANlib.h: 559: {
  6789                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  6790  0012C4  CF51 F024          	movff	3921,??_CANreceiveMessage	;volatile
  6791  0012C8  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6792  0012CA  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6793  0012CC  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6794  0012CE  0E03               	movlw	3
  6795  0012D0                     i2u350_45:
  6796  0012D0  90D8               	bcf	status,0,c
  6797  0012D2  3624               	rlcf	??_CANreceiveMessage,f,c
  6798  0012D4  3625               	rlcf	??_CANreceiveMessage+1,f,c
  6799  0012D6  3626               	rlcf	??_CANreceiveMessage+2,f,c
  6800  0012D8  3627               	rlcf	??_CANreceiveMessage+3,f,c
  6801  0012DA  2EE8               	decfsz	wreg,f,c
  6802  0012DC  D7F9               	goto	i2u350_45
  6803  0012DE  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6804  0012E2  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6805  0012E6  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  6806  0012EA  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6807  0012EE  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6808  0012F2  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6809                           
  6810                           ; BSR set to: 15
  6811                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  6812  0012F6  010F               	movlb	15	; () banked
  6813  0012F8  3952               	swapf	82,w,b	;volatile
  6814  0012FA  42E8               	rrncf	wreg,f,c
  6815  0012FC  0B07               	andlw	7
  6816  0012FE  0B07               	andlw	7
  6817  001300  6E2D               	movwf	CANreceiveMessage@tamp,c
  6818                           
  6819                           ; BSR set to: 15
  6820                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  6821  001302  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6822  001306  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6823  00130A  CFDE F024          	movff	postinc2,??_CANreceiveMessage
  6824  00130E  CFDE F025          	movff	postinc2,??_CANreceiveMessage+1
  6825  001312  CFDE F026          	movff	postinc2,??_CANreceiveMessage+2
  6826  001316  CFDE F027          	movff	postinc2,??_CANreceiveMessage+3
  6827  00131A  502D               	movf	CANreceiveMessage@tamp,w,c
  6828  00131C  2424               	addwf	??_CANreceiveMessage,w,c
  6829  00131E  6E28               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  6830  001320  0E00               	movlw	0
  6831  001322  2025               	addwfc	??_CANreceiveMessage+1,w,c
  6832  001324  6E29               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  6833  001326  0E00               	movlw	0
  6834  001328  2026               	addwfc	??_CANreceiveMessage+2,w,c
  6835  00132A  6E2A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  6836  00132C  0E00               	movlw	0
  6837  00132E  2027               	addwfc	??_CANreceiveMessage+3,w,c
  6838  001330  6E2B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  6839  001332  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6840  001336  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6841  00133A  C028  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  6842  00133E  C029  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  6843  001342  C02A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  6844  001346  C02B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  6845                           
  6846                           ;inc\CANlib.h: 563: }
  6847  00134A  D08D               	goto	i2l3241
  6848  00134C                     i2l3215:
  6849                           
  6850                           ; BSR set to: 15
  6851                           ;inc\CANlib.h: 564: else
  6852                           ;inc\CANlib.h: 565: {
  6853                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  6854  00134C  CF54 F024          	movff	3924,??_CANreceiveMessage	;volatile
  6855  001350  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6856  001352  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6857  001354  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6858  001356  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6859  00135A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6860  00135E  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  6861  001362  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6862  001366  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6863  00136A  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6864                           
  6865                           ; BSR set to: 15
  6866                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  6867  00136E  CF53 F024          	movff	3923,??_CANreceiveMessage	;volatile
  6868  001372  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6869  001374  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6870  001376  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6871  001378  C026  F027         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  6872  00137C  C025  F026         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  6873  001380  C024  F025         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  6874  001384  6A24               	clrf	??_CANreceiveMessage,c
  6875  001386  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6876  00138A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6877  00138E  5024               	movf	??_CANreceiveMessage,w,c
  6878  001390  26DE               	addwf	postinc2,f,c
  6879  001392  5025               	movf	??_CANreceiveMessage+1,w,c
  6880  001394  22DE               	addwfc	postinc2,f,c
  6881  001396  5026               	movf	??_CANreceiveMessage+2,w,c
  6882  001398  22DE               	addwfc	postinc2,f,c
  6883  00139A  5027               	movf	??_CANreceiveMessage+3,w,c
  6884  00139C  22DE               	addwfc	postinc2,f,c
  6885                           
  6886                           ; BSR set to: 15
  6887                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  6888  00139E  010F               	movlb	15	; () banked
  6889  0013A0  A152               	btfss	82,0,b	;volatile
  6890  0013A2  D00C               	goto	i2l3223
  6891                           
  6892                           ; BSR set to: 15
  6893                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  6894  0013A4  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6895  0013A8  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6896  0013AC  0E00               	movlw	0
  6897  0013AE  12DE               	iorwf	postinc2,f,c
  6898  0013B0  0E00               	movlw	0
  6899  0013B2  12DE               	iorwf	postinc2,f,c
  6900  0013B4  0E01               	movlw	1
  6901  0013B6  12DE               	iorwf	postinc2,f,c
  6902  0013B8  0E00               	movlw	0
  6903  0013BA  12DE               	iorwf	postinc2,f,c
  6904  0013BC                     i2l3223:
  6905                           
  6906                           ; BSR set to: 15
  6907                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  6908  0013BC  010F               	movlb	15	; () banked
  6909  0013BE  A352               	btfss	82,1,b	;volatile
  6910  0013C0  D00C               	goto	i2l3227
  6911                           
  6912                           ; BSR set to: 15
  6913                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  6914  0013C2  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6915  0013C6  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6916  0013CA  0E00               	movlw	0
  6917  0013CC  12DE               	iorwf	postinc2,f,c
  6918  0013CE  0E00               	movlw	0
  6919  0013D0  12DE               	iorwf	postinc2,f,c
  6920  0013D2  0E02               	movlw	2
  6921  0013D4  12DE               	iorwf	postinc2,f,c
  6922  0013D6  0E00               	movlw	0
  6923  0013D8  12DE               	iorwf	postinc2,f,c
  6924  0013DA                     i2l3227:
  6925                           
  6926                           ; BSR set to: 15
  6927                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  6928  0013DA  010F               	movlb	15	; () banked
  6929  0013DC  AB52               	btfss	82,5,b	;volatile
  6930  0013DE  D00C               	goto	i2l3231
  6931                           
  6932                           ; BSR set to: 15
  6933                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  6934  0013E0  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6935  0013E4  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6936  0013E8  0E00               	movlw	0
  6937  0013EA  12DE               	iorwf	postinc2,f,c
  6938  0013EC  0E00               	movlw	0
  6939  0013EE  12DE               	iorwf	postinc2,f,c
  6940  0013F0  0E04               	movlw	4
  6941  0013F2  12DE               	iorwf	postinc2,f,c
  6942  0013F4  0E00               	movlw	0
  6943  0013F6  12DE               	iorwf	postinc2,f,c
  6944  0013F8                     i2l3231:
  6945                           
  6946                           ; BSR set to: 15
  6947                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  6948  0013F8  010F               	movlb	15	; () banked
  6949  0013FA  AD52               	btfss	82,6,b	;volatile
  6950  0013FC  D00C               	goto	i2l3235
  6951                           
  6952                           ; BSR set to: 15
  6953                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  6954  0013FE  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6955  001402  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6956  001406  0E00               	movlw	0
  6957  001408  12DE               	iorwf	postinc2,f,c
  6958  00140A  0E00               	movlw	0
  6959  00140C  12DE               	iorwf	postinc2,f,c
  6960  00140E  0E08               	movlw	8
  6961  001410  12DE               	iorwf	postinc2,f,c
  6962  001412  0E00               	movlw	0
  6963  001414  12DE               	iorwf	postinc2,f,c
  6964  001416                     i2l3235:
  6965                           
  6966                           ; BSR set to: 15
  6967                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  6968  001416  010F               	movlb	15	; () banked
  6969  001418  AF52               	btfss	82,7,b	;volatile
  6970  00141A  D00C               	goto	i2l3239
  6971                           
  6972                           ; BSR set to: 15
  6973                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  6974  00141C  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6975  001420  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6976  001424  0E00               	movlw	0
  6977  001426  12DE               	iorwf	postinc2,f,c
  6978  001428  0E00               	movlw	0
  6979  00142A  12DE               	iorwf	postinc2,f,c
  6980  00142C  0E10               	movlw	16
  6981  00142E  12DE               	iorwf	postinc2,f,c
  6982  001430  0E00               	movlw	0
  6983  001432  12DE               	iorwf	postinc2,f,c
  6984  001434                     i2l3239:
  6985                           
  6986                           ; BSR set to: 15
  6987                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  6988  001434  CF51 F024          	movff	3921,??_CANreceiveMessage	;volatile
  6989  001438  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6990  00143A  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6991  00143C  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6992  00143E  0E15               	movlw	21
  6993  001440                     i2u356_45:
  6994  001440  90D8               	bcf	status,0,c
  6995  001442  3624               	rlcf	??_CANreceiveMessage,f,c
  6996  001444  3625               	rlcf	??_CANreceiveMessage+1,f,c
  6997  001446  3626               	rlcf	??_CANreceiveMessage+2,f,c
  6998  001448  3627               	rlcf	??_CANreceiveMessage+3,f,c
  6999  00144A  2EE8               	decfsz	wreg,f,c
  7000  00144C  D7F9               	goto	i2u356_45
  7001  00144E  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7002  001452  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7003  001456  5024               	movf	??_CANreceiveMessage,w,c
  7004  001458  12DE               	iorwf	postinc2,f,c
  7005  00145A  5025               	movf	??_CANreceiveMessage+1,w,c
  7006  00145C  12DE               	iorwf	postinc2,f,c
  7007  00145E  5026               	movf	??_CANreceiveMessage+2,w,c
  7008  001460  12DE               	iorwf	postinc2,f,c
  7009  001462  5027               	movf	??_CANreceiveMessage+3,w,c
  7010  001464  12DE               	iorwf	postinc2,f,c
  7011  001466                     i2l3241:
  7012                           
  7013                           ; BSR set to: 15
  7014                           ;inc\CANlib.h: 581: }
  7015                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7016  001466  010F               	movlb	15	; () banked
  7017  001468  9F50               	bcf	80,7,b	;volatile
  7018                           
  7019                           ; BSR set to: 15
  7020                           ;inc\CANlib.h: 584: return (error);
  7021                           ;	Return value of _CANreceiveMessage is never used
  7022  00146A  0012               	return	
  7023  00146C                     i2l390:
  7024                           
  7025                           ; BSR set to: 15
  7026                           ;inc\CANlib.h: 585: }
  7027                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7028  00146C  AE60               	btfss	3936,7,c	;volatile
  7029  00146E  0012               	return	
  7030                           
  7031                           ; BSR set to: 15
  7032                           ;inc\CANlib.h: 588: {
  7033                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7034  001470  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7035  001474  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7036  001478  6ADE               	clrf	postinc2,c
  7037  00147A  6ADE               	clrf	postinc2,c
  7038  00147C  6ADE               	clrf	postinc2,c
  7039  00147E  6ADD               	clrf	postdec2,c
  7040                           
  7041                           ; BSR set to: 15
  7042                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7043  001480  EE20 F004          	lfsr	2,4
  7044  001484  5022               	movf	CANreceiveMessage@msg,w,c
  7045  001486  26D9               	addwf	fsr2l,f,c
  7046  001488  5023               	movf	CANreceiveMessage@msg+1,w,c
  7047  00148A  22DA               	addwfc	fsr2h,f,c
  7048  00148C  CF66 FFDF          	movff	3942,indf2	;volatile
  7049                           
  7050                           ; BSR set to: 15
  7051                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7052  001490  EE20 F005          	lfsr	2,5
  7053  001494  5022               	movf	CANreceiveMessage@msg,w,c
  7054  001496  26D9               	addwf	fsr2l,f,c
  7055  001498  5023               	movf	CANreceiveMessage@msg+1,w,c
  7056  00149A  22DA               	addwfc	fsr2h,f,c
  7057  00149C  CF67 FFDF          	movff	3943,indf2	;volatile
  7058                           
  7059                           ; BSR set to: 15
  7060                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7061  0014A0  EE20 F006          	lfsr	2,6
  7062  0014A4  5022               	movf	CANreceiveMessage@msg,w,c
  7063  0014A6  26D9               	addwf	fsr2l,f,c
  7064  0014A8  5023               	movf	CANreceiveMessage@msg+1,w,c
  7065  0014AA  22DA               	addwfc	fsr2h,f,c
  7066  0014AC  CF68 FFDF          	movff	3944,indf2	;volatile
  7067                           
  7068                           ; BSR set to: 15
  7069                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7070  0014B0  EE20 F007          	lfsr	2,7
  7071  0014B4  5022               	movf	CANreceiveMessage@msg,w,c
  7072  0014B6  26D9               	addwf	fsr2l,f,c
  7073  0014B8  5023               	movf	CANreceiveMessage@msg+1,w,c
  7074  0014BA  22DA               	addwfc	fsr2h,f,c
  7075  0014BC  CF69 FFDF          	movff	3945,indf2	;volatile
  7076                           
  7077                           ; BSR set to: 15
  7078                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7079  0014C0  EE20 F008          	lfsr	2,8
  7080  0014C4  5022               	movf	CANreceiveMessage@msg,w,c
  7081  0014C6  26D9               	addwf	fsr2l,f,c
  7082  0014C8  5023               	movf	CANreceiveMessage@msg+1,w,c
  7083  0014CA  22DA               	addwfc	fsr2h,f,c
  7084  0014CC  CF6A FFDF          	movff	3946,indf2	;volatile
  7085                           
  7086                           ; BSR set to: 15
  7087                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7088  0014D0  EE20 F009          	lfsr	2,9
  7089  0014D4  5022               	movf	CANreceiveMessage@msg,w,c
  7090  0014D6  26D9               	addwf	fsr2l,f,c
  7091  0014D8  5023               	movf	CANreceiveMessage@msg+1,w,c
  7092  0014DA  22DA               	addwfc	fsr2h,f,c
  7093  0014DC  CF6B FFDF          	movff	3947,indf2	;volatile
  7094                           
  7095                           ; BSR set to: 15
  7096                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7097  0014E0  EE20 F00A          	lfsr	2,10
  7098  0014E4  5022               	movf	CANreceiveMessage@msg,w,c
  7099  0014E6  26D9               	addwf	fsr2l,f,c
  7100  0014E8  5023               	movf	CANreceiveMessage@msg+1,w,c
  7101  0014EA  22DA               	addwfc	fsr2h,f,c
  7102  0014EC  CF6C FFDF          	movff	3948,indf2	;volatile
  7103                           
  7104                           ; BSR set to: 15
  7105                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7106  0014F0  EE20 F00B          	lfsr	2,11
  7107  0014F4  5022               	movf	CANreceiveMessage@msg,w,c
  7108  0014F6  26D9               	addwf	fsr2l,f,c
  7109  0014F8  5023               	movf	CANreceiveMessage@msg+1,w,c
  7110  0014FA  22DA               	addwfc	fsr2h,f,c
  7111  0014FC  CF6D FFDF          	movff	3949,indf2	;volatile
  7112                           
  7113                           ; BSR set to: 15
  7114                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7115  001500  EE20 F00E          	lfsr	2,14
  7116  001504  5022               	movf	CANreceiveMessage@msg,w,c
  7117  001506  26D9               	addwf	fsr2l,f,c
  7118  001508  5023               	movf	CANreceiveMessage@msg+1,w,c
  7119  00150A  22DA               	addwfc	fsr2h,f,c
  7120  00150C  AC65               	btfss	3941,6,c	;volatile
  7121  00150E  D002               	goto	i2u358_40
  7122  001510  0E01               	movlw	1
  7123  001512  D001               	goto	i2u358_46
  7124  001514                     i2u358_40:
  7125  001514  0E00               	movlw	0
  7126  001516                     i2u358_46:
  7127  001516  6EDF               	movwf	indf2,c
  7128                           
  7129                           ; BSR set to: 15
  7130                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7131  001518  EE20 F00D          	lfsr	2,13
  7132  00151C  5022               	movf	CANreceiveMessage@msg,w,c
  7133  00151E  26D9               	addwf	fsr2l,f,c
  7134  001520  5023               	movf	CANreceiveMessage@msg+1,w,c
  7135  001522  22DA               	addwfc	fsr2h,f,c
  7136  001524  5065               	movf	3941,w,c	;volatile
  7137  001526  0B0F               	andlw	15
  7138  001528  6EDF               	movwf	indf2,c
  7139                           
  7140                           ; BSR set to: 15
  7141                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7142  00152A  EE20 F00C          	lfsr	2,12
  7143  00152E  5022               	movf	CANreceiveMessage@msg,w,c
  7144  001530  26D9               	addwf	fsr2l,f,c
  7145  001532  5023               	movf	CANreceiveMessage@msg+1,w,c
  7146  001534  22DA               	addwfc	fsr2h,f,c
  7147  001536  A662               	btfss	3938,3,c	;volatile
  7148  001538  D002               	goto	i2u359_40
  7149  00153A  0E01               	movlw	1
  7150  00153C  D001               	goto	i2u359_46
  7151  00153E                     i2u359_40:
  7152  00153E  0E00               	movlw	0
  7153  001540                     i2u359_46:
  7154  001540  6EDF               	movwf	indf2,c
  7155                           
  7156                           ; BSR set to: 15
  7157                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7158  001542  B662               	btfsc	3938,3,c	;volatile
  7159  001544  D043               	goto	i2l3277
  7160                           
  7161                           ; BSR set to: 15
  7162                           ;inc\CANlib.h: 606: {
  7163                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7164  001546  CF61 F024          	movff	3937,??_CANreceiveMessage	;volatile
  7165  00154A  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7166  00154C  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7167  00154E  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7168  001550  0E03               	movlw	3
  7169  001552                     i2u361_45:
  7170  001552  90D8               	bcf	status,0,c
  7171  001554  3624               	rlcf	??_CANreceiveMessage,f,c
  7172  001556  3625               	rlcf	??_CANreceiveMessage+1,f,c
  7173  001558  3626               	rlcf	??_CANreceiveMessage+2,f,c
  7174  00155A  3627               	rlcf	??_CANreceiveMessage+3,f,c
  7175  00155C  2EE8               	decfsz	wreg,f,c
  7176  00155E  D7F9               	goto	i2u361_45
  7177  001560  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7178  001564  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7179  001568  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  7180  00156C  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7181  001570  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7182  001574  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7183                           
  7184                           ; BSR set to: 15
  7185                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7186  001578  3862               	swapf	3938,w,c	;volatile
  7187  00157A  42E8               	rrncf	wreg,f,c
  7188  00157C  0B07               	andlw	7
  7189  00157E  0B07               	andlw	7
  7190  001580  6E2D               	movwf	CANreceiveMessage@tamp,c
  7191                           
  7192                           ; BSR set to: 15
  7193                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7194  001582  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7195  001586  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7196  00158A  CFDE F024          	movff	postinc2,??_CANreceiveMessage
  7197  00158E  CFDE F025          	movff	postinc2,??_CANreceiveMessage+1
  7198  001592  CFDE F026          	movff	postinc2,??_CANreceiveMessage+2
  7199  001596  CFDE F027          	movff	postinc2,??_CANreceiveMessage+3
  7200  00159A  502D               	movf	CANreceiveMessage@tamp,w,c
  7201  00159C  2424               	addwf	??_CANreceiveMessage,w,c
  7202  00159E  6E28               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7203  0015A0  0E00               	movlw	0
  7204  0015A2  2025               	addwfc	??_CANreceiveMessage+1,w,c
  7205  0015A4  6E29               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7206  0015A6  0E00               	movlw	0
  7207  0015A8  2026               	addwfc	??_CANreceiveMessage+2,w,c
  7208  0015AA  6E2A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7209  0015AC  0E00               	movlw	0
  7210  0015AE  2027               	addwfc	??_CANreceiveMessage+3,w,c
  7211  0015B0  6E2B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7212  0015B2  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7213  0015B6  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7214  0015BA  C028  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7215  0015BE  C029  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7216  0015C2  C02A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7217  0015C6  C02B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7218                           
  7219                           ;inc\CANlib.h: 610: }
  7220  0015CA  D088               	goto	i2l3303
  7221  0015CC                     i2l3277:
  7222                           
  7223                           ; BSR set to: 15
  7224                           ;inc\CANlib.h: 611: else
  7225                           ;inc\CANlib.h: 612: {
  7226                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7227  0015CC  CF64 F024          	movff	3940,??_CANreceiveMessage	;volatile
  7228  0015D0  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7229  0015D2  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7230  0015D4  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7231  0015D6  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7232  0015DA  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7233  0015DE  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  7234  0015E2  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7235  0015E6  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7236  0015EA  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7237                           
  7238                           ; BSR set to: 15
  7239                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7240  0015EE  CF63 F024          	movff	3939,??_CANreceiveMessage	;volatile
  7241  0015F2  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7242  0015F4  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7243  0015F6  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7244  0015F8  C026  F027         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7245  0015FC  C025  F026         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7246  001600  C024  F025         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7247  001604  6A24               	clrf	??_CANreceiveMessage,c
  7248  001606  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7249  00160A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7250  00160E  5024               	movf	??_CANreceiveMessage,w,c
  7251  001610  26DE               	addwf	postinc2,f,c
  7252  001612  5025               	movf	??_CANreceiveMessage+1,w,c
  7253  001614  22DE               	addwfc	postinc2,f,c
  7254  001616  5026               	movf	??_CANreceiveMessage+2,w,c
  7255  001618  22DE               	addwfc	postinc2,f,c
  7256  00161A  5027               	movf	??_CANreceiveMessage+3,w,c
  7257  00161C  22DE               	addwfc	postinc2,f,c
  7258                           
  7259                           ; BSR set to: 15
  7260                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7261  00161E  A062               	btfss	3938,0,c	;volatile
  7262  001620  D00C               	goto	i2l3285
  7263                           
  7264                           ; BSR set to: 15
  7265                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7266  001622  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7267  001626  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7268  00162A  0E00               	movlw	0
  7269  00162C  12DE               	iorwf	postinc2,f,c
  7270  00162E  0E00               	movlw	0
  7271  001630  12DE               	iorwf	postinc2,f,c
  7272  001632  0E01               	movlw	1
  7273  001634  12DE               	iorwf	postinc2,f,c
  7274  001636  0E00               	movlw	0
  7275  001638  12DE               	iorwf	postinc2,f,c
  7276  00163A                     i2l3285:
  7277                           
  7278                           ; BSR set to: 15
  7279                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7280  00163A  A262               	btfss	3938,1,c	;volatile
  7281  00163C  D00C               	goto	i2l3289
  7282                           
  7283                           ; BSR set to: 15
  7284                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7285  00163E  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7286  001642  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7287  001646  0E00               	movlw	0
  7288  001648  12DE               	iorwf	postinc2,f,c
  7289  00164A  0E00               	movlw	0
  7290  00164C  12DE               	iorwf	postinc2,f,c
  7291  00164E  0E02               	movlw	2
  7292  001650  12DE               	iorwf	postinc2,f,c
  7293  001652  0E00               	movlw	0
  7294  001654  12DE               	iorwf	postinc2,f,c
  7295  001656                     i2l3289:
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7299  001656  AA62               	btfss	3938,5,c	;volatile
  7300  001658  D00C               	goto	i2l3293
  7301                           
  7302                           ; BSR set to: 15
  7303                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7304  00165A  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7305  00165E  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7306  001662  0E00               	movlw	0
  7307  001664  12DE               	iorwf	postinc2,f,c
  7308  001666  0E00               	movlw	0
  7309  001668  12DE               	iorwf	postinc2,f,c
  7310  00166A  0E04               	movlw	4
  7311  00166C  12DE               	iorwf	postinc2,f,c
  7312  00166E  0E00               	movlw	0
  7313  001670  12DE               	iorwf	postinc2,f,c
  7314  001672                     i2l3293:
  7315                           
  7316                           ; BSR set to: 15
  7317                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7318  001672  AC62               	btfss	3938,6,c	;volatile
  7319  001674  D00C               	goto	i2l3297
  7320                           
  7321                           ; BSR set to: 15
  7322                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  7323  001676  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7324  00167A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7325  00167E  0E00               	movlw	0
  7326  001680  12DE               	iorwf	postinc2,f,c
  7327  001682  0E00               	movlw	0
  7328  001684  12DE               	iorwf	postinc2,f,c
  7329  001686  0E08               	movlw	8
  7330  001688  12DE               	iorwf	postinc2,f,c
  7331  00168A  0E00               	movlw	0
  7332  00168C  12DE               	iorwf	postinc2,f,c
  7333  00168E                     i2l3297:
  7334                           
  7335                           ; BSR set to: 15
  7336                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7337  00168E  AE62               	btfss	3938,7,c	;volatile
  7338  001690  D00C               	goto	i2l3301
  7339                           
  7340                           ; BSR set to: 15
  7341                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  7342  001692  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7343  001696  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7344  00169A  0E00               	movlw	0
  7345  00169C  12DE               	iorwf	postinc2,f,c
  7346  00169E  0E00               	movlw	0
  7347  0016A0  12DE               	iorwf	postinc2,f,c
  7348  0016A2  0E10               	movlw	16
  7349  0016A4  12DE               	iorwf	postinc2,f,c
  7350  0016A6  0E00               	movlw	0
  7351  0016A8  12DE               	iorwf	postinc2,f,c
  7352  0016AA                     i2l3301:
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7356  0016AA  CF61 F024          	movff	3937,??_CANreceiveMessage	;volatile
  7357  0016AE  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7358  0016B0  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7359  0016B2  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7360  0016B4  0E15               	movlw	21
  7361  0016B6                     i2u367_45:
  7362  0016B6  90D8               	bcf	status,0,c
  7363  0016B8  3624               	rlcf	??_CANreceiveMessage,f,c
  7364  0016BA  3625               	rlcf	??_CANreceiveMessage+1,f,c
  7365  0016BC  3626               	rlcf	??_CANreceiveMessage+2,f,c
  7366  0016BE  3627               	rlcf	??_CANreceiveMessage+3,f,c
  7367  0016C0  2EE8               	decfsz	wreg,f,c
  7368  0016C2  D7F9               	goto	i2u367_45
  7369  0016C4  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7370  0016C8  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7371  0016CC  5024               	movf	??_CANreceiveMessage,w,c
  7372  0016CE  12DE               	iorwf	postinc2,f,c
  7373  0016D0  5025               	movf	??_CANreceiveMessage+1,w,c
  7374  0016D2  12DE               	iorwf	postinc2,f,c
  7375  0016D4  5026               	movf	??_CANreceiveMessage+2,w,c
  7376  0016D6  12DE               	iorwf	postinc2,f,c
  7377  0016D8  5027               	movf	??_CANreceiveMessage+3,w,c
  7378  0016DA  12DE               	iorwf	postinc2,f,c
  7379  0016DC                     i2l3303:
  7380                           
  7381                           ; BSR set to: 15
  7382                           ;inc\CANlib.h: 629: }
  7383                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  7384  0016DC  9E60               	bcf	3936,7,c	;volatile
  7385                           
  7386                           ; BSR set to: 15
  7387                           ;inc\CANlib.h: 632: return (error);
  7388                           ;	Return value of _CANreceiveMessage is never used
  7389  0016DE  0012               	return	
  7390  0016E0                     __end_of_CANreceiveMessage:
  7391                           	opt stack 0
  7392                           pclatu	equ	0xFFB
  7393                           pclath	equ	0xFFA
  7394                           tblptru	equ	0xFF8
  7395                           tblptrh	equ	0xFF7
  7396                           tblptrl	equ	0xFF6
  7397                           tablat	equ	0xFF5
  7398                           prodh	equ	0xFF4
  7399                           prodl	equ	0xFF3
  7400                           intcon	equ	0xFF2
  7401                           postinc0	equ	0xFEE
  7402                           fsr0h	equ	0xFEA
  7403                           fsr0l	equ	0xFE9
  7404                           wreg	equ	0xFE8
  7405                           fsr1h	equ	0xFE2
  7406                           fsr1l	equ	0xFE1
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           fsr2h	equ	0xFDA
  7411                           fsr2l	equ	0xFD9
  7412                           status	equ	0xFD8
  7413                           
  7414 ;; *************** function _CANisRxReady *****************
  7415 ;; Defined at:
  7416 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      unsigned char 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7430 ;;      Params:         0       0       0       0
  7431 ;;      Locals:         1       0       0       0
  7432 ;;      Temps:          0       0       0       0
  7433 ;;      Totals:         1       0       0       0
  7434 ;;Total ram usage:        1 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_ISR_Alta
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text20
  7444  0020EE                     __ptext20:
  7445                           	opt stack 0
  7446  0020EE                     _CANisRxReady:
  7447                           	opt stack 26
  7448                           
  7449                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  7450                           
  7451                           ; BSR set to: 15
  7452                           ;incstack = 0
  7453  0020EE  0E01               	movlw	1
  7454  0020F0  6E22               	movwf	_CANisRxReady$2699,c
  7455  0020F2  BE60               	btfsc	3936,7,c	;volatile
  7456  0020F4  D005               	goto	i2l541
  7457  0020F6  010F               	movlb	15	; () banked
  7458  0020F8  BF50               	btfsc	80,7,b	;volatile
  7459  0020FA  D002               	goto	i2l541
  7460                           
  7461                           ; BSR set to: 15
  7462  0020FC  0E00               	movlw	0
  7463  0020FE  6E22               	movwf	_CANisRxReady$2699,c
  7464  002100                     i2l541:
  7465  002100  5022               	movf	_CANisRxReady$2699,w,c
  7466  002102  0012               	return	
  7467  002104                     __end_of_CANisRxReady:
  7468                           	opt stack 0
  7469  0000                     pclatu	equ	0xFFB
  7470                           pclath	equ	0xFFA
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           intcon	equ	0xFF2
  7478                           postinc0	equ	0xFEE
  7479                           fsr0h	equ	0xFEA
  7480                           fsr0l	equ	0xFE9
  7481                           wreg	equ	0xFE8
  7482                           fsr1h	equ	0xFE2
  7483                           fsr1l	equ	0xFE1
  7484                           indf2	equ	0xFDF
  7485                           postinc2	equ	0xFDE
  7486                           postdec2	equ	0xFDD
  7487                           fsr2h	equ	0xFDA
  7488                           fsr2l	equ	0xFD9
  7489                           status	equ	0xFD8
  7490                           pclatu	equ	0xFFB
  7491                           pclath	equ	0xFFA
  7492                           tblptru	equ	0xFF8
  7493                           tblptrh	equ	0xFF7
  7494                           tblptrl	equ	0xFF6
  7495                           tablat	equ	0xFF5
  7496                           prodh	equ	0xFF4
  7497                           prodl	equ	0xFF3
  7498                           intcon	equ	0xFF2
  7499                           postinc0	equ	0xFEE
  7500                           fsr0h	equ	0xFEA
  7501                           fsr0l	equ	0xFE9
  7502                           wreg	equ	0xFE8
  7503                           fsr1h	equ	0xFE2
  7504                           fsr1l	equ	0xFE1
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512                           	psect	rparam
  7513  0000                     pclatu	equ	0xFFB
  7514                           pclath	equ	0xFFA
  7515                           tblptru	equ	0xFF8
  7516                           tblptrh	equ	0xFF7
  7517                           tblptrl	equ	0xFF6
  7518                           tablat	equ	0xFF5
  7519                           prodh	equ	0xFF4
  7520                           prodl	equ	0xFF3
  7521                           intcon	equ	0xFF2
  7522                           postinc0	equ	0xFEE
  7523                           fsr0h	equ	0xFEA
  7524                           fsr0l	equ	0xFE9
  7525                           wreg	equ	0xFE8
  7526                           fsr1h	equ	0xFE2
  7527                           fsr1l	equ	0xFE1
  7528                           indf2	equ	0xFDF
  7529                           postinc2	equ	0xFDE
  7530                           postdec2	equ	0xFDD
  7531                           fsr2h	equ	0xFDA
  7532                           fsr2l	equ	0xFD9
  7533                           status	equ	0xFD8
  7534                           
  7535                           	psect	temp
  7536  000045                     btemp:
  7537                           	opt stack 0
  7538  000045                     	ds	1
  7539  0000                     int$flags	set	btemp
  7540                           pclatu	equ	0xFFB
  7541                           pclath	equ	0xFFA
  7542                           tblptru	equ	0xFF8
  7543                           tblptrh	equ	0xFF7
  7544                           tblptrl	equ	0xFF6
  7545                           tablat	equ	0xFF5
  7546                           prodh	equ	0xFF4
  7547                           prodl	equ	0xFF3
  7548                           intcon	equ	0xFF2
  7549                           postinc0	equ	0xFEE
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           fsr1h	equ	0xFE2
  7554                           fsr1l	equ	0xFE1
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           postdec2	equ	0xFDD
  7558                           fsr2h	equ	0xFDA
  7559                           fsr2l	equ	0xFD9
  7560                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      68
    BANK0           160     23      31
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> status_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    _status_ok->_CANsendMessage
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___lwdiv

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->_CANreceiveMessage

Critical Paths under _main in BANK0

    _status_ok->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___lwdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14907
                                             21 BANK0      2     2      0
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                         _SetDCEPWM1
                            ___awdiv
               _board_initialization
                          _status_ok
 ---------------------------------------------------------------------------------
 (1) _status_ok                                            0     0      0    3365
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3365
                                             26 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    9294
                      _CANInitialize
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     571
                                              2 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     386
                                             26 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     484
                                             26 COMRAM     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenEPWM1                                            1     1      0      15
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8194
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             26 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             26 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1369
                                             26 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     2      0     395
                                              3 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             26 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Alta                                            14    14      0    1161
                                             12 COMRAM    14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___lwdiv
   _CANisRXwarningON
   _CANisTXwarningON
   _SetDCEPWM1
   ___awdiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenEPWM1
     _OpenTimer2
     _SetDCEPWM1
     _delay_ms
       ___wmul
   _status_ok
     _CANsendMessage

 _ISR_Alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     17      1F       4       19.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      44       1       72.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      63       9        0.0%
DATA                 0      0      63      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Dec 02 22:05:50 2015

           ??_CANisTXwarningON 003C                              _i 0011           __end_of_CANSetFilter 0A60  
                 ___awdiv@sign 0061                             _id 0001            ___wmul@multiplicand 003E  
                  __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                  __CFG_OSC$HS 000000                    __CFG_LVP$ON 000000                            l500 09EA  
                          l420 18F0                            l412 18B8                            l501 09EE  
                          l413 18BC                            l502 09F8                            l430 19E8  
                          l414 18C6                            l350 0B1E                            l503 09FC  
                          l431 19F2                            l423 19BA                            l415 18CA  
                          l343 0CDC                            l504 0A06                            l424 19BE  
                          l416 18D4                            l360 0CF6                            l344 0A76  
                          l505 0A0A                            l425 19C8                            l417 18D8  
                          l361 0DEA                            l353 0C28                            l345 0A7A  
                          l506 0A14                            l450 04EE                            l426 19CC  
                          l418 18E2                            l338 1AF2                            l370 0EB4  
                          l362 0D7C                            l354 0C2C                            l346 0B6E  
                          l451 04F8                            l443 04C0                            l427 19D6  
                          l419 18E6                            l339 1AFC                            l363 0D86  
                          l355 0C38                            l347 0B00                            l611 1C16  
                          l460 05EE                            l444 04C4                            l428 19DA  
                          l364 0D90                            l348 0B0A                            l461 05F2  
                          l445 04CE                            l429 19E4                            l373 0F6E  
                          l365 0D9A                            l349 0B14                            l630 1EF2  
                          l470 06EA                            l462 05FC                            l454 05C4  
                          l446 04D2                            l382 1120                            l374 0F72  
                          l358 0F58                            l631 1EF4                            l471 06F4  
                          l455 05C8                            l447 04DC                            l383 1124  
                          l375 1066                            l359 0CF2                            l480 07EC  
                          l472 06F8                            l456 05D2                            l448 04E0  
                          l384 1130                            l376 0FF8                            l368 0EA4  
                          l481 07F0                            l473 0702                            l465 06CA  
                          l457 05D6                            l449 04EA                            l377 1002  
                          l369 0EA8                            l490 08E8                            l482 07FA  
                          l466 06CE                            l458 05E0                            l378 100C  
                          l491 08F2                            l483 07FE                            l467 06D8  
                          l459 05E4                            l379 1016                            l492 08F6  
                          l484 0808                            l476 07D0                            l468 06DC  
                          l493 0900                            l477 07D4                            l469 06E6  
                          l549 209E                            l494 0904                            l478 07DE  
                          l495 090E                            l487 08D6                            l479 07E2  
                          l488 08DA                            l489 08E4                            l498 09DC  
                          l499 09E0                            l667 20E8                            l668 20EA  
                 __CFG_CPB$OFF 000000                            _PR2 000FCB                   __CFG_CPD$OFF 000000  
                          _msg 0013                            wreg 000FE8                   __CFG_WDT$OFF 000000  
                         l1072 1FA6                           l4003 1B08                           l4005 1B4C  
                         l4043 0B28                           l4221 1134                           l4215 1114  
                         l4119 0DA4                           l4063 0C1C                           l4145 0EB8  
                         l3603 18F4                           l4243 2092                           l4139 0E98  
                         l4403 1BF8                           l4261 1F7A                           l4069 0C3C  
                         l4335 1F0A                           l3543 210A                           l4257 1F6C  
                         l4361 1DE0                           l3713 02DC                           l3609 193A  
                         l3561 178E                           l4433 1C54                           l4409 1C04  
                         l4259 1F76                           l4371 1E08                           l4355 1DCE  
                         l3811 0600                           l3731 038C                           l3635 19F6  
                         l4195 1020                           l4443 1C90                           l4269 1F9A  
                         l4453 1CCE                           l4367 1DFA                           l4383 1E34  
                         l4439 1C7E                           l4369 1E04                           l3913 0912  
                         l3817 0646                           l3577 183A                           l4449 1CBC  
                         l4387 1E48                           l4379 1E28                           l3851 074C  
                         l3659 00CE                           l4459 1CFA                           l3845 0706  
                         l3749 043C                           l3677 017C                           l3919 0958  
                         l3783 0542                           l3695 022C                           l3777 04FC  
                         l3947 0A18                           l3885 0852                           l3879 080C  
                         l3997 1AEA                           l3999 1B00                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u4005 1816                           u1710 212E  
                         u1720 213A                           u5010 0B46                           u5020 0B90  
                         u4205 00AA                           u4310 0260                           u4230 0100  
                         u5015 0B3C                           u4160 1A16                           u4080 1914  
                         u5025 0B86                           u4315 0254                           u4235 00F4  
                         u5035 0BF0                           u5140 0DC2                           u4405 0418  
                         u4325 02B8                           u4245 0158                           u4165 1A0A  
                         u4085 1908                           u4350 0310                           u4270 01B0  
                         u4190 0052                           u5150 0E0C                           u5145 0DB8  
                         u4355 0304                           u4275 01A4                           u4195 0046  
                         u5155 0E02                           u4365 0368                           u4285 0208  
                         u5165 0E6C                           u4390 03C0                           u5270 103E  
                         u5335 2046                           u4800 0932                           u4720 082C  
                         u4640 0726                           u4560 0620                           u4480 051C  
                         u5280 1088                           u4395 03B4                           u5275 1034  
                         u4805 0926                           u4725 0820                           u4645 071A  
                         u4565 0614                           u4485 0510                           u5285 107E  
                         u3950 1712                           u5295 10E8                           u3955 1706  
                         u5547 2094                           u3965 176A                           u3990 17BE  
                         u4880 0A38                           u3995 17B2                           u4885 0A2C  
                         _TMR2 000FCC            __size_of_CANSetMask 035E                           _main 1BF0  
                         _read 0012                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           btemp 0045  
             __end_of_ADC_Read 1F52                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0016                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000010               _CANOperationMode 2104  
              _brake_value_PWM 000E                   _status_array 0077                _brake_value_inc 000F  
   __size_of_CANreceiveMessage 050C                          ?_main 0022                __end_of___awdiv 1E52  
              ___awdiv@divisor 003E                          _T2CON 000FCA                __end_of___lwdiv 1FB0  
                        i2l541 2100                          i2l390 146C                          i2l598 1D76  
              ___awdiv@counter 0060                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
            _CANisRxReady$2699 0022                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1DB6  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 006D  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0220           __end_of_CANisRxReady 2104  
                        tablat 000FF5                          status 000FD8                 __CFG_PBADEN$ON 000000  
                   _SetDCEPWM1 203C                __initialization 1FB0                   __end_of_main 1CFE  
__size_of_board_initialization 009A               _brake_signal_CAN 000D                         ??_main 0075  
                __activetblptr 000002                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 003C                __CFG_BBSIZ$1024 000000  
                       i2l3301 16AA                         i2l3303 16DC                         i2l3231 13F8  
                       i2l3223 13BC                         i2l3215 134C                         i2l3241 1466  
                       i2l3235 1416                         i2l3227 13DA                     _OpenTimer2 20D2  
                       i2l3239 1434                         i2l3293 1672                         i2l3285 163A  
                       i2l3277 15CC                         i2l3455 1D66                         i2l3447 1D38  
                       i2l3297 168E                         i2l3289 1656                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 0064             CANsendMessage@tamp 0068               __end_of_delay_ms 20A8  
        __size_of_CANSetFilter 0A46                 __CFG_XINST$OFF 000000             __size_of_OpenEPWM1 0010  
                       ___wmul 20A8                      ??___awdiv 0040                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 0040                   ??_CANSetMask 0060               OpenTimer2@config 003C  
                       clear_0 1FB6                         clear_1 1FC4               ___awdiv@quotient 0062  
                       _period 0043                __CFG_BOREN$BOHW 000000                   __pdataCOMRAM 0041  
                    ?_ADC_Read 0022                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 0010                   _CANSetFilter 001A  
                   __accesstop 0060        __end_of__initialization 1FE8             __end_of_CANSetMask 1A3E  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000C                    ?_SetDCEPWM1 003C  
               __pcstackCOMRAM 0022                      ?_ISR_Alta 0022          CANSetFilter@numBuffer 0064  
              OpenEPWM1@period 003C      __size_of_CANisTXwarningON 000C                     ??_ADC_Read 0063  
        __size_of_CANisRxReady 0016              __end_of_OpenEPWM1 2126       __end_of_CANOperationMode 2116  
                   __pbssBANK0 0077                    ?_OpenTimer2 0022        __size_of_CANsendMessage 0774  
                   ??_ISR_Alta 002E                        ?___wmul 003C                   _CANisRxReady 20EE  
                      _ECCPR1L 000FBB                        _CANSTAT 000F6E                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72         __size_of_CANInitialize 01B2  
                    ?_delay_ms 0062                        _RXB0DLC 000F65                        _RXB1DLC 000F55  
                      _RXB0CON 000F60            __size_of_SetDCEPWM1 003A                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
          CANsendMessage@flags 0067             __size_of_status_ok 0046                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 0062                        ___awdiv 1DB6  
              __size_of___wmul 002A                        ___lwdiv 1F52           CANInitialize@propSeg 0072  
                      __pcinit 1FB0                        __ramtop 0300            __size_of_OpenTimer2 001C  
                      __ptext0 1BF0                        __ptext1 1FF6                        __ptext2 0A60  
                      __ptext3 1E52                        __ptext4 2076                        __ptext5 20A8  
                      __ptext6 203C                        __ptext7 20D2                        __ptext8 2116  
                      __ptext9 1A3E                      _T2CONbits 000FCA                     ??_delay_ms 0040  
       CANreceiveMessage@error 002C   __end_of_board_initialization 1EEC                 __pintcode_body 1CFE  
         end_of_initialization 1FE8                  __Lmediumconst 0000                        int_func 1CFE  
             _CANisRXwarningON 2132                  _CANInitialize 1A3E                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE              __end_of_status_ok 203C  
                    _PORTBbits 000F81                 CANSetMask@mask 003C              _correction_factor 0007  
               CANSetMask@tamp 0065                 CANSetMask@type 0040               _CANisTXwarningON 2126  
            __size_of_ADC_Read 0066        _clock_counter_reference 0005                 _CANsendMessage 0A60  
             CANInitialize@BRP 006C               CANInitialize@SJW 006B                 ?_CANInitialize 0069  
             _ADC_wait_counter 000B                   ??_SetDCEPWM1 003E              __size_of_ISR_Alta 1DAE  
               __end_of___wmul 20D2                  __pidataCOMRAM 213E            start_initialization 1FB0  
           _number_of_measures 0042             __end_of_SetDCEPWM1 2076            CANSetMask@numBuffer 0064  
       __end_of_CANsendMessage 11D4              ?_CANOperationMode 0022                   ??_OpenTimer2 003C  
                    _OpenEPWM1 2116             ??_CANOperationMode 003C     CANInitialize@FilterConfig1 0073  
   CANInitialize@FilterConfig2 0074           _board_initialization 1E52                       ??___wmul 0040  
             __CFG_LPT1OSC$OFF 000000             __end_of_OpenTimer2 20EE         CANInitialize@phaseSeg1 0069  
       CANInitialize@phaseSeg2 006A                    __pbssCOMRAM 0001                  __pcstackBANK0 0060  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72            SetDCEPWM1@dutycycle 003C  
            __size_of_delay_ms 0032                ?_CANsendMessage 0060                     ?_OpenEPWM1 0022  
              ??_CANInitialize 006E             CANSetFilter@filter 003C               ___lwdiv@dividend 003C  
        ?_board_initialization 0022                      __pintcode 0008                       ?___awdiv 003C  
                     ?___lwdiv 003C                       _ECCP1CON 000FBA       __end_of_CANisRXwarningON 213E  
                  _COMSTATbits 000F74                       _ADC_Read 1EEC               ___lwdiv@quotient 0061  
        CANreceiveMessage@tamp 002D                 ___wmul@product 0060   _delay_quartz_frequency_value 0041  
                     _PIE1bits 000F9D                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 2132  
                     i2u350_45 12D0                       _PIR1bits 000F9E                       i2u361_45 1552  
                     i2u347_40 128C                       i2u347_46 128E                       i2u348_40 12BA  
                     i2u356_45 1440                       i2u348_46 12BC                       _PIR3bits 000FA4  
                     i2u358_40 1514                       i2u358_46 1516                       i2u359_40 153E  
                     i2u367_45 16B6                       i2u359_46 1540                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                       _RXM0SIDH 000F18  
                     _RXM0SIDL 000F19                       _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D  
                     _RXERRCNT 000F75                       _TXERRCNT 000F76                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 003C                _ADC_wait_factor 000C  
                    _status_ok 1FF6                  ?_CANSetFilter 003C                     _CANCONbits 000F6F  
                  ??_OpenEPWM1 003C                       __Hrparam 0000                   _RXB0SIDLbits 000F62  
       ??_board_initialization 0041               SetDCEPWM1@DCycle 0060                       __Lrparam 0000  
                 _RXB1SIDLbits 000F52                     _CANSetMask 16E0               __size_of___awdiv 009C  
             __size_of___lwdiv 005E                       _Tx_retry 0220                     ?_status_ok 0022  
                 _RXF0SIDLbits 000F01                       _delay_ms 2076                ___lwdiv@divisor 003E  
                 _RXF1SIDLbits 000F05                ___lwdiv@counter 0060                 ??_CANSetFilter 0060  
                     __ptext10 16E0                       __ptext11 001A                       __ptext20 20EE  
                     __ptext12 2104                       __ptext13 1DB6                       __ptext14 2126  
                     __ptext15 2132                       __ptext16 1EEC                       __ptext17 1F52  
                     __ptext19 11D4                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0066  
                 _remote_frame 0221                  __size_of_main 010E           CANreceiveMessage@msg 0022  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                   _TXB2SIDLbits 000F22  
                     int$flags 0045      __size_of_CANOperationMode 0012                  ?_CANisRxReady 0022  
                  _partial_sum 0009                    _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55  
                 _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60                    _RXB1CONbits 000F50  
            _CANreceiveMessage 11D4                   _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2  
             ??_CANsendMessage 003C             ?_CANreceiveMessage 0022       CANsendMessage@identifier 0060  
                     intlevel2 0000               CANSetFilter@tamp 0065               CANSetFilter@type 0040  
          ??_CANreceiveMessage 0024                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 003C                 ??_CANisRxReady 0022  
                  ?_CANSetMask 003C      __end_of_CANreceiveMessage 16E0                    ??_status_ok 0040  
            ?_CANisRXwarningON 0022             ??_CANisRXwarningON 003C          __end_of_CANInitialize 1BF0  
            ?_CANisTXwarningON 0022  
